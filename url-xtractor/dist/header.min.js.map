{"version":3,"sources":["header.js"],"names":["isNull","o","objTransform","j","k","obj","maxsize","propList","Object","keys","length","a","push","selectDivText","element","doc","document","text","$","body","createTextRange","range","moveToElementText","select","window","getSelection","selection","selectAllChildren","createRange","selectNodeContents","removeAllRanges","addRange","createCookie","name","value","days","date","Date","setTime","getTime","expires","toGMTString","cookie","readCookie","nameEQ","ca","split","i","c","charAt","substring","indexOf","eraseCookie","getOrdinal","n","parseFloat","parseInt","isNaN","s","v","getDecimalChar","toFixed","breadCrumb","elm","innerHTML","location","href","slice","toUpperCase","ieReadLocalFile","that","callback","encoding","request","XMLHttpRequest","ActiveXObject","fn","open","onreadystatechange","readyState","status","responseText","send","readLocalFile","reader","FileReader","files","onload","e","target","result","readAsText","readExcelFile","event","sheet","opts","toJson","ext","alasql","data","_","isObject","isEmpty","splice","replace","loadTextFile","f","sheetname","htmlstring","toLowerCase","endsWith","nodeName","outerHTML","replaceWith","JSON","prototype","toJSON","isFinite","this","valueOf","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","String","Number","Boolean","cx","escapable","gap","indent","meta","\b","\t","\n","\f","\r","\"","\\","rep","quote","string","lastIndex","test","charCodeAt","toString","str","key","holder","partial","mind","call","apply","join","hasOwnProperty","stringify","replacer","space","Error","","parse","reviver","walk","undefined","eval","SyntaxError","unflatten","Array","isArray","cur","prop","idx","last","temp","p","flatten","recurse","l","valueArray","size","stringifyOnce","printedObjects","printedObjectKeys","printedObjIndex","forEach","index","constructor","qualifiedKey","lpad","pad","zeroPad","negative","rpad","truncate","repeat","trim","ltrim","rtrim","crunch","ljust","width","substr","rjust","cjust","len","remain","pads","Math","floor","capitalize","toProperCase","txt","left","right","removePunctuation","hashCode","hash","enclose","byChar","escapeByCharWith","re","RegExp","regExpEscape","toHtml","toXml","toCsv","sepChar","quoteChar","escapeChar","forceEnclose","encloseit","isNumeric","toNumber","toInteger","dec","toDollar","dollarsymbol","x","x1","x2","toSql","wrap","toYaml","escape","startsWith","removeDiacritics","newstr","diaChanges","base","letters","isDateMaybe","d","month","day","year","t","elt","from","arguments","ceil","isInteger","CSV","delimiter","detectedDelimiter","autodetect","quoteCharCnt","'","detectedQuote","outputQuote","limit","isFirstRowHeader","headerToUpper","headerToLower","skipEmptyRows","skipEmptyRowCnt","skip","relaxedMode","ignoreQuote","relaxedInfo","excelMode","sortNeeded","addSequence","fieldImbalance","fieldImbalanceRows","headerImbalance","headerImbalanceRows","headerErrors","decodeBackslashLiterals","decimalChar","maxColumnsFound","headerColumns","prevColumnsFound","dataRowsFound","arHeaderRow","table","statsCnt","displayPoss","sortPoss","sortIgnoreCase","useStringSub","stringSubMap","unescapeLiterals","csv","ss","r","start","end","row","savestart","linestart","firstRowColumnsFound","chars","cc","prevCh","cnt","spacesFound","detect","comma","semi","tab","pipe","colon","caret","error","column","dateCnt","intCnt","realCnt","emptyCnt","bitCnt","logicalCnt","equalUsed","fieldType","fieldDecs","fieldPrec","fldMinLen","MAX_VALUE","fldMaxLen","z","ch","dc","shift","field","determineCsvColType","sort","sortCsv","setSortFlds","flds","b","q","colPos","eol","unshift","cell","rr","mye","myhid","SeqObj","nInit","next","curr","reset","queryGetVal","rownum","temGetVal","seq","options","rn","nr","nh","nf","br","lb","rb","global","doTransformations","temHandler","tem","temOptions","cmd","lines","csvFromTem","temHead","temBetween","temFoot","temCond","seqobj","csvToTable","addHeaderIfMissing","addLineNumbers","addSummary","sumFields","getFldPosArr","attr1","attr1Row","attr2","attr2Row","dateOutFormat","moment","dateformat","format","csvToTableHeaderValue","csvToWikiTable","csvToXml","topName","rowName","hdr","topLevel","rowLevel","h","getCsvHeader","csvToXmlProperties","option","skipEmpty","csvToJSON","kp","emptyIsNull","fldcnt","lineMode","isKeyed","mongoDbMode","yep","firstArray","tryToObject","csvToJSONSpecial","getElementById","checked","forceWrap","autoNum","toLocaleLowerCase","nullIsNull","newa","kn","dups","keyvalue","newaa","csv2jsonObj","delete_null_properties","spacing","newhdr","csvToJSONArray","useFieldsData","fldPropName","dataPropName","csvToJSONColumnArray","crow","jsonToCsv","objArray","bIncludeHeaders","bQuotes","noMultiLines","array","line","columns","depth","getJsonLevel","every","values","head","csvToMarkdown","centerAdjust","rightAdjust","addsep","addTable","stats","getCsvColLength","ladj","max","nullIsEmpty","addMarkdown","csvToFixed","ruler","ruler10","linewidth","addRuler","addLineSep","addMardown","fixedToCsv","input","fieldDef","nowrap","notrim","fa","fld","header","pop","csvToMulti","sep","addFieldName","addFieldNameSep","addLineAfterField","addXSpaces","csvFormat","fheader","csvToKml","nameCol","descCol","latCol","longCol","altCol","descCol2","desc2","altitude","csvToCsv","headingSpecified","excelForceMode","defaultHeader","neverEnclose","vv","transposeCsv","isSqlKeywords","csvToSql","operation","m","tp","incl","usrhdr","fsize","fdec","freq","temValuesSet","where","keycnt","fldpad","useNullForEmpty","batch","includeCnt","includeNotKeyCnt","newlines","dualNeeded","batchSize","useTerseValuesSize","useTerseValues","tableName","dropTable","dropExists","createTable","savnewlines","createNotExists","insertAfterText","useReplace","useNullAsNull","tmp","dualTableName","geoJsonToCsv","geo","cols","colArray","colnum","type","features","geometry","latitude","longitude","coordinates","properties","htmlEscape","alert","big","sqlOptions","template","setOptions","minOptions","inJsonForm","flatOptions","parseAndOptions","forceOptions","datefound","detCsvDateFormat","bad","msg","clearAll","appendMode","setupSortDD","getUserOptions","colpos","radiovalue","radioObj","radioLength","setRadioValue","newValue","sortStr","mySortNeeded","dd","selectedIndex","createElement","add","csvCreateQueryUI","click","flattenSqlJson","newo","rec","getExampleCsv","getExampleCsvJson","getExampleXml","getExampleJson","getExampleKml","getExampleFlat","getExampleGeoJson","loadScript","url","id","src","getElementsByTagName","appendChild","loadScriptAndRun","loadDataAndRun","html","loadURL","encodeURIComponent","prettyJSON","step","A","level","match","saveOutput","doctype","blob","Blob","saveAs","saveExcel","resetCsv","old","frm1","outsep","saveFile","loadCsv","bs","acc","idq","storageSup","has_html5_storage","getCacheCsv","setCacheCsv","sessionStorage","getItem","localStorage","forms","assignText","getCsv","setItem","saveCsv","putCsv","clearPage","reload","setOutputSingleQuote","on","setInputSingleQuote","setCheckboxes","tf","res","opt","listcnt","toExcel","initOpt","isRegex","social","socialReverse","anchor","limitstr","append","forceCsv","dup","sorted","isList","includeFromUrl","heading","inputString","loadScriptAndRunRepeat","inputURL","loadDataAndRunRepeat","runit","loadURLRepeat","runitonce","trueOrFalse","tempArray1","index2","URLwithLinkTag","tempArray2","optHeading","numberOfCols","URLRegexCheck","listingURL","filter","reject","any","uniq","tempArray3"],"mappings":"AAmjBA,SAASA,OAAOC,GACb,OAAOA,MAAAA,EA6CV,SAASC,aAAaD,GAClB,IAAIE,EAAI,EACJC,EAAI,EAEJC,IAAM,GACNC,QAAU,EAEd,IADAC,SAAWC,OAAOC,KAAKR,GAClBE,EAAI,EAAGA,EAAII,SAASG,OAAQP,IACxBF,EAAEM,SAASJ,IAAU,OAAIG,UAAWA,QAAUL,EAAEM,SAASJ,IAAIO,QAGtE,IAAIC,EAAI,GACR,IAAKR,EAAI,EAAGA,EAAIG,QAASH,IAAK,CAE1B,IADAE,IAAM,GACDD,EAAI,EAAGA,EAAIG,SAASG,OAAQN,IAC7BC,IAAIE,SAASH,IAAMH,EAAEM,SAASH,IAAID,GAGtCQ,EAAEC,KAAKP,KAEX,OAAOM,EAmPX,SAASE,cAAcC,SACnB,IAAIC,IAAMC,SACNC,KAAOC,EAAEJ,SAAS,GACtB,GAAIC,IAAII,KAAKC,iBACLC,MAAQL,SAASG,KAAKC,mBACpBE,kBAAkBL,MACxBI,MAAME,cACH,GAAIC,OAAOC,aAAc,CAC5B,IAIQJ,MAJJK,UAAYF,OAAOC,eACvB,GAAIC,UAAUC,kBACVD,UAAUC,kBAAkBV,WAExBI,MAAQL,SAASY,eACfC,mBAAmBZ,MACzBS,UAAUI,kBACVJ,UAAUK,SAASV,QAK/B,SAASW,aAAaC,KAAMC,MAAOC,MAC/B,GAAIA,KAAM,CACN,IAAIC,KAAO,IAAIC,KACfD,KAAKE,QAAQF,KAAKG,UAAoB,GAAPJ,KAAY,GAAK,GAAK,KACrD,IAAIK,QAAU,aAAeJ,KAAKK,kBAEjC,CACGD,QAAU,GACdxB,SAAS0B,OAAST,KAAO,IAAMC,MAAQM,QAAU,YAIzD,SAASG,WAAWV,MAGhB,IAFA,IAAIW,OAASX,KAAO,IAChBY,GAAK7B,SAAS0B,OAAOI,MAAM,KACtBC,EAAI,EAAGA,EAAIF,GAAGnC,OAAQqC,IAAK,CAEhC,IADA,IAAIC,EAAIH,GAAGE,GACW,KAAfC,EAAEC,OAAO,IAAWD,EAAIA,EAAEE,UAAU,EAAGF,EAAEtC,QAChD,GAAyB,GAArBsC,EAAEG,QAAQP,QAAc,OAAOI,EAAEE,UAAUN,OAAOlC,OAAQsC,EAAEtC,QAEpE,OAAO,KAGX,SAAS0C,YAAYnB,MACjBD,aAAaC,KAAM,IAAK,GAe5B,SAASoB,WAAWC,GAChB,GAAKC,WAAWD,IAAME,SAASF,KAAQG,MAAMH,GAAI,CAC7C,IAAII,EAAI,CAAC,KAAM,KAAM,KAAM,MACvBC,EAAIL,EAAI,IACZ,OAAOA,GAAKI,GAAGC,EAAI,IAAM,KAAOD,EAAEC,IAAMD,EAAE,IAE9C,OAAOJ,EAsLX,SAASM,iBAAmB,OAAO,GAAIC,QAAQ,GAAGZ,OAAO,GACzD,SAASa,WAAWC,KAChBA,IAAIC,UAAY,+BAAmChD,SAASiD,SAASC,KAAKpB,MAAM,KAAKqB,OAAO,GAAG,GAAGrB,MAAM,KAAK,GAAGsB,cAOpH,SAASC,gBAAgBC,KAAMC,SAAUC,UAErC,GAAKF,KAAKpC,SACNoC,KAAKpC,MAAMxB,QAAU,GAAzB,CACA,IAAI+D,QACAjD,OAAOkD,eAIPD,QAAU,IAAIE,cAAc,kBAEhC,IAAIC,GAAKN,KAAKpC,MAEduC,QAAQI,KAAK,MAAOD,IAAI,GACxBH,QAAQK,mBAAqB,WAEC,GAAtBL,QAAQM,YAAsC,KAAlBN,QAAQO,QAAmC,GAAlBP,QAAQO,QAC7DT,SAASE,QAAQQ,eAGzBR,QAAQS,QAGZ,SAASC,cAAcb,KAAMC,SAAUC,UACnC,IAAIY,OAAS,IAAIC,WAEbf,KAAKgB,OAAShB,KAAKgB,MAAM,MACrBF,OAAS,IAAIC,YACVE,OAAS,SAAUC,GAEtBjB,SAASiB,EAAEC,OAAOC,SAEtBN,OAAOO,WAAWrB,KAAKgB,MAAM,GAAId,WAIzC,SAASoB,cAAcC,MAAOtB,SAAUK,GAAIkB,OACxC,IAAI3F,EAAI,EACJ4F,KAAO,gBACPD,OAAkB,IAATA,QACTC,MAAQ,aAAeD,MAAME,SAAW,KAEvCpB,KAAIA,GAAK1D,EAAE,OAAO,GAAGgB,MAAMY,MAAM,UAAU5B,EAAE,OAAO,GAAGgB,MAAMY,MAAM,UAAUpC,OAAS,IAC3F,IAAIuF,IAAM,OACNrB,GAAG9B,MAAM,KAAKpC,OAAS,IAGX,SADZuF,KADAA,IAAMrB,GAAG9B,MAAM,MACLmD,IAAIvF,OAAS,GAAG0D,iBACD6B,IAAM,SAGnCC,OAAO,iBAAmBD,IAAM,OAASF,KAAO,KAAM,CAACF,OACnD,SAAUM,MAIN,IAAKhG,EAAI,EAAGA,EAAIgG,KAAKzF,OAAQP,IACrBiG,EAAEC,SAASF,KAAKhG,KAAOiG,EAAEE,QAAQH,KAAKhG,KAAKgG,KAAKI,OAAOpG,EAAG,GAElE+F,OAAO,mDAAoD,CAACC,MACxD,SAAUA,MAEN5B,SAAS4B,KAAKK,QAAQ,eAAgB,SAK1D,SAASC,aAAaC,EAAGnC,SAAUsB,OAC/B,IAAIjB,GAAK1D,EAAE,OAAO,GAAGgB,MAAMY,MAAM,UAAU5B,EAAE,OAAO,GAAGgB,MAAMY,MAAM,UAAUpC,OAAS,GAClF8D,SAAW,GACXmC,UAAY,GACZ5C,IAAM7C,EAAE,gBAAgB,GACxB0F,WAAa,GAEbhC,GAAGiC,cAAcC,SAAS,UAAYlC,GAAGiC,cAAcC,SAAS,SAChEF,WAAa,iJACT7C,KAAOA,IAAIgD,UAA0C,UAA9BhD,IAAIgD,SAASF,gBAEhC9C,IAAIiD,UACJjD,IAAIiD,UAAYJ,WAGhB1F,EAAE,gBAAgB+F,YAAYL,aAGtC7C,IAAM7C,EAAE,gBAAgB,GACpBF,UAAY+C,KAAOA,IAAIgD,UAA2C,UAA/BhD,IAAIgD,SAASF,gBAChDF,UAAY5C,IAAI7B,OAEhBlB,UAAYE,EAAE,iBAAiB,KAAIA,EAAE,iBAAiB,GAAG8C,UAAY,aACzE4B,cAAcC,MAAOtB,SAAUK,GAAI+B,aAG/B5C,KAAOA,IAAIgD,UAA0C,SAA9BhD,IAAIgD,SAASF,gBACpCD,WAAa,uyDAET7C,IAAIiD,UACJjD,IAAIiD,UAAYJ,WAGhB1F,EAAE,gBAAgB+F,YAAYL,aAGtC7C,IAAM7C,EAAE,gBAAgB,GACpBF,UAAY+C,KAAOA,IAAIgD,UAA2C,WAA/BhD,IAAIgD,SAASF,gBAChDrC,SAAWT,IAAI7B,OAGfV,OAAO6D,WAAcF,cAAcuB,EAAGnC,SAAUC,UAAmBH,gBAAgBqC,EAAGnC,SAAUC,WAljCxF,iBAAT0C,OACPA,KAAO,IAGV,WACG,aAEA,SAASR,EAAEpD,GAEP,OAAOA,EAAI,GAAK,IAAMA,EAAIA,EAGO,mBAA1BjB,KAAK8E,UAAUC,SAEtB/E,KAAK8E,UAAUC,OAAS,WAEpB,OAAOC,SAASC,KAAKC,WACfD,KAAKE,iBAAuB,IAC1Bd,EAAEY,KAAKG,cAAgB,GAAK,IAC5Bf,EAAEY,KAAKI,cAAqB,IAC5BhB,EAAEY,KAAKK,eAAqB,IAC5BjB,EAAEY,KAAKM,iBAAqB,IAC5BlB,EAAEY,KAAKO,iBAAqB,IAC9B,MAGVC,OAAOX,UAAUC,OACbW,OAAOZ,UAAUC,OACjBY,QAAQb,UAAUC,OAAS,WACvB,OAAOE,KAAKC,YAIxB,IAAIU,GAAK,2GACLC,UAAY,2HACZC,IACAC,OACAC,KAAO,CACHC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,IAAM,MACNC,KAAM,QAEVC,IAGJ,SAASC,MAAMC,QAQX,OADAb,UAAUc,UAAY,EACfd,UAAUe,KAAKF,QAAU,IAAMA,OAAOvC,QAAQ0B,UAAW,SAAUvH,GACtE,IAAIqC,EAAIqF,KAAK1H,GACb,MAAoB,iBAANqC,EACRA,EACA,OAAS,OAASrC,EAAEuI,WAAW,GAAGC,SAAS,KAAKhF,OAAO,KAC5D,IAAM,IAAM4E,OAAS,IAI9B,SAASK,IAAIC,IAAKC,QAId,IAAIvG,EACA3C,EACAuD,EACAjD,OAEA6I,QADAC,KAAOrB,IAEPjG,MAAQoH,OAAOD,KAkBnB,OAdInH,OAA0B,iBAAVA,OACY,mBAAjBA,MAAMkF,SACjBlF,MAAQA,MAAMkF,OAAOiC,MAMN,mBAARR,MACP3G,MAAQ2G,IAAIY,KAAKH,OAAQD,IAAKnH,eAKnBA,OACf,IAAK,SACD,OAAO4G,MAAM5G,OAEjB,IAAK,SAID,OAAOmF,SAASnF,OAAS4F,OAAO5F,OAAS,OAE7C,IAAK,UACL,IAAK,OAMD,OAAO4F,OAAO5F,OAKlB,IAAK,SAKD,IAAKA,MACD,MAAO,OAUX,GALAiG,KAAOC,OACPmB,QAAU,GAIqC,mBAA3C/I,OAAO2G,UAAUgC,SAASO,MAAMxH,OAA6B,CAM7D,IADAxB,OAASwB,MAAMxB,OACVqC,EAAI,EAAGA,EAAIrC,OAAQqC,GAAK,EACzBwG,QAAQxG,GAAKqG,IAAIrG,EAAGb,QAAU,OAYlC,OANAyB,EAAuB,IAAnB4F,QAAQ7I,OACN,KACAyH,IACA,MAAQA,IAAMoB,QAAQI,KAAK,MAAQxB,KAAO,KAAOqB,KAAO,IACxD,IAAMD,QAAQI,KAAK,KAAO,IAChCxB,IAAMqB,KACC7F,EAKX,GAAIkF,KAAsB,iBAARA,IAEd,IADAnI,OAASmI,IAAInI,OACRqC,EAAI,EAAGA,EAAIrC,OAAQqC,GAAK,EACH,iBAAX8F,IAAI9F,KAEXY,EAAIyF,IADJhJ,EAAIyI,IAAI9F,GACGb,SAEPqH,QAAQ3I,KAAKkI,MAAM1I,IAAM+H,IAAM,KAAO,KAAOxE,QAQzD,IAAKvD,KAAK8B,MACF1B,OAAO2G,UAAUyC,eAAeH,KAAKvH,MAAO9B,KAC5CuD,EAAIyF,IAAIhJ,EAAG8B,SAEPqH,QAAQ3I,KAAKkI,MAAM1I,IAAM+H,IAAM,KAAO,KAAOxE,GAe7D,OANAA,EAAuB,IAAnB4F,QAAQ7I,OACN,KACAyH,IACA,MAAQA,IAAMoB,QAAQI,KAAK,MAAQxB,KAAO,KAAOqB,KAAO,IACxD,IAAMD,QAAQI,KAAK,KAAO,IAChCxB,IAAMqB,KACC7F,GAMe,mBAAnBuD,KAAK2C,YACZ3C,KAAK2C,UAAY,SAAU3H,MAAO4H,SAAUC,OAQxC,IAAIhH,EAOJ,GANAoF,IAAM,GACNC,OAAS,GAKY,iBAAV2B,MACP,IAAKhH,EAAI,EAAGA,EAAIgH,MAAOhH,GAAK,EACxBqF,QAAU,QAKU,iBAAV2B,QACd3B,OAAS2B,OAOb,GADAlB,IAAMiB,SACFA,UAAgC,mBAAbA,WACM,iBAAbA,UACmB,iBAApBA,SAASpJ,QACpB,MAAM,IAAIsJ,MAAM,kBAMpB,OAAOZ,IAAI,GAAI,CAACa,GAAI/H,UAOF,mBAAfgF,KAAKgD,QACZhD,KAAKgD,MAAQ,SAAUjJ,KAAMkJ,SAKzB,IAAIhK,EAEJ,SAASiK,KAAKd,OAAQD,KAKlB,IAAIjJ,EAAGuD,EAAGzB,MAAQoH,OAAOD,KACzB,GAAInH,OAA0B,iBAAVA,MAChB,IAAK9B,KAAK8B,MACF1B,OAAO2G,UAAUyC,eAAeH,KAAKvH,MAAO9B,UAElCiK,KADV1G,EAAIyG,KAAKlI,MAAO9B,IAEZ8B,MAAM9B,GAAKuD,SAEJzB,MAAM9B,IAK7B,OAAO+J,QAAQV,KAAKH,OAAQD,IAAKnH,OA8BrC,GAtBAjB,KAAO6G,OAAO7G,MACdgH,GAAGe,UAAY,EACXf,GAAGgB,KAAKhI,QACRA,KAAOA,KAAKuF,QAAQyB,GAAI,SAAUtH,GAC9B,MAAO,OACF,OAASA,EAAEuI,WAAW,GAAGC,SAAS,KAAKhF,OAAO,MAiBvD,gBACK8E,KAAKhI,KAAKuF,QAAQ,sCAAuC,KACrDA,QAAQ,mEAAoE,KAC5EA,QAAQ,uBAAwB,KAYzC,OALArG,EAAImK,KAAK,IAAMrJ,KAAO,KAKI,mBAAZkJ,QACRC,KAAK,CAACH,GAAI9J,GAAI,IACdA,EAKV,MAAM,IAAIoK,YAAY,gBA7TlC,GAkUArD,KAAKsD,UAAY,SAASrE,MACtB,aACA,GAAI3F,OAAO2F,QAAUA,MAAQsE,MAAMC,QAAQvE,MACvC,OAAOA,KACX,IAAiBwE,IAAKC,KAAMC,IAAKC,KAAMC,KAAnCrF,OAAS,GACb,IAAI,IAAIsF,KAAK7E,KAAM,CACfwE,IAAMjF,OAAQkF,KAAO,GAAIE,KAAO,EAChC,GACID,IAAMG,EAAE7H,QAAQ,IAAK2H,MACrBC,KAAOC,EAAE9H,UAAU4H,MAAe,IAATD,IAAaA,SAAMR,GAC5CM,IAAMA,IAAIC,QAAUD,IAAIC,MAAUnH,MAAMD,SAASuH,OAAc,GAAL,IAC1DH,KAAOG,KACPD,KAAOD,IAAM,QACTA,KAAO,GACfF,IAAIC,MAAQzE,KAAK6E,GAErB,OAAOtF,OAAO,KAElBwB,KAAK+D,QAAU,SAAS9E,MACpB,IAAIT,OAAS,GAoBb,OAnBA,SAASwF,QAASP,IAAKC,MACnB,GAAIpK,OAAOmK,OAASA,IAChBjF,OAAOkF,MAAQD,SACZ,GAAIF,MAAMC,QAAQC,KAAM,CAC1B,IAAI,IAAI5H,EAAE,EAAGoI,EAAER,IAAIjK,OAAQqC,EAAEoI,EAAGpI,IAC5BmI,QAAQP,IAAI5H,GAAI6H,KAAOA,KAAK,IAAI7H,EAAI,GAAGA,GACnC,GAALoI,IACAzF,OAAOkF,MAAQ,QAChB,CACH,IAAItE,SAAU,EACd,IAAK,IAAI0E,KAAKL,IACVrE,SAAU,EACV4E,QAAQP,IAAIK,GAAIJ,KAAOA,KAAK,IAAII,EAAIA,GAEpC1E,UACAZ,OAAOkF,MAAQ,KAG3BM,CAAQ/E,KAAM,IACPT,QAEXwB,KAAKkE,WAAa,SAASjF,MACvB,IAAIT,OAAS,GAoBb,OAnBA,SAASwF,QAASP,IAAKC,MACnB,GAAIpK,OAAOmK,OAASA,IAChBjF,QAASiF,IAAM,SACZ,GAAIF,MAAMC,QAAQC,KAAM,CAC1B,IAAI,IAAI5H,EAAE,EAAGoI,EAAER,IAAIjK,OAAQqC,EAAEoI,EAAGpI,IAC5BmI,QAAQP,IAAI5H,GAAI6H,KAAOA,KAAK,IAAI7H,EAAI,GAAGA,GACnC,GAALoI,IACAzF,QAAU,SACX,CACH,IAAIY,SAAU,EACd,IAAK,IAAI0E,KAAKL,IACVrE,SAAU,EACV4E,QAAQP,IAAIK,GAAIJ,KAAOA,KAAK,IAAII,EAAIA,GAEpC1E,UACAZ,QAAU,MAGtBwF,CAAQ/E,KAAM,IACPT,QAGNlF,OAAO2G,UAAUkE,OAElB7K,OAAO6K,KAAO,SAAShL,KACnB,IAAcgJ,IAAVgC,KAAO,EACX,IAAKhC,OAAOhJ,IACJA,IAAIuJ,eAAeP,MAAMgC,OAEjC,OAAOA,OAQfnE,KAAKoE,cAAgB,SAASjL,IAAKyJ,SAAU1B,QACzC,IAAImD,eAAiB,GACjBC,kBAAoB,GAqCxB,OAAOtE,KAAK2C,UAAUxJ,IAnCtB,SAA2BgJ,IAAKnH,OAC5B,GAAKqJ,eAAe7K,OAAS,IAC7B,MAAO,kBAEP,IAAI+K,iBAAkB,EAOtB,GANAF,eAAeG,QAAQ,SAASrL,IAAKsL,OAC9BtL,MAAM6B,QACLuJ,gBAAkBE,SAId,IAAPtC,IAGA,OAFAkC,eAAe3K,KAAKP,KACrBmL,kBAAkB5K,KAAK,QACfsB,MAGP,GAAGuJ,gBAAgB,IAAM,SAA0B,iBAAT,MAC3C,MAA2C,QAAtCD,kBAAkBC,iBACZ,oBAEA,SAAcvJ,OAAWA,MAAM0J,YAAe1J,MAAM0J,YAAY3J,KAAK4E,qBAAuB,OAAW,aAAe2E,kBAAkBC,iBAAmB,IAItK,IAAII,aAAexC,KAAO,cAG1B,OAFAkC,eAAe3K,KAAKsB,OACpBsJ,kBAAkB5K,KAAKiL,cACpB/B,SACQA,SAAST,IAAKnH,OAEdA,OAI2BkG,SA4BlDN,OAAOX,UAAU2E,KAAO,SAAUpL,OAAQqL,KACtC,QAAoB,IAAT,IAA4BA,IAAM,IAE7C,IADA,IAAI3C,IAAM9B,KACH8B,IAAI1I,OAASA,QAChB0I,IAAM2C,IAAM3C,IAChB,OAAOA,KAGXtB,OAAOX,UAAU6E,QAAU,SAAUtL,QACjC,IACI0I,IAAM9B,KACN2E,UAAW,EACf,OAAIxI,MAAM2F,KAAaA,IACnBA,IAAI1I,OAASA,OAAe0I,IAAID,YAChCC,IAAM,IAAG6C,UAAW,GACnBA,SANK,MAUN7C,IAAMA,IAAIlG,UAAU,GAAG4I,KAAKpL,OAVtB,MAWEuC,OAAO,KAAWmG,IAAM,IAAMA,IAAIlG,UAAU,IAJpDkG,IAAMA,IAAI0C,KAAKpL,OAPT,KAaH0I,MAGXtB,OAAOX,UAAU+E,KAAO,SAAUxL,OAAQqL,IAAKI,UAC3C,QAAoB,IAAT,KAAgC,KAARJ,IAAkBA,IAAM,IAE3D,OADUzE,KACF5G,QAAUA,SAAuB,IAAbyL,SADlB7E,MAAAA,KAEIyE,IAAIK,OAAO1L,SAASwC,UAAU,EAAGxC,SAMd,mBAA1BoH,OAAOX,UAAUkF,OACxBvE,OAAOX,UAAUkF,KAAO,WAEpB,OAAO/E,KAAKd,QAAQ,qCAAsC,MAIlEsB,OAAOX,UAAUmF,MAAQ,WAAc,OAAOhF,KAAKd,QAAQ,OAAQ,KACnEsB,OAAOX,UAAUoF,MAAQ,WAAc,OAAOjF,KAAKd,QAAQ,QAAS,KACpEsB,OAAOX,UAAUqF,OAAS,WAAc,OAAOlF,KAAKd,QAAQ,UAAW,MAGhC,mBAA5BsB,OAAOX,UAAUiF,SACxBtE,OAAOX,UAAUiF,OAAS,SAAU9I,GAEhC,OADAA,EAAIA,GAAK,EACFmH,MAAMnH,EAAI,GAAGqG,KAAKrC,QAGjCQ,OAAOX,UAAUsF,MAAQ,SAAUC,MAAOX,KAGtC,OADAA,KADAA,IAAMA,KAAO,KACHY,OAAO,EAAG,GAChBrF,KAAK5G,OAASgM,MACPpF,KAAOyE,IAAIK,OAAOM,MAAQpF,KAAK5G,QAE/B4G,MAEfQ,OAAOX,UAAUyF,MAAQ,SAAUF,MAAOX,KAGtC,OADAA,KADAA,IAAMA,KAAO,KACHY,OAAO,EAAG,GAChBrF,KAAK5G,OAASgM,MACPX,IAAIK,OAAOM,MAAQpF,KAAK5G,QAAU4G,KAElCA,MAGfQ,OAAOX,UAAU0F,MAAQ,SAAUH,MAAOX,KAGtC,GADAA,KADAA,IAAMA,KAAO,KACHY,OAAO,EAAG,GAChBrF,KAAK5G,OAASgM,MAAQ,EAAG,CACzB,IAAII,IAAMJ,MAAQpF,KAAK5G,OACnBqM,OAAUD,IAAM,GAAK,EAAK,GAAKf,IAC/BiB,KAAOjB,IAAIK,OAAOa,KAAKC,MAAMJ,IAAM,IACvC,OAAOE,KAAO1F,KAAO0F,KAAOD,OAG5B,OAAOzF,KAAK4E,KAAKQ,QAEkB,mBAAhC5E,OAAOX,UAAUgG,aACxBrF,OAAOX,UAAUgG,WAAa,WAC1B,OAAO7F,KAAKd,QAAQ,cAAe,SAAU7F,GAAK,OAAOA,EAAEyD,kBAGtB,mBAAlC0D,OAAOX,UAAUiG,eACxBtF,OAAOX,UAAUiG,aAAe,WAC5B,OAAO9F,KAAKd,QAAQ,SAAU,SAAU6G,KAAO,OAAOA,IAAIpK,OAAO,GAAGmB,cAAgBiJ,IAAIV,OAAO,GAAG9F,kBAIrE,mBAA1BiB,OAAOX,UAAUmG,OACxBxF,OAAOX,UAAUmG,KAAO,SAAUhK,GAAK,OAAOgE,KAAKpE,UAAU,EAAGI,KAE9B,mBAA3BwE,OAAOX,UAAUoG,QACxBzF,OAAOX,UAAUoG,MAAQ,SAAUjK,GAAK,OAAOgE,KAAKpE,UAAUoE,KAAK5G,OAAS4C,KAIhFwE,OAAOX,UAAUqG,kBAAoB,WACjC,OAAOlG,KAAKd,QAAQ,gDAAiD,KAGhC,mBAA9BsB,OAAOX,UAAUsG,WACxB3F,OAAOX,UAAUsG,SAAW,WACxB,IAAc1K,EAAV2K,KAAO,EACX,GAAoB,IAAhBpG,KAAK5G,OAAc,OAAOgN,KAC9B,IAAK3K,EAAI,EAAGA,EAAIuE,KAAK5G,OAAQqC,IAEzB2K,MAASA,MAAQ,GAAKA,KADhBpG,KAAK4B,WAAWnG,GAEtB2K,MAAQ,EAEZ,OAAOA,OAKyB,mBAA7B5F,OAAOX,UAAUwG,UACxB7F,OAAOX,UAAUwG,QAAU,SAAUC,OAAQC,kBAGzC,QAFsB,IAAXD,SAAwBA,OAAS,SACZ,IAArBC,mBAAkCA,iBAAmB,IACxC,IAApBA,iBAAwB,CACxB,IAAIC,GAAK,IAAIC,OAAOH,OAAOI,aAAaJ,QAAS,OACjD,OAAOA,OAAStG,KAAKd,QAAQsH,GAAID,iBAAmBD,QAAUA,OAElE,OAAOA,OAAStG,KAAOsG,SAG/B9F,OAAOX,UAAU8G,OAAS,WACtB,OAAO3G,KAAKd,QAAQ,KAAM,SACrBA,QAAQ,KAAM,UACdA,QAAQ,KAAM,SACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,SAIvBsB,OAAOX,UAAU+G,MAAQ,WACrB,OAAO5G,KAAKd,QAAQ,KAAM,SACrBA,QAAQ,KAAM,UACdA,QAAQ,KAAM,UACdA,QAAQ,KAAM,QACdA,QAAQ,KAAM,SAGvBsB,OAAOX,UAAUgH,MAAQ,SAAUC,QAASC,UAAWC,WAAYC,mBACxC,IAAZH,UAAyBA,QAAU,UACrB,IAAdC,YAA2BA,UAAY,UACxB,IAAfC,aAA4BA,WAAaD,gBACxB,IAAjBE,eAA8BA,cAAe,GACxD,IAAIC,UAAalH,KAAKnE,QAAQkL,YAAc,GAAO/G,KAAKnE,QAAQiL,UAAY,GAAO9G,KAAKnE,QAAQ,OAAS,GAAOmE,KAAKnE,QAAQ,OAAS,EAEtI,OADIoL,eAAcC,WAAY,GACvBA,UAAYlH,KAAKqG,QAAQU,UAAWC,YAAchH,MAGnB,mBAA/BQ,OAAOX,UAAUsH,YACxB3G,OAAOX,UAAUsH,UAAY,WACzB,OAAQhL,MAAMF,WAAW+D,QAAUD,SAASC,QAIpDQ,OAAOX,UAAUuH,SAAW,WACxB,IAAItF,IAAM9B,KAAKd,QAAQ,gBAAiB,IAGxC,OAFI4C,IAAI1I,OAAS,IAAM+C,MAAM2F,OACzBA,KAAa,GACVA,KAEXtB,OAAOX,UAAUwH,UAAY,WACzB,OAAOnL,SAAS8D,KAAKoH,WAAWvF,WAAY,KAIhDrB,OAAOX,UAAUtD,QAAU,SAAU+K,KACjC,IAAIxF,IAAM9B,KAAKoH,WAAWvF,WAG1B,OAFIC,IAAI1I,OAAS,IAAM+C,MAAM2F,OACzBA,KAAa,EAANA,KAASvF,QAAQ+K,MACrB9G,OAAOsB,MAGlBtB,OAAOX,UAAU0H,SAAW,SAAUD,IAAKE,cACvC,IAAI1F,IAAM9B,KAAKoH,WAAWvF,WAG1B,QAFmB,IAARyF,MAAqBA,IAAM,QACV,IAAjBE,eAA8BA,aAAe,KACpD1F,IAAI1I,OAAS,IAAM+C,MAAM2F,KAAM,CAC/B,IAAI2F,EAAGC,GAAIC,GAEXD,IADAD,GAAM,EAAI3F,KAAKvF,QAAQ+K,KAAM9L,MAAM,MAC5B,GACWmM,GAAdF,EAAErO,OAAS,EAAQ,IAAMqO,EAAE,GACrB,GAEV,IADA,IAAIjB,GAAK,eACFA,GAAG7E,KAAK+F,KAAKA,GAAKA,GAAGxI,QAAQsH,GAAI,SACxC1E,IAAM0F,aAAeE,GAAKC,GAE9B,OAAOnH,OAAOsB,MAElBtB,OAAOX,UAAUnB,OAAS,WAEtB,OAAOsB,KAAKd,QAAQ,MAAO,QACtBA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,QAIxBsB,OAAOX,UAAU+H,MAAQ,SAAUC,MAC/B,OAAQA,KAAO,IAAM,IAAM7H,KAAKd,QAAQ,KAAM,OAAS2I,KAAO,IAAM,KAExErH,OAAOX,UAAUiI,OAAS,WAEtB,MADkB,gBACFnG,KAAK3B,MACV,IACHA,KAAKd,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAM,OAAS,IAE3Bc,KAAKnE,QAAQ,MAAQ,EACnB,IAAMmE,KAAKd,QAAQ,KAAM,MAAQ,IAGjCc,MAIfQ,OAAOX,UAAU6G,aAAe,SAAU/M,MACtC,OAAOA,KAAKuF,QAAQ,2BAA4B,SAEb,mBAA5BuH,OAAO5G,UAAUkI,SACxBtB,OAAO5G,UAAUkI,OAAS,SAAUpO,MAChC,OAAOA,KAAKuF,QAAQ,2BAA4B,UAkDd,mBAA/BsB,OAAOX,UAAUmI,aACxBxH,OAAOX,UAAUmI,WAAa,SAAUlG,KACpC,OAAO9B,KAAKnD,MAAM,EAAGiF,IAAI1I,SAAW0I,MAIJ,mBAA7BtB,OAAOX,UAAUL,WACxBgB,OAAOX,UAAUL,SAAW,SAAUsC,KAClC,OAAO9B,KAAKnD,OAAOiF,IAAI1I,SAAW0I,MAYM,mBAArCtB,OAAOX,UAAUoI,mBACxBzH,OAAOX,UAAUoI,iBAAmB,WAyFhCC,OAASlI,KAET,IADA,IAAImI,WAzF8B,CAC9B,CAAEC,KAAQ,IAAKC,QAAW,mNAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,yBAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,mBAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,6DAC1B,CAAED,KAAQ,IAAKC,QAAW,+EAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,KAAMC,QAAW,mBAC3B,CAAED,KAAQ,KAAMC,QAAW,mBAC3B,CAAED,KAAQ,IAAKC,QAAW,2LAC1B,CAAED,KAAQ,IAAKC,QAAW,2CAC1B,CAAED,KAAQ,IAAKC,QAAW,iGAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,IAAKC,QAAW,+HAC1B,CAAED,KAAQ,IAAKC,QAAW,qCAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,IAAKC,QAAW,mHAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,uDAC1B,CAAED,KAAQ,IAAKC,QAAW,uGAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,yQAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,mEAC1B,CAAED,KAAQ,IAAKC,QAAW,2CAC1B,CAAED,KAAQ,IAAKC,QAAW,6GAC1B,CAAED,KAAQ,IAAKC,QAAW,6GAC1B,CAAED,KAAQ,IAAKC,QAAW,iGAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,mNAC1B,CAAED,KAAQ,IAAKC,QAAW,uDAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,mEAC1B,CAAED,KAAQ,IAAKC,QAAW,qCAC1B,CAAED,KAAQ,IAAKC,QAAW,iGAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,IAAKC,QAAW,yNAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,yBAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,mBAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,6DAC1B,CAAED,KAAQ,IAAKC,QAAW,qFAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,KAAMC,QAAW,mBAC3B,CAAED,KAAQ,IAAKC,QAAW,iMAC1B,CAAED,KAAQ,IAAKC,QAAW,2CAC1B,CAAED,KAAQ,IAAKC,QAAW,iGAC1B,CAAED,KAAQ,IAAKC,QAAW,iGAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,+HAC1B,CAAED,KAAQ,IAAKC,QAAW,2CAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,IAAKC,QAAW,yHAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,uDAC1B,CAAED,KAAQ,IAAKC,QAAW,6GAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,yQAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,mEAC1B,CAAED,KAAQ,IAAKC,QAAW,2CAC1B,CAAED,KAAQ,IAAKC,QAAW,6GAC1B,CAAED,KAAQ,IAAKC,QAAW,mHAC1B,CAAED,KAAQ,IAAKC,QAAW,uGAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,mNAC1B,CAAED,KAAQ,IAAKC,QAAW,uDAC1B,CAAED,KAAQ,KAAMC,QAAW,aAC3B,CAAED,KAAQ,IAAKC,QAAW,yEAC1B,CAAED,KAAQ,IAAKC,QAAW,qCAC1B,CAAED,KAAQ,IAAKC,QAAW,uGAC1B,CAAED,KAAQ,IAAKC,QAAW,2FAC1B,CAAED,KAAQ,IAAKC,QAAW,+BAC1B,CAAED,KAAQ,IAAKC,QAAW,oBAIrB5M,EAAI,EAAGA,EAAI0M,WAAW/O,OAAQqC,IACnCyM,OAASA,OAAOhJ,QAAQiJ,WAAW1M,GAAG4M,QAASF,WAAW1M,GAAG2M,MAgBjE,OAdAF,OAASA,OAAOhJ,QAAQ,wBAAyB,KAEjDgJ,OAASA,OAAOhJ,QAAQ,wBAAyB,KAEjDgJ,OAASA,OAAOhJ,QAAQ,UAAW,OAEnCgJ,OAASA,OAAOhJ,QAAQ,kBAAmB,KAE3CgJ,OAASA,OAAOhJ,QAAQ,UAAW,KAEnCgJ,OAASA,OAAOhJ,QAAQ,UAAW,KAAKA,QAAQ,UAAW,KAE3DgJ,OAASA,OAAOhJ,QAAQ,kBAAmB,KAEpCgJ,SAI4B,mBAAhC1H,OAAOX,UAAUyI,cACxB9H,OAAOX,UAAUyI,YAAc,WAI3B,IAAIzP,EACAuD,EAAI4D,KAAK+E,OACT1L,EAAI+C,EAAEZ,MAAM,WACZ+M,EAAI,CAAC,CAAEC,OAAS,EAAOC,KAAO,EAAOC,MAAQ,GAAS,CAAEF,OAAS,EAAOC,KAAO,EAAOC,MAAQ,GAAS,CAAEF,OAAS,EAAOC,KAAO,EAAOC,MAAQ,IAGnJ,GAAgB,GAAZrP,EAAED,OAAa,CACf,GAAI+C,MAAMC,GACN,IACI,IAAIuM,EAAI,IAAI5N,KAAKqB,GACjB,OAAQD,MAAMwM,GAChB,MAAOzK,GACL,OAAO,EAGf,OAAiB,IAAb9B,EAAEhD,QAA6B,IAAbgD,EAAEhD,UACR,GAAZgD,EAAEhD,SACMgD,EAAER,UAAU,EAAG,GAAK,IAAMQ,EAAER,UAAU,EAAG,GAAK,IAAMQ,EAAER,UAAU,IAAI0M,gBAEnElM,EAAER,UAAU,EAAG,GAAK,IAAMQ,EAAER,UAAU,EAAG,GAAK,IAAMQ,EAAER,UAAU,IAAI0M,eAGrF,GAAgB,GAAZjP,EAAED,OAAa,OAAO,EAE1B,IAAKP,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACpB,GAAIQ,EAAER,GAAGO,OAAS,GAAoB,GAAfC,EAAER,GAAGO,QAAeC,EAAER,GAAGO,OAAS,EAAG,OAAO,EACnE,GAAI+C,MAAM9C,EAAER,IAAK,OAAO,EAG5B,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACf,GAAmB,GAAfQ,EAAER,GAAGO,OAAa,CAClB,GAAW,EAAPC,EAAER,GAAS,MAAe,EAAPQ,EAAER,IAAU,KAAM,OAAO,EAChD0P,EAAE1P,GAAG6P,MAAO,OAGD,EAAPrP,EAAER,IAAU,GAAY,EAAPQ,EAAER,IAAU,KAAI0P,EAAE1P,GAAG4P,KAAM,GAChDF,EAAE1P,GAAG6P,MAAO,EACD,EAAPrP,EAAER,IAAU,GAAY,EAAPQ,EAAER,IAAU,KAAI0P,EAAE1P,GAAG2P,OAAQ,GAG1D,SAAID,EAAE,GAAGC,OAASD,EAAE,GAAGE,KAAOF,EAAE,GAAGG,WAC/BH,EAAE,GAAGG,MAAQH,EAAE,GAAGC,OAASD,EAAE,GAAGE,SAChCF,EAAE,GAAGE,KAAOF,EAAE,GAAGC,OAASD,EAAE,GAAGG,SAMtCvF,MAAMtD,UAAUhE,UACjBsH,MAAMtD,UAAUhE,QAAU,SAAU+M,KAChC,IAAIpD,IAAMxF,KAAK5G,SAAW,EAEtByP,KAAOpI,OAAOqI,UAAU,KAAO,EAInC,KAHAD,KAAQA,KAAO,EAAKlD,KAAKoD,KAAKF,MAAQlD,KAAKC,MAAMiD,OACtC,IAAGA,MAAQrD,KAEfqD,KAAOrD,IAAKqD,OACf,GAAIA,QAAQ7I,MAAQA,KAAK6I,QAAUD,IAAK,OAAOC,KAEnD,OAAQ,IAOhBpI,OAAOuI,UAAYvI,OAAOuI,WAAa,SAAUpO,OAC7C,MAAwB,iBAAVA,OACVmF,SAASnF,QACT+K,KAAKC,MAAMhL,SAAWA,OAkH9B,IAAIqO,IAAM,CACNC,UAAW,IACXC,kBAAmB,IACnBC,YAAY,EACZ5H,MAAO,IAEP6H,aAAc,CACVC,IAAK,EACLjI,IAAK,GAGTkI,cAAe,IACfC,YAAa,IACbC,MAAO,GACPC,kBAAkB,EAClBC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,gBAAiB,EACjBC,KAAM,EACNC,aAAa,EACbC,aAAa,EACbC,YAAa,GACbC,WAAW,EACXC,YAAY,EACZC,aAAa,EACbC,gBAAgB,EAChBC,mBAAoB,GACpBC,iBAAiB,EACjBC,oBAAqB,GACrBC,aAAc,GACdC,yBAAyB,EAEzBC,YAAa,WACT,OAAO,GAAIrO,QAAQ,GAAGZ,OAAO,IAGjCkP,gBAAiB,EACjBC,cAAe,EACfC,iBAAkB,EAClBC,cAAe,EACfC,YAAa,GACbC,MAAO,GACPC,SAAU,GACVC,YAAa,GACbC,SAAU,GACVC,gBAAgB,EAChBC,cAAc,EAEdC,aAAc,CACV,CAAC,OAAQ,IAAI,IAGjBC,iBAAkB,SAAUrP,GACxB,IAAIvD,EAEA6C,EADAM,EAAII,EAAEhD,OAAS,EAEnB,IAAKP,EAAI,EAAGA,EAAImD,EAAGnD,GAAK,EAAG,CAEvB,GAAS,OADT6C,EAAIU,EAAET,OAAO9C,IAET,OAAQuD,EAAET,OAAO9C,EAAI,IACrB,IAAK,KACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,KACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,IACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,IACJ7C,GAAK,EACL,MACJ,IAAK,IACD6C,EAAI,IACJ7C,GAAK,EAMbQ,EAAEC,KAAKoC,GAKX,OAHI7C,GAAKmD,GACL3C,EAAEC,KAAK8C,EAAET,OAAOK,IAEb3C,EAAEgJ,KAAK,KAGlBO,MAAO,SAAU8I,IAAK7I,SAClB,IAAIhK,EAAGC,EACHsD,EAAI,GACJuP,GAAK,GACT9I,QAAUA,SAAW,SAAU+I,EAAGlQ,EAAGW,GACjC,OAAOA,GAEX2D,KAAKkL,MAAQ,GACblL,KAAKmL,SAAW,GAChBnL,KAAKiL,YAAc,GACnBjL,KAAK6K,gBAAkB,EACvB7K,KAAKgL,cAAgB,EACrBhL,KAAK8K,cAAgB,EACrB9K,KAAKkK,YAAc,GACnB,IAEI2B,MAAOC,IAAKC,IAGZC,UACAC,UAEAC,qBAEAC,MACAC,GAXA1Q,EAAI,EACJ2Q,OAAS,GAETC,IAAM,EAINC,aAAc,EAelB,GATmB,KAAfvM,KAAKyJ,OAAgBtN,MAAM6D,KAAKyJ,SAChCzJ,KAAKyJ,MAAQ,IAEC,KAAdzJ,KAAK+J,MAAe5N,MAAM6D,KAAK+J,QAC/B/J,KAAK+J,KAAO,IAEE,KAAd/J,KAAK+J,MAAe/J,KAAK+J,KAAO,KAChC/J,KAAK+J,KAAO,GAEZ/J,KAAK+J,KAAO,EAAG,CACf,IAAIrG,EAAI,EAER,IADA4I,IAAM,EACDzT,EAAI,EAAGA,EAAI6S,IAAItS,OAAQP,GAAK,EAC7B,IAAqB,MAAjB6S,IAAI/P,OAAO9C,IAAgC,MAAjB6S,IAAI/P,OAAO9C,KAAeA,GAAK6S,IAAItS,OAAS,GAA0B,MAArBsS,IAAI/P,OAAO9C,EAAI,OAC1FyT,KAAO,IACItM,KAAK+J,KAAM,CAClBrG,EAAI7K,EAAI,EACR,MAIRyT,IAAMtM,KAAK+J,OACXrG,EAAIgI,IAAItS,QAEZsS,IAAMA,IAAIrG,OAAO3B,GAkBrB,IAfA0I,IADAD,MAAQT,IAAIlQ,MAAM,KACPpC,OACXsS,IAAM,GACNc,OAAS,CACLC,MAAO,EACPC,KAAM,EACNC,IAAK,EACLC,KAAM,EACNC,MAAO,EACPpK,MAAO,EACPqK,MAAO,GAEX9M,KAAKqJ,aAAe,CAChBC,IAAK,EACLjI,IAAK,GAEJxI,EAAI,EAAGA,EAAIuT,OACRvT,EAAI,IAAkB,MAAZsT,MAAMtT,IAA0B,MAAZsT,MAAMtT,IADxBA,GAAK,EAIL,KAAZsT,MAAMtT,KACN2T,OAAOC,OAAS,GAEJ,KAAZN,MAAMtT,KACN2T,OAAOE,MAAQ,GAEH,MAAZP,MAAMtT,KACN2T,OAAOG,KAAO,GAEF,KAAZR,MAAMtT,KACN2T,OAAOI,MAAQ,GAEH,KAAZT,MAAMtT,KACN2T,OAAOK,OAAS,GAEJ,KAAZV,MAAMtT,KACN2T,OAAOM,OAAS,GAEJ,KAAZX,MAAMtT,KACN2T,OAAO/J,OAAS,GA0BxB,IAvBAzC,KAAKmJ,kBAAoBnJ,KAAKkJ,WAAa,IACvCsD,OAAOG,IAAM,GAAKH,OAAOG,KAAOH,OAAOC,OAASD,OAAOG,KAAOH,OAAOI,MAAQJ,OAAOG,KAAOH,OAAOE,MAAQF,OAAOG,KAAOH,OAAOK,OAASL,OAAOG,IAAMH,OAAOM,MAC5J9M,KAAKmJ,kBAAoB,KAClBqD,OAAOE,KAAO,GAAKF,OAAOE,KAAOF,OAAOC,OAASD,OAAOE,KAAOF,OAAOI,MAAQJ,OAAOE,KAAOF,OAAOG,KAAOH,OAAOE,KAAOF,OAAOK,OAASL,OAAOE,KAAOF,OAAOM,MACpK9M,KAAKmJ,kBAAoB,IAClBqD,OAAOK,MAAQ,GAAKL,OAAOK,MAAQL,OAAOC,OAASD,OAAOK,MAAQL,OAAOI,MAAQJ,OAAOK,MAAQL,OAAOG,KAAOH,OAAOK,MAAQL,OAAOE,MAAQF,OAAOK,MAAQL,OAAOM,MACzK9M,KAAKmJ,kBAAoB,IAClBqD,OAAOI,KAAO,GAAKJ,OAAOI,KAAOJ,OAAOC,OAASD,OAAOI,KAAOJ,OAAOE,MAAQF,OAAOI,KAAOJ,OAAOG,KAAOH,OAAOI,KAAOJ,OAAOK,OAASL,OAAOI,KAAOJ,OAAOM,MACpK9M,KAAKmJ,kBAAoB,IAClBqD,OAAOM,MAAQ,GAAKN,OAAOM,MAAQN,OAAOC,OAASD,OAAOM,MAAQN,OAAOI,MAAQJ,OAAOM,MAAQN,OAAOE,MAAQF,OAAOM,MAAQN,OAAOG,KAAOH,OAAOM,MAAQN,OAAOK,MACzK7M,KAAKmJ,kBAAoB,KAClBqD,OAAOC,MAAQD,OAAOG,KAAOH,OAAOC,MAAQD,OAAOI,MAAQJ,OAAOC,MAAQD,OAAOE,MAAQF,OAAOC,MAAQD,OAAOK,QAASL,OAAOC,MAAQD,OAAOM,OACrJ9M,KAAKmJ,kBAAoB,KAIV,IAAfqD,OAAOG,KAA8B,IAAjBH,OAAOC,OAA+B,IAAhBD,OAAOI,MAA+B,IAAjBJ,OAAOK,OAA+B,IAAhBL,OAAOE,MAA+B,IAAjBF,OAAOM,OAAeN,OAAO/J,MAAQ,IAC/IzC,KAAKmJ,kBAAoB,KAEzBnJ,KAAKoJ,aACLpJ,KAAKkJ,UAAYlJ,KAAKmJ,mBAE1BnJ,KAAK8J,gBAAkB,EAChBpO,EAAI0Q,IACP,IAAIpM,KAAK6J,eAA8B,MAAZsC,MAAMzQ,IAA0B,MAAZyQ,MAAMzQ,GAArD,CAaA,IARAsE,KAAKkL,MAAM5R,KAAKyS,IAAM,IAClB/L,KAAKqK,aAA8B,IAAf0B,IAAI3S,QAAsC,IAAtB4G,KAAKkL,MAAM9R,QAAgB4G,KAAK0J,iBACxEqC,IAAIzS,KAAK,KACF0G,KAAKqK,aAA8B,IAAf0B,IAAI3S,QAC/B2S,IAAIzS,KAAK,IAAMgT,IAAM,GAAKtM,KAAK0J,iBAAmB,EAAI,KAE1D6C,aAAc,EACdN,UAAYvQ,EACLA,EAAI0Q,IAAmB,OAAbD,MAAMzQ,IAA4B,OAAbyQ,MAAMzQ,IAAa,CAErD,GADAsQ,UAAYH,MAAQC,IAAMpQ,EACtBsE,KAAKgK,YAAa,CAClB,KAAoB,MAAbmC,MAAMzQ,IACTA,GAAK,EACL6Q,aAAc,EAEdJ,MAAMzQ,KAAOsE,KAAKwB,OAAUxB,KAAKiK,YASjCvO,EAAIsQ,WARAO,cAAgBvM,KAAKkK,YAAY,IAAMlK,KAAKkL,MAAM9R,OArH1D,MAsHQ4G,KAAKkK,YAAY,IAAMlK,KAAKkL,MAAM9R,OAtH1C,IAsH6D,CACjD2T,MAAS,EACTC,OAAUtR,EAAIuQ,UAAY,IAGlCJ,MAAQnQ,GAWhB,GANIsE,KAAKmK,WACa,MAAbgC,MAAMzQ,IAAgBA,EAAI,EAAI0Q,IAAQD,MAAMzQ,EAAI,KAAOsE,KAAKwB,QAC7DqK,MAAQnQ,GAAK,GACD,GAGhBsE,KAAKwB,QAAU2K,MAAMzQ,IAAOsE,KAAKiK,YAoCjC,IADAoC,OAAS,GACF3Q,EAAI0Q,IAAmB,OAAbD,MAAMzQ,IAA4B,OAAbyQ,MAAMzQ,KACpCyQ,MAAMzQ,KAAOsE,KAAKkJ,WAAclJ,KAAK2K,2BAGrCwB,MAAMzQ,KAAOsE,KAAKkJ,YAAalJ,KAAK2K,yBAAsC,OAAX0B,SAGnEA,OAASF,MAAMzQ,GACfoQ,IAAMpQ,GAAK,MA5C+B,CAG9C,IAFAmQ,MAAQC,IAAMpQ,GAAK,EACnBsE,KAAKqJ,aAAarJ,KAAKwB,QAAU,EAC1B9F,EAAI0Q,IAAI,CACX,GAAID,MAAMzQ,KAAOsE,KAAKwB,MAAO,CACzB,GAAIxB,KAAKwB,QAAU2K,MAAMzQ,EAAI,GACzB,MAEAyQ,MAAMzQ,GAAK,GAAK,GAGxBoQ,IAAMpQ,GAAK,EAoBf,IAlBIyQ,MAAMzQ,KAAOsE,KAAKwB,OAClB9F,GAAK,GACG0Q,IAAmB,OAAbD,MAAMzQ,IAA4B,OAAbyQ,MAAMzQ,IAAesE,KAAKkJ,YAAciD,MAAMzQ,KACxEsE,KAAKkK,YAAY,IAAMlK,KAAKkL,MAAM9R,OAtJ/C,MAuJY4G,KAAKkK,YAAY,IAAMlK,KAAKkL,MAAM9R,OAvJ9C,IAuJiE,CACjD2T,MAAS,EACTC,OAAUtR,EAAIuQ,UAAY,KAKjCjM,KAAKkK,YAAY,IAAMlK,KAAKkL,MAAM9R,OA9J3C,MA+JQ4G,KAAKkK,YAAY,IAAMlK,KAAKkL,MAAM9R,OA/J1C,IA+J6D,CACjD2T,MAAS,EACTC,OAAUtR,EAAIuQ,UAAY,IAI/BvQ,EAAI0Q,IAAmB,OAAbD,MAAMzQ,IAA4B,OAAbyQ,MAAMzQ,IAAesE,KAAKkJ,YAAciD,MAAMzQ,IAChFA,GAAK,EAmBb,GAJAqQ,IAAIzS,KAAKuJ,QAAQ7C,KAAKkL,MAAM9R,OAAS,EAAG2S,IAAI3S,OAAQ+S,MAAMtP,MAAMgP,MAAOC,KAAKzJ,KAAK,MAC7ErC,KAAK2K,0BACLoB,IAAIA,IAAI3S,OAAS,GAAK4G,KAAKyL,iBAAiBM,IAAIA,IAAI3S,OAAS,KAE3C,KAAlB4G,KAAKkJ,UACL,KAAOxN,EAAI0Q,IAAMD,MAAMzQ,IAAMsE,KAAKkJ,WAC9BxN,GAAK,EAGTsE,KAAKkJ,YAAciD,MAAMzQ,KACzBA,GAAK,GAeb,GAZIyQ,MAAMzQ,EAAI,IAAMsE,KAAKkJ,WAA+B,KAAlBlJ,KAAKkJ,WACvC6C,IAAIzS,KAAKuJ,QAAQ7C,KAAKkL,MAAM9R,OAAS,EAAG2S,IAAI3S,OAAQ,KAEpD2S,IAAI3S,OAAS4G,KAAK6K,kBAClB7K,KAAK6K,gBAAkBkB,IAAI3S,QAEd,OAAb+S,MAAMzQ,KACNA,GAAK,GAEQ,OAAbyQ,MAAMzQ,KACNA,GAAK,IAEJsE,KAAK0J,kBAAoB4C,IAAM,EAChC,IAAKzT,EAAI,EAAGA,EAAIkT,IAAI3S,OAAQP,GAAK,EAAG,CAkBhC,IAjBIA,GAAKmH,KAAKmL,SAAS/R,QAAkB,IAARkT,OAC7BtM,KAAKmL,SAAStS,GAAK,CACfoU,QAAS,EACTC,OAAQ,EACRC,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,WAAY,EACZC,WAAW,EACXC,UAAW,GACXC,UAAW,EACXC,UAAW,EACXC,UAAWlN,OAAOmN,UAClBC,UAAW,IAGnBzR,EAAKvD,EAAIkT,IAAI3S,OAAU2S,IAAIlT,GAAGqG,QAAQ,aAAc,IAAM,GACtDc,KAAKmK,WAAa/N,EAAEhD,OAAS,GAAwB,OAAnBgD,EAAEiJ,OAAO,EAAG,IAAejJ,EAAEiJ,OAAOjJ,EAAEhD,OAAS,KAAO4G,KAAKwB,MAAO,CACpGxB,KAAKmL,SAAStS,GAAG0U,WAAY,EAC7B,IAAIrP,EAAI,IAAIuI,OAAOzG,KAAKwB,MAAQxB,KAAKwB,MAAO,OAC5CpF,EAAI2P,IAAIlT,GAAKuD,EAAEiJ,OAAO,EAAGjJ,EAAEhD,OAAS,GAAG8F,QAAQhB,EAAG8B,KAAKwB,OAE3D,GAAIxB,KAAKuL,aACL,IAAKuC,EAAI,EAAGA,EAAI9N,KAAKwL,aAAapS,OAAQ0U,GAAK,EAC3C,GAAI1R,EAAEU,eAAiBkD,KAAKwL,aAAasC,GAAG,GAAGhR,cAAe,CAC1DV,EAAI4D,KAAKwL,aAAasC,GAAG,GACzB,MAIZ,IAAIC,GAAK,IAkBT,GAjBIA,KAAO/N,KAAKwB,QACZuM,GAAK,KAEL3R,EAAET,OAAO,KAAOoS,IAAM3R,EAAEoD,SAASuO,MACjC/N,KAAKqJ,aAAa0E,KAAO,GAEnB,KAAN3R,EACA4D,KAAKmL,SAAStS,GAAGuU,UAAY,GAEzBhR,EAAEhD,OAAS4G,KAAKmL,SAAStS,GAAG8U,YAC5B3N,KAAKmL,SAAStS,GAAG8U,UAAYvR,EAAEhD,QAE/BgD,EAAEhD,OAAS4G,KAAKmL,SAAStS,GAAGgV,YAC5B7N,KAAKmL,SAAStS,GAAGgV,UAAYzR,EAAEhD,SAI5B,MADXuS,GAAKvP,IACYuP,GAAGxE,YAAa,CAC7BnH,KAAKmL,SAAStS,GAAGsU,SAAW,EAC5B,IAAIa,GAAKrC,GAAGnQ,MAAMwE,KAAK4K,eACnBoD,GAAG,GAAG5U,OAAS4G,KAAKmL,SAAStS,GAAG6U,YAChC1N,KAAKmL,SAAStS,GAAG6U,UAAYM,GAAG,GAAG5U,QAEnC4U,GAAG5U,OAAS,GACR4U,GAAG,GAAG5U,OAAS4G,KAAKmL,SAAStS,GAAG4U,YAChCzN,KAAKmL,SAAStS,GAAG4U,UAAYO,GAAG,GAAG5U,QAGvCgD,EAAEP,QAAQmE,KAAK4K,eAAiB,IAChC5K,KAAKmL,SAAStS,GAAGqU,QAAU,GAErB,MAAN9Q,GAAmB,MAANA,IACb4D,KAAKmL,SAAStS,GAAGwU,QAAU,GAG/BjR,EAAEkM,gBACFtI,KAAKmL,SAAStS,GAAGoU,SAAW,GAER,SAApB7Q,EAAEU,eAAgD,UAApBV,EAAEU,gBAChCkD,KAAKmL,SAAStS,GAAGyU,YAAc,GAK3C,GADAhB,KAAO,EACY,KAAftM,KAAKyJ,OAAgB6C,KAAOtM,KAAK0J,iBAAmB,EAAI,IAAmB,EAAb1J,KAAKyJ,MACnE,WA3LA/N,GAAK,EACLsE,KAAK8J,iBAAmB,EAmMhC,GALI9J,KAAKgL,cADLsB,KAAO,EACc,EAEAA,KAAOtM,KAAK0J,iBAAmB,EAAI,GAE5D1J,KAAK0K,aAAe,GAChB1K,KAAK0J,kBAAoB1J,KAAKkL,MAAM9R,OAAS,EAAG,CAGhD,IAFA4G,KAAKiL,YAAcjL,KAAKkL,MAAM+C,QAC9BjO,KAAK8K,cAAgB9K,KAAKiL,YAAY7R,OACjCP,EAAI,EAAGA,EAAImH,KAAK8K,cAAejS,GAAK,EACF,KAA/BmH,KAAKiL,YAAYpS,GAAGkM,QACpB/E,KAAK0K,aAAapR,KAAK,CACnByT,MAAS,EACTmB,MAAUrV,EAAI,IAI1B,IAAKA,EAAI,EAAGA,EAAImH,KAAK6K,gBAAiBhS,GAAK,EAClCmH,KAAKiL,YAAYpS,IAA8B,KAAxBmH,KAAKiL,YAAYpS,KACzCmH,KAAKiL,YAAYpS,GAAK,SAAWA,EAAI,IAEzCmH,KAAKiL,YAAYpS,GAAKmH,KAAKiL,YAAYpS,GAAGkM,OAQlD,IALA/E,KAAKsK,gBAAiB,EACtBtK,KAAKuK,mBAAqB,GAC1BvK,KAAKyK,oBAAsB,GAC3BzK,KAAKwK,iBAAkB,EACvB0B,qBAAuBlM,KAAKgL,cAAgB,EAAIhL,KAAKkL,MAAM,GAAG9R,OAAS,EAClEN,EAAI,EAAGA,EAAIkH,KAAKkL,MAAM9R,OAAQN,GAAK,EAAG,CACvC,GAAIkH,KAAKkL,MAAMpS,GAAGM,OAAS4G,KAAK6K,gBAC5B,IAAKhS,EAAImH,KAAKkL,MAAMpS,GAAGM,OAAQP,EAAImH,KAAK6K,gBAAiBhS,GAAK,EACtDA,GAAKmH,KAAKmL,SAAS/R,SACnB4G,KAAKmL,SAAStS,GAAK,CACfoU,QAAS,EACTC,OAAQ,EACRC,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,WAAY,EACZC,WAAW,EACXC,UAAW,GACXC,UAAW,EACXC,UAAW,EACXC,UAAWlN,OAAOmN,UAClBC,UAAW,IAGnB7N,KAAKmL,SAAStS,GAAGuU,UAAY,EAGjCpN,KAAK0J,kBAAoB1J,KAAK8K,eAAiB9K,KAAKkL,MAAMpS,GAAGM,SAC7D4G,KAAKwK,iBAAkB,EACnBxK,KAAKyK,oBAAoBrR,OAAS,GAClC4G,KAAKyK,oBAAoBnR,KAAKR,EAAI,IAGrCkH,KAAK0J,kBAAoBwC,sBAAwBlM,KAAKkL,MAAMpS,GAAGM,SAChE4G,KAAKsK,gBAAiB,EAClBtK,KAAKuK,mBAAmBnR,OAAS,GACjC4G,KAAKuK,mBAAmBjR,KAAKR,EAAI,IAI7C,GAAIkH,KAAKiL,YAAY7R,OAAS,EAC1B,IAAKP,EAAI,EAAGA,EAAImH,KAAKiL,YAAY7R,OAAQP,GAAK,EAC1CmH,KAAKmO,oBAAoBtV,QAE1B,GAAImH,KAAKkL,MAAM9R,OAAS,EAC3B,IAAKP,EAAI,EAAGA,EAAImH,KAAK6K,gBAAiBhS,GAAK,EAClCmH,KAAKiL,YAAYpS,IAA8B,KAAxBmH,KAAKiL,YAAYpS,KACzCmH,KAAKiL,YAAYpS,GAAK,SAAWA,EAAI,IAEzCmH,KAAKmO,oBAAoBtV,GAGjC,IAAKA,EAAI,EAAGA,EAAImH,KAAKiL,YAAY7R,OAAQP,GAAK,EACtCmH,KAAK2J,gBACL3J,KAAKiL,YAAYpS,GAAKmH,KAAKiL,YAAYpS,GAAGiE,eAE1CkD,KAAK4J,gBACL5J,KAAKiL,YAAYpS,GAAKmH,KAAKiL,YAAYpS,GAAG0G,eAWlD,MARsB,KAAlBS,KAAKqL,UACLrL,KAAKkL,MAAMkD,KAAKpO,KAAKqO,SAErBrO,KAAKqJ,aAAa,MAAQrJ,KAAKqJ,aAAa,KAC5CrJ,KAAKuJ,cAAgB,IAErBvJ,KAAKuJ,cAAgB,IAElB,GAGX+E,YAAa,SAAUC,MACnBtF,IAAIoC,SAAWkD,KAAKxJ,QAGxBsJ,QAAS,SAAUhV,EAAGmV,GAClB,GAAqB,KAAjBvF,IAAIoC,SACJ,OAAO,EAGX,IADA3H,EAAIuF,IAAIoC,SAAS7P,MAAM,KAClB3C,EAAI,EAAGA,EAAI6K,EAAEtK,OAAQP,GAAK,EAO3B,OANA4V,EAAE5V,GAAK,EACP8P,EAAE9P,GAAK,GAC4B,KAA/B6K,EAAE7K,GAAGoN,MAAM,GAAGnJ,gBACd2R,EAAE5V,IAAM,EACR6K,EAAE7K,GAAK6K,EAAE7K,GAAGmN,KAAKtC,EAAE7K,GAAGO,OAAS,IAE3BsK,EAAE7K,GAAGmN,KAAK,GAAGlJ,eACrB,IAAK,IACD6L,EAAE9P,GAAK,IACP6K,EAAE7K,GAAK6K,EAAE7K,GAAGoN,MAAMvC,EAAE7K,GAAGO,OAAS,GAChC,MACJ,IAAK,IACDuP,EAAE9P,GAAK,IACP6K,EAAE7K,GAAK6K,EAAE7K,GAAGoN,MAAMvC,EAAE7K,GAAGO,OAAS,GAMxC,IAAKP,EAAI,EAAGA,EAAI6K,EAAEtK,OAAQP,GAAK,EACtBsD,MAAMuH,EAAE7K,IAGT6K,EAAE7K,IAAM,EAFR6K,EAAE7K,GAAa,EAAP6K,EAAE7K,GAAU,EAK5B,IAAKA,EAAI,EAAGA,EAAI6K,EAAEtK,OAAQP,GAAK,EACvB6K,EAAE7K,IAAMQ,EAAED,SACVsK,EAAE7K,IAAM,GAGhB,IAAKA,EAAI,EAAGA,EAAI6K,EAAEtK,OAAQP,GAAK,EAC3B,KAAI6K,EAAE7K,GAAK,GAGX,GAAKsD,MAAM9C,EAAEqK,EAAE7K,IAAIqG,QAAQ,SAAU,MAAS/C,MAAMqS,EAAE9K,EAAE7K,IAAIqG,QAAQ,SAAU,MAAQ+J,IAAI+B,eAAiB/B,IAAIkC,SAASzH,EAAE7K,IAAIsU,QAAUlE,IAAIkC,SAASzH,EAAE7K,IAAIuU,UAAoB,KAARzE,EAAE9P,GAQrK,GAAIoQ,IAAIqC,eAAgB,CACpB,GAAIjS,EAAEqK,EAAE7K,IAAIiE,cAAgB0R,EAAE9K,EAAE7K,IAAIiE,cAChC,OAAQ,EAAI2R,EAAE5V,GAElB,GAAIQ,EAAEqK,EAAE7K,IAAIiE,cAAgB0R,EAAE9K,EAAE7K,IAAIiE,cAChC,OAAO,EAAI2R,EAAE5V,OAEd,CACH,GAAIQ,EAAEqK,EAAE7K,IAAM2V,EAAE9K,EAAE7K,IACd,OAAQ,EAAI4V,EAAE5V,GAElB,GAAIQ,EAAEqK,EAAE7K,IAAM2V,EAAE9K,EAAE7K,IACd,OAAO,EAAI4V,EAAE5V,OApB2J,CAChL,GAAoC,EAAhCQ,EAAEqK,EAAE7K,IAAIqG,QAAQ,SAAU,IAA0C,EAAhCsP,EAAE9K,EAAE7K,IAAIqG,QAAQ,SAAU,IAC9D,OAAQ,EAAIuP,EAAE5V,GAElB,GAAoC,EAAhCQ,EAAEqK,EAAE7K,IAAIqG,QAAQ,SAAU,IAA0C,EAAhCsP,EAAE9K,EAAE7K,IAAIqG,QAAQ,SAAU,IAC9D,OAAO,EAAIuP,EAAE5V,GAoBzB,OAAO,GAGXsV,oBAAqB,SAAUO,QAG3B,OAA0B,IAAtB1O,KAAKkL,MAAM9R,OACJ,IAEPsV,QAAU1O,KAAKmL,SAAS/R,SACxB4G,KAAKmL,SAASuD,QAAU,CACpBzB,QAAS,EACTC,OAAQ,EACRC,QAAS,EACTC,SAAU,EACVC,OAAQ,EACRC,WAAY,EACZE,UAAW,KAGfxN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQrB,QAC3CrN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQpB,YAC3CtN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQzB,SAC3CjN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQxB,QAC3ClN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQvB,SAC3CnN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKmL,SAASuD,QAAQrB,OAAS,GAAKrN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQrB,OAASrN,KAAKmL,SAASuD,QAAQtB,UAC9GpN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKmL,SAASuD,QAAQpB,WAAa,GAAKtN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQpB,WAAatN,KAAKmL,SAASuD,QAAQtB,UACtHpN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKmL,SAASuD,QAAQzB,QAAU,GAAKjN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQzB,QAAUjN,KAAKmL,SAASuD,QAAQtB,UAChHpN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKmL,SAASuD,QAAQxB,OAAS,GAAKlN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQxB,OAASlN,KAAKmL,SAASuD,QAAQtB,UAC9GpN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,KAEPxN,KAAKmL,SAASuD,QAAQvB,QAAU,GAAKnN,KAAKkL,MAAM9R,QAAU4G,KAAKmL,SAASuD,QAAQvB,QAAUnN,KAAKmL,SAASuD,QAAQtB,UAChHpN,KAAKmL,SAASuD,QAAQlB,UAAY,IAC3B,MAEXxN,KAAKmL,SAASuD,QAAQlB,UAAY,KAC3B,QAGXjL,UAAW,SAAUoM,IAAKnM,UACtBA,SAAWA,UAAY,SAAUoJ,EAAGlQ,EAAGW,GACnC,OAAOA,GAEX,IACIX,EACA0Q,GACAR,EAHAF,IAAM,GAIViD,IAAMA,KAAO,KACT3O,KAAK0J,kBACL1J,KAAKkL,MAAM0D,QAAQ5O,KAAKiL,aAE5B,IAEI4D,KAFAC,GAAK9O,KAAKkL,MAAM9R,OAChBoN,GAAK,IAAIC,OAAO,IAAMzG,KAAKkJ,UAAY,QAAS,OAEpD,IAAK0C,EAAI,EAAGA,EAAIkD,GAAIlD,GAAK,EAIrB,IAHIA,IACAF,KAAOiD,KAENjT,EAAI,EAAG0Q,GAAKpM,KAAKkL,MAAMU,GAAGxS,OAAQsC,EAAI0Q,GAAI1Q,GAAK,EAC5CA,IACAgQ,KAAO1L,KAAKkJ,WAEhB2F,KAAOrM,SAASoJ,EAAGlQ,EAAGsE,KAAKkL,MAAMU,GAAGlQ,IAChC8K,GAAG7E,KAAKkN,QACRA,KAAO7O,KAAKwJ,YAAcqF,KAAK3P,QAAQ,KAAMc,KAAKwJ,YAAcxJ,KAAKwJ,aAAexJ,KAAKwJ,aAE7FkC,KAAQmD,MAAQ,IAAMA,KAAQA,KAAO,GAG7C,OAAOnD,MAGX7S,EAAGC,EAAG2C,EACNsT,IAAM/L,KACNgM,OAAQ,EACZ,SAASC,OAAOjT,GACZgE,KAAKhE,EAAIA,EAAI,GAAK,EAClBgE,KAAKkP,MAAQlP,KAAKhE,EAClBgE,KAAKmP,KAAO,WACR,OAAOnP,KAAKhE,GAAK,GAErBgE,KAAKoP,KAAO,WACR,OAAOpP,KAAKhE,GAEhBgE,KAAKqP,MAAQ,WACTrP,KAAKhE,EAAIgE,KAAKkP,OAItB,SAASI,YAAYrG,IAAK7M,EAAGmT,QACzB,GAAKtG,IAAL,CAGA,IAAIpQ,EAAGC,EACP,IAAKA,EAAI,EAAGA,EAAImQ,IAAI4B,gBAAiB/R,GAAK,EACtCkK,KAAK,SAAWlK,EAAI,GAAK,OACzBkK,KAAK,SAAWlK,EAAI,GAAK,OACzBkK,KAAK,SAAWlK,EAAI,GAAK,OACzBkK,KAAK,SAAWlK,EAAI,GAAK,OAE7B,IAAKA,EAAI,EAAGA,EAAImQ,IAAIgC,YAAY7R,OAAQN,GAAK,EAAG,CAC5CkK,KAAK,SAAWlK,EAAI,GAAK,oBAAsBA,EAAI,KACnDkK,KAAK,SAAWlK,EAAI,GAAK,oBAAsBA,EAAI,mBACnD,IACIkK,KAAK,OAASiG,IAAIgC,YAAYnS,GAAK,oBAAsBA,EAAI,KAC/D,MAAOoF,KAEb,GAAIqR,QAAU,EACV,IAAKzW,EAAI,EAAGA,EAAImQ,IAAIiC,MAAMqE,QAAQnW,OAAQN,GAAK,EAAG,CAC9CkK,KAAK,SAAWlK,EAAI,GAAK,cAAgByW,OAAS,KAAOzW,EAAI,KAC7DkK,KAAK,SAAWlK,EAAI,GAAK,cAAgByW,OAAS,KAAOzW,EAAI,mBAC7D,IACIkK,KAAK,OAASiG,IAAIgC,YAAYnS,GAAK,cAAgByW,OAAS,KAAOzW,EAAI,KACzE,MAAOoF,KAGjB,IACI,OAAO8E,KAAK5G,GACd,MAAO8B,GACL,OAAO,IAIf,SAASsR,UAAUvG,IAAK7M,EAAGmT,OAAQE,IAAKC,SACpC,GAAKzG,IAAL,CAGA,IAAIpQ,EAAGC,EACH6W,IAAMJ,QAAU,GAAK,EACrBK,GAAK3G,IAAIiC,MAAM9R,OACfyW,GAAK5G,IAAIgC,YAAY7R,OACrB0W,GAAK,EACLC,GAAK,KACLC,GAAK,IACLC,GAAK,IACLtD,IAAM,OACNtQ,EAAI,GAER,IADAqT,QAAUA,SAAW,GAChB5W,EAAI,EAAGA,EAAImQ,IAAI4B,gBAAiB/R,GAAK,EACtCkK,KAAK,SAAWlK,EAAI,GAAK,OACzBkK,KAAK,SAAWlK,EAAI,GAAK,OACzBkK,KAAK,SAAWlK,EAAI,GAAK,OACzBkK,KAAK,SAAWlK,EAAI,GAAK,OAE7B,IAAKA,EAAI,EAAGA,EAAImQ,IAAIgC,YAAY7R,OAAQN,GAAK,EACzCkK,KAAK,SAAWlK,EAAI,GAAK,uBACzBkK,KAAK,SAAWlK,EAAI,GAAK,qCACrB4W,QAAQQ,QAAUR,QAAQQ,OAAO9W,OAAS,IAC1C4J,KAAK,KAAOlK,EAAI,GAAK,MAAQA,EAAI,GAAK,IAAM4W,QAAQQ,OAAO7N,KAAK,MAChEW,KAAK,KAAOlK,EAAI,GAAK,MAAQA,EAAI,GAAK,IAAM4W,QAAQQ,OAAO7N,KAAK,OAGxE,GAAIkN,QAAU,EACV,IAAKzW,EAAI,EAAGA,EAAImQ,IAAIiC,MAAMqE,QAAQnW,OAAQN,GAAK,EAAG,CAC9CkK,KAAK,SAAWlK,EAAI,GAAK,yBACzBkK,KAAK,SAAWlK,EAAI,GAAK,uCACzB,IACIkK,KAAK,OAASiG,IAAIgC,YAAYnS,GAAK,yBACrC,MAAOoF,IACT7B,EAAI8T,kBAAkBnN,KAAK,KAAOlK,EAAI,IAAKA,EAAGmQ,KAC9CjG,KAAK,KAAOlK,EAAI,GAAK,MACrBuD,EAAI8T,kBAAkBnN,KAAK,KAAOlK,EAAI,IAAKA,EAAGmQ,KAC9CjG,KAAK,KAAOlK,EAAI,GAAK,MAChB,KAAOA,EAAI,KAAO4W,UACnB1M,KAAK,KAAOlK,EAAI,GAAK,MAAQA,EAAI,GAAK,IAAM4W,QAAQ,KAAO5W,EAAI,IAAIuJ,KAAK,MACxEW,KAAK,KAAOlK,EAAI,GAAK,MAAQA,EAAI,GAAK,IAAM4W,QAAQ,KAAO5W,EAAI,IAAIuJ,KAAK,OAExEqN,QAAQQ,QAAUR,QAAQQ,OAAO9W,OAAS,IAC1C4J,KAAK,KAAOlK,EAAI,GAAK,MAAQA,EAAI,GAAK,IAAM4W,QAAQQ,OAAO7N,KAAK,MAChEW,KAAK,KAAOlK,EAAI,GAAK,MAAQA,EAAI,GAAK,IAAM4W,QAAQQ,OAAO7N,KAAK,OAI5EyN,GAAMP,QAAU,EAAKtG,IAAIiC,MAAMqE,QAAQnW,OAAS,EAChD,IAAIC,EAAI+C,EAAEZ,MAAM,KACZgT,EACJ,IAAK3V,EAAI,EAAGA,EAAIQ,EAAED,OAAQP,GAAK,EAC3B2V,EAAInV,EAAER,GAAGkM,OAAOvJ,MAAM,KACW,OAA7BgT,EAAE,GAAGzJ,OAAOxF,eAA0BiP,EAAEpV,OAAS,GAAqB,MAAhBoV,EAAE,GAAGzJ,SAC3D1L,EAAER,GAAK,OAASoQ,IAAIzH,MAAM6E,QAAQ,IAAM,MAAQ,IAAM4C,IAAIzH,MAAM6E,QAAQ,IAAM,MAAQ,KAG9F,IACI,OAAOrD,KAAK3J,EAAEgJ,KAAK,MACrB,MAAOnE,GACL,MAAO,KAIf,SAASkS,WAAWnH,IAAKoH,IAAKd,OAAQE,IAAKa,YACvC,GAAKrH,IAAL,CAGA,GAAmB,KAAfoH,IAAItL,OACJ,OAAOsL,IAIX,IACIjU,GAFJiU,KADAA,IAAMA,IAAInR,QAAQ,SAAU,SAASA,QAAQ,QAAS,QAAQA,QAAQ,SAAU,SAASA,QAAQ,QAAS,SAChG1D,MAAM,cAAc6G,KAAK,SACvBnD,QAAQ,MAAO,OAAS1D,MAAM,SAChC6G,KAAK,MACXxJ,EAAI,EACJ0X,KAAM,EACVC,MAAQpU,EAAEZ,MAAM,MAEhB,IADA,IAAImN,EAAI,GACD9P,EAAI2X,MAAMpX,QACTmX,KAAoB,KAAbC,MAAM3X,IACb8P,EAAErP,KAAKkW,UAAUvG,IAAKuH,MAAM3X,GAAI0W,OAAQE,IAAKa,aAC7CC,KAAM,GAEW,KAAbC,MAAM3X,GACN0X,KAAM,EAEN5H,EAAErP,KAAKkX,MAAM3X,IAGrBA,GAAK,EAET,OAAO8P,EAAEtG,KAAK,KAGlB,SAASoO,WAAWxH,IAAKyH,QAASL,IAAKM,WAAYC,QAASC,QAASP,YACjE,IAAIzX,EAEJ,GAAKoQ,IAAL,CAGA,IAAI7M,EAAI,GACJ0U,OAAS,IAAI7B,OAEjB,IADA7S,GAAKgU,WAAWnH,IAAKyH,SAAU,EAAG,GAC7B7X,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAEP,SADxBuX,WAAWnH,IAAK4H,QAAShY,EAAGA,EAAG,MAC7BgJ,WAAWmE,KAAK,KAGtB5J,GAAKgU,WAAWnH,IAAKoH,IAAKxX,EAAGiY,OAAO3B,OAAQmB,YACxCzX,GAAKoQ,IAAIiC,MAAM9R,OAAS,IACxBgD,GAAKgU,WAAWnH,IAAK0H,WAAY9X,EAAGiY,OAAO1B,UAInD,OADAhT,GAAKgU,WAAWnH,IAAK2H,SAAU,EAAGE,OAAO1B,OAAQkB,aAIrD,SAASS,WAAW9H,IAAK+H,mBAAoBC,eAAgBC,WAAYxB,SACrE,IAAI7W,EAAGC,EAEHO,EADA+C,EAAI,qEAEJqL,EAAI,EACJpL,EAAI,GACJ8U,UAAY,GAChB,GAAKlI,IAAL,CAKA,IAFAyG,QAAUA,SAAW,GACrBrW,EAAI+X,aAAanI,KACZnQ,EAAI,EAAGA,EAAImQ,IAAI4B,gBAAiB/R,GAAK,EACtCqY,UAAU7X,KAAK,GAEnB,GAAI2P,IAAIS,kBAAoBsH,mBAAoB,CAK5C,IAJA5U,GAAK,cACD6U,iBACA7U,GAAK,cAEJqL,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAO3BrL,GAAK,uBANLtD,EAAIO,EAAEoO,GAAK,GAMuB,GAAK,MAJnCpL,EADAvD,EAAImQ,IAAIgC,YAAY7R,OAChB,QAAUN,EAEVmQ,IAAIgC,YAAYnS,IAEyB6N,SAASzH,QAAQ,cAAe,SAAW,UAEhG9C,GAAK,kBAGT,IADAA,GAAK,UACAvD,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CACtCuD,GAAK,MACDsT,SAAW,UAAWA,UACA,KAAlBA,QAAQ2B,OAAqC,KAArB3B,QAAQ4B,SAChClV,GAAK,IAAMsT,QAAQ2B,MAEG,KAAlB3B,QAAQ2B,OAAqC,MAArB3B,QAAQ4B,UAAqBzY,EAAI,EACzDuD,GAAK,IAAMsT,QAAQ2B,MAEG,KAAlB3B,QAAQ2B,OAAqC,MAArB3B,QAAQ4B,UAAsBzY,EAAI,IAC1DuD,GAAK,IAAMsT,QAAQ2B,OAIT,KAAlB3B,QAAQ6B,OAAqC,KAArB7B,QAAQ8B,SAChCpV,GAAK,IAAMsT,QAAQ6B,MAEG,KAAlB7B,QAAQ6B,OAAqC,MAArB7B,QAAQ8B,UAAqB3Y,EAAI,EACzDuD,GAAK,IAAMsT,QAAQ6B,MAEG,KAAlB7B,QAAQ6B,OAAqC,MAArB7B,QAAQ8B,UAAsB3Y,EAAI,IAC1DuD,GAAK,IAAMsT,QAAQ6B,QAKnCnV,GAAK,MACD6U,iBACA7U,GAAK,QAAUvD,EAAI,GAAK,WAE5B,IAAK4O,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAQ3B,GADApL,EAAI8T,kBAJA9T,GAFJvD,EAAIO,EAAEoO,GAAK,IACFwB,IAAIiC,MAAMrS,GAAGO,OACd,IAEA6P,IAAIiC,MAAMrS,GAAGC,GAEIA,EAAGmQ,MACxBA,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,UAIxE,GAAU,KAANnR,GAAY,kBAAmBqT,SAAqC,KAA1BA,QAAQ+B,eAAwBxI,IAAIkC,SAASrS,IAAmC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UAAkB,CAC/H,IACQnR,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,IACT9B,GAAK,OAASC,EAAEsK,SAASzH,QAAQ,cAAe,SAChD9C,GAAK,cAEK,KAANC,IACAA,EAAI,KAERD,GAAK,OAASC,EAAEsK,SAASzH,QAAQ,cAAe,SAChD9C,GAAK,eAdTA,GAAK,qBAAyBC,EAAI,UAClC8U,UAAUrY,IAAM,EAAIuD,EAiB5BD,GAAK,UAGT,GADAA,GAAK,WACD8U,WAAY,CAKZ,IAJA9U,GAAK,cACD6U,iBACA7U,GAAK,gBAEJqL,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,GACPwB,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,UAGxEpR,GAAK,kBAFLA,GAAK,qBAAyB+U,UAAUrY,GAAGyD,QAAQ0M,IAAIkC,SAASrS,GAAG2U,WAAa,UAKxFrR,GAAK,kBAGT,OADAA,GAAK,YAIT,SAASyV,sBAAsB5I,IAAK+H,mBAAoBC,eAAgBC,WAAYxB,SAChF,IAAI7W,EAAGC,EAEHO,EADA+C,EAAI,qEAEJqL,EAAI,EACJpL,EAAI,GACR,GAAK4M,IAAL,CAQA,IALA5P,EAAI+X,aAAanI,MACbA,IAAIS,kBAAoBsH,sBACxB5U,GAAK,wDAETA,GAAK,UACAvD,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CACtC,IAAK4O,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAAG,CAmB9B,GAlBArL,GAAK,OACK,IAANqL,GAAWwJ,iBACX7U,GAAK,yBAA2BvD,EAAI,GAAK,oBAQ7CuD,GAAK,uBANLtD,EAAIO,EAAEoO,GAAK,GAMuB,GAAK,MAJnCpL,EADAvD,EAAImQ,IAAIgC,YAAY7R,OAChB,QAAUN,EAEVmQ,IAAIgC,YAAYnS,IAEyB6N,SAASzH,QAAQ,cAAe,SAAW,UAO5F7C,EAAI8T,kBAJA9T,GAFJvD,EAAIO,EAAEoO,GAAK,IACFwB,IAAIiC,MAAMrS,GAAGO,OACd,IAEA6P,IAAIiC,MAAMrS,GAAGC,GAEIA,EAAGmQ,MACxBA,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,UAGxE,GAAU,KAANnR,GAAY,kBAAmBqT,SAAqC,KAA1BA,QAAQ+B,eAAwBxI,IAAIkC,SAASrS,IAAmC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UAAkB,CAC/H,IACQnR,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,IACT9B,GAAK,OAASC,EAAEsK,SAASzH,QAAQ,cAAe,SAChD9C,GAAK,cAEK,KAANC,IACAA,EAAI,KAERD,GAAK,OAASC,EAAEsK,SAASzH,QAAQ,cAAe,SAAW,eAZ/D9C,GAAK,qBAAyBC,EAAEE,QAAQ0M,IAAIkC,SAASrS,GAAG2U,WAAa,UAezErR,GAAK,UAETA,GAAK,GAIT,OAFAA,GAAK,WACLA,GAAK,YAIT,SAAS0V,eAAe7I,IAAK+H,mBAAoBC,eAAgBC,YAC7D,IAAIrY,EAAGC,EAEHO,EADA+C,EAAI,kCAEJqL,EAAI,EACJpL,EAAI,GACJ8U,UAAY,GAChB,GAAKlI,IAAL,CAIA,IADA5P,EAAI+X,aAAanI,KACZnQ,EAAI,EAAGA,EAAImQ,IAAI4B,gBAAiB/R,GAAK,EACtCqY,UAAU7X,KAAK,GAEnB,GAAI2P,IAAIS,kBAAoBsH,mBAKxB,IAJA5U,GAAK,OACD6U,iBACA7U,GAAK,SAEJqL,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAO3BrL,GAAK,MAJDC,GAFJvD,EAAIO,EAAEoO,GAAK,GACHwB,IAAIgC,YAAY7R,OAChB,QAAUN,EAEVmQ,IAAIgC,YAAYnS,IAEV6N,SAASzH,QAAQ,cAAe,SAAW,KAGjE,IAAKrG,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAKtC,IAJAuD,GAAK,OACD6U,iBACA7U,GAAK,MAAQvD,EAAI,GAAK,MAErB4O,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAO3BpL,EAAI8T,kBAJA9T,GAFJvD,EAAIO,EAAEoO,GAAK,IACFwB,IAAIiC,MAAMrS,GAAGO,OACd,IAEA6P,IAAIiC,MAAMrS,GAAGC,GAEIA,EAAGmQ,KACxBxB,EAAI,IACJrL,GAAK,OAEL6M,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAI9D,KAANnR,IACAA,EAAI,KAERD,GAAK,KAAOC,EAAEsK,SAASzH,QAAQ,cAAe,SAASA,QAAQ,MAAO,wBANtE9C,GAAK,KAAOC,EAAEE,QAAQ0M,IAAIkC,SAASrS,GAAG2U,WACtC0D,UAAUrY,IAAM,EAAIuD,GAQ5BD,GAAK,KAGT,GADAA,GAAK,GACD8U,WAKA,IAJA9U,GAAK,OACD6U,iBACA7U,GAAK,WAEJqL,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,GACPwB,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,UAGxEpR,GAAK,OAFLA,GAAK,KAAO+U,UAAUrY,GAAGyD,QAAQ0M,IAAIkC,SAASrS,GAAG2U,WAAa,KAO1E,OADArR,GAAK,MAIT,SAAS2V,SAAS9I,IAAK+I,QAASC,SAC5B,IACInZ,EACAoZ,IAIA7Y,EANAR,EAAI,EAGJsZ,SAAWH,SAAW,SACtBI,SAAWH,SAAW,MACtB7V,EAAI,2BAAiC+V,SAAW,MAEhD1K,EAAI,EACJpL,EAAI,GACJgW,EAAI,GACR,GAAKpJ,IAAL,CAIA,GADA5P,EAAI+X,aAAanI,KACQ,IAArBA,IAAIiC,MAAM9R,OACV,OAAOgD,EAAI,KAAO+V,SAAW,IAGjC,IADAD,IAAMI,aAAarJ,KACdpQ,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAEtC,IADAuD,GAAK,IAAMgW,SAAW,MACjB3K,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAO3BpL,EAAI8T,kBAJA9T,GAFJvD,EAAIO,EAAEoO,GAAK,IACFwB,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAAK,GAEDA,EAAGmQ,KAM5B7M,GAAK,KAJDiW,EADAvZ,GAAKoZ,IAAI9Y,OACL,QAAUN,EAEVoZ,IAAIpZ,GAAGoG,QAAQ,mCAAoC,MAE9CA,QAAQ,OAAQ,KAAO,IAAM7C,EAAEuK,QAAU,KAAOyL,EAAEnT,QAAQ,OAAQ,KAAO,MAE1F9C,GAAK,KAAOgW,SAAW,MAG3B,OADAhW,GAAK,KAAO+V,SAAW,KAI3B,SAASI,mBAAmBtJ,IAAK+I,QAASC,QAASvC,SAC/C,IACI5W,EACAoZ,IAFArZ,EAAI,EAGJsZ,SAAWH,SAAW,SACtBI,SAAWH,SAAW,MAC1BO,OAAS9C,SAAW,GACpB,IACIrW,EADA+C,EAAI,2BAAiC+V,SAAW,MAEhD1K,EAAI,EACJpL,EAAI,GAER,GAAK4M,IAAL,CAIA,GADA5P,EAAI+X,aAAanI,KACQ,IAArBA,IAAIiC,MAAM9R,OACV,OAAOgD,EAAI,KAAO+V,SAAW,IAGjC,IADAD,IAAMI,aAAarJ,KACdpQ,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAEtC,IADAuD,GAAK,IAAMgW,SACN3K,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAGvBpL,GAFJvD,EAAIO,EAAEoO,GAAK,IACFwB,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,KAEjB4W,QAAQ+C,WAAcpW,MAAAA,GAAuC,KAANA,KAG3DA,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,KAM5B7M,GAAK,KALDtD,GAAKoZ,IAAI9Y,OACL,QAAUN,EAEVoZ,IAAIpZ,GAAGoG,QAAQ,mCAAoC,MAE9CA,QAAQ,OAAQ,KAAO,MAAS7C,EAAI,IAAIuK,QAAU,KAEnExK,GAAK,MAAQgW,SAAW,MAG5B,OADAhW,GAAK,KAAO+V,SAAW,KAI3B,SAASO,UAAUzJ,IAAKyG,SACpB,IACI5W,EAAG6Z,GACHT,IAFArZ,EAAI,EAGJuD,EAAI,GACJ/C,EAAI,GACJoO,EAAI,EACJpL,EAAI,GACJgW,EAAI,GACJO,aAAc,EACdC,OAAS,EAUb,GATKnD,UACDA,QAAU,IAER,aAAcA,UAChBA,QAAQoD,UAAW,GAEnBpD,QAAQqD,UACRrD,QAAQsD,aAAc,GAErB/J,IAAL,CAGA5P,EAAI+X,aAAanI,KACjBiJ,IAAMI,aAAarJ,KACnB,IAAIgK,KAAM,EACNC,YAAa,EACjB,GAAyB,IAArBjK,IAAIiC,MAAM9R,OACV,OAAIsW,QAAQsD,YACD,GAEPtD,QAAQqD,QACD,KAEJ,KAEX,GAAIrD,QAAQyD,YAAa,CACrB,IAAKta,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,EAAG,CAChC,GAAIqZ,IAAIrZ,GAAGgD,QAAQ,MAAQ,EAAG,CAC1BoX,KAAM,EACN,OAEA9W,MAAM+V,IAAIrZ,GAAG2C,MAAM,KAAK,KAAQiF,OAAOuI,UAAiC,EAAvBkJ,IAAIrZ,GAAG2C,MAAM,KAAK,MACnE0X,YAAa,GAMrB,GAHIA,aACAD,KAAM,GAENA,IACA,OAAOG,iBAAiBnK,IAAKyG,SAMrC,IAHKA,QAAQsD,cACT5W,EAAI,OAEHvD,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAStC,IARK6W,QAAQsD,cACT5W,GAAK,KAETA,GAAK,IACAsT,QAAQsD,aAAgBtD,QAAQoD,WACjC1W,GAAK,MAETyW,OAAS,EACJpL,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,EACXmL,YAAclZ,SAAS2Z,eAAe,WAAava,EAAI,KAAOY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,QAMjG,MAJNjX,EADAvD,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,KAEL4W,QAAQ+C,YAGxBrW,GAAMyW,OAAS,EAAI,KAAQnD,QAAQsD,aAAetD,QAAQoD,SAAY,GAAK,MAAU,GAEjFT,EADAvZ,GAAKoZ,IAAI9Y,SAAW8Y,IAAIpZ,IAAiB,KAAXoZ,IAAIpZ,GAC9B,SAAW2O,EAAI,GAEfyK,IAAIpZ,GAEP4W,QAAQsD,cACT5W,GAAK,MAETA,GAAK,KAAQiW,EAAE3T,SAAW,MAC1BrC,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,MACvByG,QAAQ6D,YAActK,IAAIkC,SAASrS,KAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,YAAsBkC,QAAQ8D,SAAWnX,EAAE8K,aAC7J,KAAb9K,EAAE0I,SACF1I,EAAIA,EAAE+K,WAAa,IACbpB,KAAK,IAAM1J,mBACbD,EAAI,IAAMA,GAEVA,EAAE2J,KAAK,IAAM,IAAM1J,mBACnBD,EAAI,KAAOA,EAAEgJ,OAAO,IAExBjJ,GAAKC,GAELD,GAAK,QAGJsT,QAAQ6D,WAAatK,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UACzC,KAAbnR,EAAE0I,OACF3I,GAAKC,EAAEoX,oBAEPrX,GAAK,OAGJwW,aAAqB,KAANvW,GAAcqT,QAAQgE,aAAkC,QAAnBrX,EAAES,eAAiC,QAANT,GAClFD,GAAK,OAELA,GAAK,IAAOC,EAAEqC,SAAW,IAIrCmU,QAAU,GAETnD,QAAQsD,aAAgBtD,QAAQoD,WACjC1W,GAAK,MAETA,GAAK,KACDvD,EAAIoQ,IAAIiC,MAAM9R,OAAS,IAAMsW,QAAQsD,cACrC5W,GAAK,KAETA,GAAK,KAKT,GAHKsT,QAAQsD,cACT5W,GAAK,MAEJsT,QAAQsD,aAAetD,QAAQqD,QAAS,CACzCJ,GAAK,EACDjZ,SAAS2Z,eAAe,eACxBV,GAAKjZ,SAAS2Z,eAAe,aAAazY,OAAS,KAE/C+X,GADAxW,MAAMwW,IACD,GAECA,IAED,IACLA,GAAK,IAGbA,IAAU,EACVtZ,EAAIuG,KAAKgD,MAAMxG,GACfA,EAAI,GACJ,IAAIuX,KAAO,GACPC,GAAK1B,IAAIS,IACTkB,MAAO,EACX,IAAKpY,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEvB,IADAkY,KAAO,GACF9a,EAAI,EAAGA,EAAIQ,EAAED,OAAQP,GAAK,EAU3B,GATI8Z,IAAM1J,IAAIiC,MAAMrS,GAAGO,OACnB0a,SAAW,GAEXA,SAAW7K,IAAIiC,MAAMrS,GAAG8Z,IAE5BmB,SAAW3D,kBAAkB2D,SAAUnB,GAAI1J,KACvC2K,MAAMva,EAAER,WACDQ,EAAER,GAAG+a,IAEZE,YAAYH,KAAM,CAClB,GAAU,IAANlY,EAAS,CACToY,MAAO,EACP,MAEJF,KAAKG,UAAUxa,KAAKD,EAAER,SAEtB,OAAQgb,MACJ,KAAK,EACDF,KAAKG,UAAYza,EAAER,GACnB,MACJ,KAAK,EACD8a,KAAKG,UAAY,CAACza,EAAER,IAKpC,GAAU,IAAN4C,IAAYoY,KACZ,MAGR,GAAInE,QAAQoD,SAAU,CAGlB,IAFAzZ,EAAI,GACJ0a,MAAQ7a,OAAOC,KAAKwa,MACf9a,EAAI,EAAGA,EAAIkb,MAAM3a,OAAQP,GAAK,EAC/BC,EAAIib,MAAMlb,GACVQ,EAAEC,KAAK,IAAOR,EAAE4F,SAAW,KAAakB,KAAK2C,UAAUoR,KAAK7a,KAEhE,MAAO,MAAUO,EAAEgJ,KAAK,OAAW,MAEvC,OAAOzC,KAAK2C,UAAUoR,KAAM,KAAM,GAEtC,OAAOvX,GAGX,SAAS4X,YAAY9B,IAAK7V,EAAGqT,SACzB,IAAI/G,EAAI,GACJjF,EAAI,GACJ/K,EAAI,GACJua,YAAa,EAEjB,SAASe,uBAAuBtS,KAAMiC,SAElC,IAAK,IAAInI,KAAKkG,KACM,OAAZA,KAAKlG,IAA2B,KAAZkG,KAAKlG,UAClBkG,KAAKlG,GAERmI,SAA8B,iBAAZjC,KAAKlG,IACvBwY,uBAAuBtS,KAAKlG,GAAImI,SAI5C,GAAI9E,EAAEsE,QAAQzB,MACV,IAAKlG,EAAI,EAAGA,EAAIkG,KAAKvI,OAAQqC,GAAK,OACdsH,IAAZpB,KAAKlG,KACLkG,KAAK1C,OAAOxD,EAAG,GACfA,GAAK,GAKrB,IAAK5C,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,GACzBsD,MAAM+V,IAAIrZ,GAAG2C,MAAM,KAAK,KAAQiF,OAAOuI,UAAiC,EAAvBkJ,IAAIrZ,GAAG2C,MAAM,KAAK,MACnE0X,YAAa,GAMrB,IAHIA,aACAva,EAAI,IAEHE,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,EAG7B,IAFA6K,EAAIwO,IAAIrZ,GAAG2C,MAAM,KACjBY,EAAI,IACCtD,EAAI,EAAGA,EAAI4K,EAAEtK,OAAQN,GAAK,EAC3B6P,EAAI,GACJvM,EAAIA,EAAI,KAAQsH,EAAE5K,GAAGoG,QAAQ,KAAM,QAAQA,QAAQ,IAAM,OAAU,KAC9DpG,EAAI4K,EAAEtK,OAAS,IAAO+C,MAAMuH,EAAE5K,EAAI,KAAO2H,OAAOuI,UAAqB,EAAXtF,EAAE5K,EAAI,IACjEkK,KAAK,cAAgB5G,EAAI,iBAAqBA,EAAI,OAE9CtD,EAAI4K,EAAEtK,OAAS,GACf4J,KAAK,cAAgB5G,EAAI,iBAAqBA,EAAI,OAGtDtD,GAAK4K,EAAEtK,OAAS,GAChB4J,KAAK5G,EAAI,SAIjBsT,QAAQ+C,WACRwB,uBAAuBtb,GAAG,GAE9B,IAAIub,QAAWxE,QAAQsD,aAAetD,QAAQoD,SAAY,EAAI,EAC9D,OAAOlT,KAAK2C,UAAU5J,EAAG,KAAMub,SAGnC,SAASd,iBAAiBnK,IAAKyG,SAC3B,IACI5W,EACAoZ,IASAS,GACAmB,SAZAjb,EAAI,EAGJuD,EAAI,MACJ/C,EAAI,GACJoO,EAAI,EACJpL,EAAI,GAGJgH,IAAM,GACNuP,aAAc,EAMlB,GAHIlD,QAAQsD,cACR5W,EAAI,IAEH6M,IAAL,CAIA,GADA5P,EAAI+X,aAAanI,KACQ,IAArBA,IAAIiC,MAAM9R,OACV,OAAIsW,QAAQsD,YACD,GAEJ5W,EAAI,IAEf8V,IAAMI,aAAarJ,KACnB,IAAIkL,OAAS,GACb,IAAKtb,EAAI,EAAGA,EAAIQ,EAAED,OAAQP,GAAK,EAC3Bsb,OAAO7a,KAAK4Y,IAAI7Y,EAAER,GAAK,IAE3B,IAAKA,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAGtC,IAFAuD,GAAK,IACLiH,IAAM,IACDoE,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,EACXmL,YAAclZ,SAAS2Z,eAAe,WAAava,EAAI,KAAOY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,QAM3GjX,EAAI8T,kBAJA9T,EADAvD,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAEIA,EAAGmQ,MACvByG,QAAQ6D,YAActK,IAAIkC,SAASrS,KAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,YAAsBkC,QAAQ8D,SAAWnX,EAAE8K,aAC5J,KAAd9K,EAAE4I,UACF5I,EAAIA,EAAE+K,WAAa,IACbpB,KAAK,IAAM1J,mBACbD,EAAI,IAAMA,GAEVA,EAAE2J,KAAK,IAAM,IAAM1J,mBACnBD,EAAI,KAAOA,EAAEgJ,OAAO,IAExBhC,KAAOhH,GAEPgH,KAAO,QAGNqM,QAAQ6D,WAAatK,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UAEtDnK,KADM,KAANhH,EACOA,EAAEoX,oBAEF,OAGNb,aAAqB,KAANvW,GAAcqT,QAAQgE,aAAkC,QAAnBrX,EAAES,eAAiC,QAANT,GAClFgH,KAAO,OAEPA,KAAO,IAAOhH,EAAEqC,SAAW,IAIvC2E,KAAQoE,EAAIpO,EAAED,OAAS,EAAI,IAAM,GAErCiK,KAAO,IACPjH,GAAK4X,YAAYG,OAAQvU,KAAKgD,MAAMS,KAAMqM,SACtC7W,EAAIoQ,IAAIiC,MAAM9R,OAAS,IAAMsW,QAAQsD,cACrC5W,GAAK,KAETA,GAAK,KAKT,GAHKsT,QAAQsD,cACT5W,GAAK,MAEJsT,QAAQsD,aAAetD,QAAQqD,QAAS,CACzCJ,GAAK,EACDjZ,SAAS2Z,eAAe,eACxBV,GAAKjZ,SAAS2Z,eAAe,aAAazY,OAAS,KAE/C+X,GADAxW,MAAMwW,IACD,GAECA,IAED,IACLA,GAAK,IAGbA,IAAU,EACVtZ,EAAIuG,KAAKgD,MAAMxG,GACfA,EAAI,GACJ,IAAIuX,KAAO,GACPC,GAAK1B,IAAIS,IACTkB,MAAO,EACX,IAAKpY,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAEvB,IADAkY,KAAO,GACF9a,EAAI,EAAGA,EAAIQ,EAAED,OAAQP,GAAK,EAU3B,GAJAib,SAAW3D,kBAJP2D,SADAnB,IAAM1J,IAAIiC,MAAMrS,GAAGO,OACR,GAEA6P,IAAIiC,MAAMrS,GAAG8Z,IAEWA,GAAI1J,KACvC2K,MAAMva,EAAER,WACDQ,EAAER,GAAG+a,IAEZE,YAAYH,KAAM,CAClB,GAAU,IAANlY,EAAS,CACToY,MAAO,EACP,MAEJF,KAAKG,UAAUxa,KAAKD,EAAER,SAEtB,OAAQgb,MACJ,KAAK,EACDF,KAAKG,UAAYza,EAAER,GACnB,MACJ,KAAK,EACD8a,KAAKG,UAAY,CAACza,EAAER,IAKpC,GAAU,IAAN4C,IAAYoY,KACZ,MAGR,GAAInE,QAAQoD,SAAU,CAClBzZ,EAAI,GACJ,IAAI0a,MAAQ7a,OAAOC,KAAKwa,MACxB,IAAK9a,EAAI,EAAGA,EAAIkb,MAAM3a,OAAQP,GAAK,EAC/BC,EAAIib,MAAMlb,GACVQ,EAAEC,KAAK,IAAOR,EAAE4F,SAAW,KAAakB,KAAK2C,UAAUoR,KAAK7a,KAEhE,MAAO,MAAUO,EAAEgJ,KAAK,OAAW,MAEvC,OAAOzC,KAAK2C,UAAUoR,KAAM,KAAM,GAEtC,OAAOvX,GAGX,SAASgY,eAAenL,IAAKyG,SACzB,IACI5W,EACAoZ,IAEA7Y,EAJAR,EAAI,EAGJuD,EAAI,MAEJqL,EAAI,EACJpL,EAAI,GAEJsM,EAAI,MACJiK,aAAc,EAClB,GAAK3J,IAAL,CAIA,GADA5P,EAAI+X,aAAanI,KACQ,IAArBA,IAAIiC,MAAM9R,OACV,OAAOgD,EAAI,IAGf,GADA8V,IAAMI,aAAarJ,KACfyG,QAAQ2E,cAAe,CAEvB,IADA1L,GAAK,OAAU+G,QAAQ4E,aAAe,UAAY,OAC7C7M,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAOvBA,EAAI,IACJkB,GAAK,MAETA,KATA7P,EAAIO,EAAEoO,GAAK,IACFyK,IAAI9Y,OACL,QAAUN,EAEVoZ,IAAIpZ,IAKLuN,QAAQ,KAEnBsC,GAAK,OACLA,GAAK,OAAU+G,QAAQ6E,cAAgB,QAAU,MAErD,IAAK1b,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAItC,IAHIQ,EAAED,OAAS,IACXgD,GAAK,OAEJqL,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,EACXmL,YAAclZ,SAAS2Z,eAAe,WAAava,EAAI,KAAOY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,QAM3GjX,EAAI8T,kBAJA9T,EADAvD,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAEIA,EAAGmQ,KACvByG,QAAQ6D,YAAatK,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAc7HkC,QAAQ6D,WAAatK,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UACzC,KAAbnR,EAAE0I,OACF3I,GAAKC,EAAEoX,oBAEPrX,GAAK,OAGJwW,aAAqB,KAANvW,GAAcqT,QAAQgE,aAAkC,QAAnBrX,EAAES,eAAiC,QAANT,GAClFD,GAAK,OAELA,GAAK,IAAOC,EAAEqC,SAAW,IAvBhB,KAAbrC,EAAE0I,SACF1I,EAAIA,EAAE+K,WAAa,IACbpB,KAAK,IAAM1J,mBACbD,EAAI,IAAMA,GAEVA,EAAE2J,KAAK,IAAM,IAAM1J,mBACnBD,EAAI,KAAOA,EAAEgJ,OAAO,IAExBjJ,GAAKC,GAELD,GAAK,OAiBbA,GAAMqL,EAAIpO,EAAED,OAAS,EAAI,IAAM,GAE/BC,EAAED,OAAS,IACXgD,GAAK,OAELvD,EAAIoQ,IAAIiC,MAAM9R,OAAS,IACvBgD,GAAK,KAETA,GAAK,KAMT,OAJAA,GAAK,IACDsT,QAAQ2E,gBACRjY,EAAIuM,EAAIvM,EAAI,OAETA,GAGX,SAASoY,qBAAqBvL,IAAKyG,SAC/B,IACI5W,EACAoZ,IAEA7Y,EAJAR,EAAI,EAGJuD,EAAI,MAEJqL,EAAI,EACJpL,EAAI,GAEJuW,aAAc,EAClB,GAAK3J,IAAL,CAIA,GADA5P,EAAI+X,aAAanI,KACQ,IAArBA,IAAIiC,MAAM9R,OACV,OAAOgD,EAAI,IAGf,IADA8V,IAAMI,aAAarJ,KACdxB,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAAG,CAC9B3O,EAAIO,EAAEoO,GAAK,EACXmL,YAAclZ,SAAS2Z,eAAe,WAAava,EAAI,KAAOY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,QAM3GlX,GAAK,QALDqL,GAAKyK,IAAI9Y,OACL,QAAUN,EAEVoZ,IAAIpZ,IAEO,MACnB,IAAI2b,KAAO,EACX,IAAK5b,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAEnCuD,IADAqY,MAAQ,GACK,EAAI,IAAM,GAMvBpY,EAAI8T,kBAJA9T,EADAoL,GAAKwB,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAEIA,EAAGmQ,KACvByG,QAAQ6D,YAAatK,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAc7HkC,QAAQ6D,WAAatK,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UACzC,KAAbnR,EAAE0I,OACF3I,GAAKC,EAAEoX,oBAEPrX,GAAK,OAGJwW,aAAqB,KAANvW,GAAcqT,QAAQgE,aAAkC,QAAnBrX,EAAES,eAAiC,QAANT,GAClFD,GAAK,OAELA,GAAK,IAAOC,EAAEqC,SAAW,IAvBhB,KAAbrC,EAAE0I,SACF1I,EAAIA,EAAE+K,WAAa,IACbpB,KAAK,IAAM1J,mBACbD,EAAI,IAAMA,GAEVA,EAAE2J,KAAK,IAAM,IAAM1J,mBACnBD,EAAI,KAAOA,EAAEgJ,OAAO,IAExBjJ,GAAKC,GAELD,GAAK,OAkBjBA,GAAK,IACDqL,EAAIpO,EAAED,OAAS,IACfgD,GAAK,KAETA,GAAK,KAGT,OADAA,GAAK,KAIT,SAASsY,UAAUC,SAAUzL,UAAW0L,gBAAiBC,QAASC,cAC9D,IAAIC,MACAjT,IAAM,GACNkT,KAAO,GACPvZ,EAAG5C,EACHwL,MACAzJ,MACAqa,QAAU,GACd,IACIF,MAA2B,iBAAZJ,SAAuB/U,KAAKgD,MAAM+R,UAAYA,SAC/D,MAAOzW,GACL,GAA2B,MAAvByW,SAAShZ,OAAO,IAAqC,MAAvBgZ,SAAShZ,OAAO,GAG9C,MAAMuC,EAFN6W,MAAQ/R,KAAK,SAAW2R,UAKhC,IAAK7V,EAAEC,SAASgW,QAAoB,OAAVA,OAAkBjW,EAAEE,QAAQ+V,OAuBlD,OAtBAC,KAAO,GACPlT,IAAM,GACF8S,kBACAha,MAAQ,SAEJoa,KADAH,QACO,IAAOja,MAAMsE,QAAQ,KAAM,MAAU,IAAOgK,UAE5CtO,MAAMiM,MAAMqC,UAAW,KAElCpH,KAAOkT,KAAO,MAEZD,OAASjW,EAAEC,SAASgW,QAAUjW,EAAEE,QAAQ+V,SAEtCna,MADU,OAAVma,MACQ,GAEAA,MAAQ,GAEhBD,eACAla,MAAQA,MAAMsE,QAAQ,cAAe,MAEzC4C,MAAQ+S,QAAU,IAAO,KAAO,GAAKja,OAAOiM,MAAMqC,UAAW,MAAS2L,QAAU,IAAO,IAAM,MAE1F/S,IAEX,IAAIoT,MAAQC,aAAaJ,OACzB,GAAc,GAATG,OAAgBpW,EAAEsE,QAAQ2R,OAAS,CAUpC,IATIH,kBACAha,MAAQ,SAEJoa,MADAH,QACQ,IAAOja,MAAMsE,QAAQ,KAAM,MAAU,IAAOgK,UAE5CtO,MAAMiM,MAAMqC,UAAW,KAEnCpH,KAAOkT,KAAO,MAEbvZ,EAAI,EAAGA,EAAIsZ,MAAM3b,OAAQqC,GAAK,EAAG,CAClC,IAAIuZ,KAAO,GACXpa,MAAQma,MAAMtZ,GACA,OAAVb,MACAA,MAAQ,GAERA,OAAS,GAETka,eACAla,MAAQA,MAAMsE,QAAQ,cAAe,MAEzC8V,OAASH,QAAU,IAAO,KAAO,GAAKja,OAAOiM,MAAMqC,UAAW,MAAS2L,QAAU,IAAO,IACxF/S,KAAOkT,KAAO,KAElB,OAAOlT,IAKX,GAHc,GAAToT,QAAiBpW,EAAEsE,QAAQ2R,QAAYjW,EAAEsW,MAAMtW,EAAEuW,OAAON,OAAQjW,EAAEsE,WACnE2R,MAAQnc,aAAamc,QAEX,GAATG,OAAgBpW,EAAEsE,QAAQ2R,QAAYjW,EAAEsW,MAAMtW,EAAEuW,OAAON,OAAQjW,EAAEsE,SAAW,CAC7E,GAAIwR,gBAAiB,CACjB,IAAIU,KAAOP,MAAM,GACjB,IAAK1Q,SAAS0Q,MAAM,GAChBna,MAAQ,SAAmB,EAARyJ,MAAY,GAC/B4Q,QAAQ3b,KAAKsB,OAEToa,MADAH,QACQ,IAAOja,MAAMsE,QAAQ,KAAM,MAAU,IAAOgK,UAE5CtO,MAAMiM,MAAMqC,UAAW,KAAQA,UAG/C8L,KAAOA,KAAKnY,MAAM,GAAI,GACtBiF,KAAOkT,KAAO,UAEd,IAAK3Q,SAAS0Q,MAAM,GAChBE,QAAQ3b,KAAK+K,OAGrB,IAAK5I,EAAI,EAAGA,EAAIsZ,MAAM3b,OAAQqC,GAAK,EAAG,CAClC,IAAIuZ,KAAO,GACX,IAAKnc,EAAI,EAAGA,EAAIoc,QAAQ7b,OAAQP,GAAK,EACjC+B,MAAQma,MAAMtZ,GAAG5C,GACH,OAAV+B,MACAA,MAAQ,GAERA,OAAS,GAETka,eACAla,MAAQA,MAAMsE,QAAQ,cAAe,MAEzC8V,OAAS,GAAKpa,OAAOiM,MAAMqC,UAAW,IAAM,IAAM2L,SAAW3L,UAEjE8L,KAAOA,KAAKnY,MAAM,GAAI,EAAIqM,UAAU9P,QACpC0I,KAAOkT,KAAO,KAElB,OAAOlT,IAEX,KACQhD,EAAEC,SAASgW,SAAYjW,EAAEsE,QAAQ2R,QAAmC,GAAxBjW,EAAE3F,KAAK4b,OAAO3b,SAAgB0F,EAAEC,SAASD,EAAEuW,OAAON,OAAO,KAAQjW,EAAEsE,QAAQtE,EAAEuW,OAAON,OAAO,KAAOjW,EAAEC,SAASD,EAAEuW,OAAON,OAAO,GAAG,MAC5KA,MAAQjW,EAAEuW,OAAON,OAAO,GAShC,KAJyB,IAArBjW,EAAEsE,QAAQ2R,SAA0C,IAAtBjW,EAAEC,SAASgW,SACzCA,MAAQnV,KAAK+D,QAAQoR,OACrBA,MAAQnV,KAAKgD,MAAM,IAAMhD,KAAK2C,UAAUwS,OAAS,MAEhDtZ,EAAI,EAAGA,EAAIsZ,MAAM3b,OAAQqC,GAAK,EAC/B,IAAK5C,EAAI,EAAGA,EAAIoc,QAAQ7b,OAAQP,GAAK,EACjC+B,MAAQma,MAAMtZ,GAAGwZ,QAAQpc,KACA,IAArBiG,EAAEsE,QAAQxI,SAA0C,IAAtBkE,EAAEC,SAASnE,QACrCqa,QAAQpc,KAAMkc,MAAMtZ,KACpBsZ,MAAMtZ,GAAGwZ,QAAQpc,IAAM+G,KAAK+D,QAAQ/I,QAKpD,GAAIkE,EAAEC,SAASgW,MAAM,KAAOjW,EAAEsW,MAAMtW,EAAEuW,OAAON,OAAQjW,EAAEC,UACnD,GAAI6V,gBAAiB,CACjB,IAAIU,KAAOP,MAAM,GACjB,GAAIF,QACA,IAAKxQ,SAAS0Q,MAAM,GAChBna,MAAQyJ,MAAQ,GAChB4Q,QAAQ3b,KAAKsB,OACboa,MAAQ,IAAOpa,MAAMsE,QAAQ,KAAM,MAAU,IAAOgK,eAGxD,IAAK7E,SAAS0Q,MAAM,GAChBna,MAAQyJ,MAAQ,GAChB4Q,QAAQ3b,KAAKsB,OACboa,MAAQpa,MAAMiM,MAAMqC,UAAW,KAAQA,UAG/C8L,KAAOA,KAAKnY,MAAM,GAAI,GACtBiF,KAAOkT,KAAO,UAEd,IAAK3Q,SAAS0Q,MAAM,GAChBE,QAAQ3b,KAAK+K,OAIzB,GAAuB,IAAnB4Q,QAAQ7b,SAAqC,IAArB0F,EAAEsE,QAAQ2R,OAAiB,CAWnD,IAVAjT,IAAM,GACF8S,kBACAha,MAAQ,SAEJoa,MADAH,QACQ,IAAOja,MAAMsE,QAAQ,KAAM,MAAU,IAAOgK,UAE5CtO,MAAMiM,MAAMqC,UAAW,KAEnCpH,KAAOkT,KAAO,MAEbvZ,EAAI,EAAGA,EAAIsZ,MAAM3b,OAAQqC,GAAK,EAAG,CAClC,IAAIuZ,KAAO,GACXpa,MAAQma,MAAMtZ,GACA,OAAVb,MACAA,MAAQ,GAERA,OAAS,GAEwB,oBAAhCA,MAAQ,IAAIgB,UAAU,EAAG,MAC1BhB,MAAQgF,KAAKkE,WAAWiR,MAAMtZ,IAAIoB,MAAM,GAAI,IAE5CiY,eACAla,MAAQA,MAAMsE,QAAQ,cAAe,MAEzC8V,OAASH,QAAU,IAAO,KAAO,GAAKja,OAAOiM,MAAMqC,UAAW,MAAS2L,QAAU,IAAO,IACxF/S,KAAOkT,KAAO,KAElB,OAAOlT,IAEX,IAAKrG,EAAI,EAAGA,EAAIsZ,MAAM3b,OAAQqC,GAAK,EAAG,CAClC,IAAIuZ,KAAO,GACX,GAAIH,QACA,IAAKhc,EAAI,EAAGA,EAAIoc,QAAQ7b,OAAQP,GAAK,EACjC+B,MAAQma,MAAMtZ,GAAGwZ,QAAQpc,IACY,oBAAhC+B,MAAQ,IAAIgB,UAAU,EAAG,MAC1BhB,MAAQgF,KAAKkE,WAAWiR,MAAMtZ,GAAGwZ,QAAQpc,KAAKgE,MAAM,GAAI,IAE9C,OAAVjC,MACAA,MAAQ,GAERA,OAAS,GAETka,eACAla,MAAQA,MAAMsE,QAAQ,cAAe,MAEzC8V,MAAQ,IAAOpa,MAAMsE,QAAQ,KAAM,MAAU,IAAOgK,eAGxD,IAAKrQ,EAAI,EAAGA,EAAIoc,QAAQ7b,OAAQP,GAAK,EACjC+B,MAAQma,MAAMtZ,GAAGwZ,QAAQpc,IACY,oBAAhC+B,MAAQ,IAAIgB,UAAU,EAAG,MAC1BhB,MAAQgF,KAAKkE,WAAWiR,MAAMtZ,GAAGwZ,QAAQpc,KAAKgE,MAAM,GAAI,IAE9C,OAAVjC,MACAA,MAAQ,GAERA,OAAS,GAETka,eACAla,MAAQA,MAAMsE,QAAQ,cAAe,MAEzC8V,OAAS,GAAKpa,OAAOiM,MAAMqC,UAAW,KAAQA,UAGtD8L,KAAOA,KAAKnY,MAAM,GAAI,EAAIqM,UAAU9P,QACpC0I,KAAOkT,KAAO,KAElB,OAAOlT,IAGX,SAASyT,cAActM,IAAKyG,SACxB,IACI5W,EAIAO,EALAR,EAAI,EAIJuD,EAAI,GAEJqL,EAAI,EACJpL,EAAI,GAGR,GAAK4M,IAAL,CAGA5P,EAAI+X,aAAanI,KACjB,IAAIuM,cAAe,EACfC,aAAc,EACb/F,UACDA,QAAU,SAEgB,IAAnBA,QAAQgG,QAA6C,OAAnBhG,QAAQgG,SACjDhG,QAAQgG,OAAS,MAEjBhG,QAAQiG,UAAgC,KAAnBjG,QAAQgG,QAAoC,MAAnBhG,QAAQgG,SACtDhG,QAAQgG,OAAS,KAErBhG,QAAQgG,OAAS,IACjB,IAAIxD,IAAMI,aAAarJ,MAAQ,GAC3B2M,MAAQC,gBAAgB5M,MAAQ,GAIhC6M,KAAO,EACPnN,EAAI,GACR,IAAKlB,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,EACPwB,IAAIS,kBAAoBwI,IAAIpZ,IAAMoZ,IAAIpZ,GAAGM,OAASwc,MAAM9c,KACxD8c,MAAM9c,GAAKoZ,IAAIpZ,GAAGM,QAETwc,MAAM9c,GAAK,EAS5B,IAPI4W,QAAQuB,iBACM,GAAKhI,IAAIiC,MAAM9R,QAAQA,OAAS,EAElDgD,GAAKsT,QAAQgG,OACThG,QAAQuB,iBACR7U,GAAK,MAAMwI,MAAM,GAAKqE,IAAIiC,MAAM9R,QAAQA,OAAQ,KAAK,GAASsW,QAAQgG,QAErEjO,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3BqO,KAAO,EACPhd,EAAIO,EAAEoO,GAAK,EACPA,EAAI,IACJrL,GAAKsT,QAAQgG,SAGbrZ,EADAvD,GAAKoZ,IAAI9Y,SAAW6P,IAAIS,iBACpB,GAEAwI,IAAIpZ,GAAGoG,QAAQ,cAAe,MAEhCrD,QAAQ,MAAQ,IAElBia,MAAyC,IADzCzZ,EAAIA,EAAE6C,QAAQ,MAAO,WACV1D,MAAM,UAAUpC,OAAS,IAElCwc,MAAM9c,GAAKgd,KAAQ,IACrBA,MAAS,GAAKF,MAAM9c,GAAKgd,OAE7B1Z,GAAKC,EAAEuI,KAAKgR,MAAM9c,GAAKgd,MAO3B,IALA1Z,GAAKsT,QAAQgG,OAAS,KAClBhG,QAAQuB,iBACR7U,GAAKsT,QAAQgG,OAAS,MAAM9Q,MAAM,GAAKqE,IAAIiC,MAAM9R,QAAQA,OAAQ,KAAK,IAE1EgD,GAAKsT,QAAQgG,OACRjO,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,EACXgO,aAAc,EACdD,cAAe,EACX9b,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CmC,aAAc,GAGlB/b,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CkC,cAAe,GAGnB/N,EAAI,IACJrL,GAAKsT,QAAQgG,QAEjB/M,EAAI,MAAM/D,KAAK9L,EAAI8c,MAAMxc,OAASwc,MAAM9c,GAAKoZ,IAAIpZ,GAAGM,OAAQ,KAAK,GAC7Doc,aACA7M,EAAI,IAAMA,EAAEtD,OAAO,EAAGsD,EAAEvP,OAAS,GAAK,IAElCqc,cACA9M,EAAIA,EAAEtD,OAAO,EAAGsD,EAAEvP,OAAS,GAAK,KAGxCgD,GAAKuM,EAETvM,GAAKsT,QAAQgG,OAAS,KACtB,IAAIjB,KAAO,EACX,IAAK5b,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAMtC,IALA4b,MAAQ,EACRrY,GAAKsT,QAAQgG,OACThG,QAAQuB,iBACR7U,IAAM,GAAKqY,MAAM7P,KAAKe,KAAKoQ,IAAI,GAAI,GAAK9M,IAAIiC,MAAM9R,QAAQA,QAAS,KAAK,GAASsW,QAAQgG,QAExFjO,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3BqO,KAAO,EACPhd,EAAIO,EAAEoO,GAAK,EACPA,EAAI,IACJrL,GAAKsT,QAAQgG,QAGbrZ,EADAvD,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,IAEjB4W,QAAQsG,aAAmC,QAAnB3Z,EAAES,eAAiC,QAANT,IACrDA,EAAI,IAERoZ,aAAc,EACdD,cAAe,GACfnZ,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,MACtBpN,QAAQ,MAAQ,IAElBia,MAAyC,IADzCzZ,EAAIA,EAAE6C,QAAQ,MAAO,WACV1D,MAAM,UAAUpC,OAAS,IAEpCM,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CmC,aAAc,GAGlB/b,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CkC,cAAe,GAInBnZ,EADAmZ,aACInZ,EAAE6C,QAAQ,cAAe,KAAKqG,MAAMqQ,MAAM9c,IAE1C2c,YACIpZ,EAAE6C,QAAQ,cAAe,KAAKoG,MAAMsQ,MAAM9c,IAE1CuD,EAAE6C,QAAQ,cAAe,KAG/B0W,MAAM9c,GAAKgd,KAAQ,IACrBA,MAAS,GAAKF,MAAM9c,GAAKgd,OAE7B1Z,GAAKC,EAAEuI,KAAKgR,MAAM9c,GAAKgd,KAAM,KAAK,IAGlCpG,QAAQiG,UAAYjG,QAAQuG,eAC5B7Z,GAAKsT,QAAQgG,QAEjBtZ,GAAK,KAET,OAAOA,GAGX,SAAS8Z,WAAWjN,IAAKyG,SACrB,IACI5W,EADAD,EAAI,EAIJuD,EAAI,GACJ/C,EAAI,GACJoO,EAAI,EACJpL,EAAI,GACJ8Z,MAAQ,GACRC,QAAU,GACd,GAAKnN,IAAL,CAGA5P,EAAI+X,aAAanI,KACjB,IAAIuM,cAAe,EACfC,aAAc,EAUlB,GATK/F,UACDA,QAAU,SAEgB,IAAnBA,QAAQgG,QAA6C,OAAnBhG,QAAQgG,SACjDhG,QAAQgG,OAAS,MAEjBhG,QAAQiG,UAAgC,KAAnBjG,QAAQgG,QAAoC,MAAnBhG,QAAQgG,SACtDhG,QAAQgG,OAAS,KAEI,IAArBzM,IAAIiC,MAAM9R,OACV,OAAOgD,EAEX,IAAI8V,IAAMI,aAAarJ,MAAQ,GAC3B2M,MAAQC,gBAAgB5M,MAAQ,GAChCoN,UAAY,EAGZP,KAAO,EAIX,GAHM,QAASpG,SAAaA,QAAQjL,MAChCiL,QAAQjL,IAAM,KAEdiL,QAAQiG,SAAU,CAClB,IAAKlO,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3B3O,EAAIO,EAAEoO,GAAK,EACPwB,IAAIS,kBAAoBwI,IAAIpZ,IAAMoZ,IAAIpZ,GAAGM,OAASwc,MAAM9c,KACxD8c,MAAM9c,GAAKoZ,IAAIpZ,GAAGM,QAEtBid,WAAaT,MAAM9c,GAAK,EAM5B,GAJI4W,QAAQuB,iBACRoF,YAAc,GAAKpN,IAAIiC,MAAM9R,QAAQA,OAAS,GAElDgD,GAAK,IAAIwI,KAAKyR,UAAW,KAAO,MAC5BpN,IAAIS,iBAAkB,CAKtB,IAJAtN,GAAKsT,QAAQgG,OACThG,QAAQuB,iBACR7U,GAAK,IAAIwI,MAAM,GAAKqE,IAAIiC,MAAM9R,QAAQA,QAAUsW,QAAQgG,QAEvDjO,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3BqO,KAAO,EACPhd,EAAIO,EAAEoO,GAAK,EACPA,EAAI,IACJrL,GAAKsT,QAAQgG,QAOjBtZ,IAJIC,EADAvD,GAAKoZ,IAAI9Y,SAAW6P,IAAIS,iBACpB,GAEAwI,IAAIpZ,GAAGoG,QAAQ,cAAe,MAE/B0F,KAAKgR,MAAM9c,GAAKgd,KAAMpG,QAAQjL,KAEzCrI,GAAKsT,QAAQgG,OAAS,KACtBtZ,GAAK,IAAIwI,KAAKyR,UAAW,KAAO,OAGxC,IAAI5B,KAAO,EACX,IAAK5b,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAQtC,IAPA4b,MAAQ,EACJ/E,QAAQiG,WACRvZ,GAAKsT,QAAQgG,QAEbhG,QAAQuB,iBACR7U,IAAM,GAAKqY,MAAM7P,MAAM,GAAKqE,IAAIiC,MAAM9R,QAAQA,QAAUsW,QAAQgG,QAE/DjO,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3BqO,KAAO,EACPhd,EAAIO,EAAEoO,GAAK,EACPA,EAAI,IACJrL,GAAKsT,QAAQgG,QAGbrZ,EADAvD,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,IAEjB4W,QAAQsG,aAAmC,QAAnB3Z,EAAES,eAAiC,QAANT,IACrDA,EAAI,IAERoZ,aAAc,EACdD,cAAe,EACfnZ,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,KACxBvP,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CmC,aAAc,GAGlB/b,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CkC,cAAe,GAYvBpZ,IARIC,EADAmZ,aACInZ,EAAE6C,QAAQ,cAAe,KAAKqG,MAAMqQ,MAAM9c,IAE1C2c,YACIpZ,EAAE6C,QAAQ,cAAe,KAAKoG,MAAMsQ,MAAM9c,IAE1CuD,EAAE6C,QAAQ,cAAe,MAG9B0F,KAAKgR,MAAM9c,GAAKgd,KAAMpG,QAAQjL,KAEzC,IAAIqJ,EACJ,IAAK4B,QAAQiG,UAAYjG,QAAQ4G,UAAoB,GAAR7B,KAAW,CACpD,IAAK3G,EAAI,EAAGA,GAAK1R,EAAEhD,OAAQ0U,GAAK,EAC5BqI,QAAU,GAAKrI,GAAG7H,MAAM,GAE5B,GAAI7J,EAAEhD,QAAU,GAAI,CAChB,IAAK0U,EAAI,EAAGrG,EAAI,GAAIA,GAAKrL,EAAEhD,OAAQqO,GAAK,GAAIqG,GAAK,EAC7CsI,SAAW,aAAe,GAAKtI,GAAG7H,MAAM,GAG5CkQ,OADAC,QAAUA,QAAQxR,KAAKuR,MAAM/c,SACX,KAAS+c,OAG/BzG,QAAQiG,WACRvZ,GAAKsT,QAAQgG,QAEjBtZ,GAAK,KACDsT,QAAQiG,UAAYjG,QAAQ6G,aAAe7G,QAAQ8G,aACnDpa,GAAK,IAAIwI,KAAKyR,UAAW,KAAO,OAWxC,OARI3G,QAAQiG,UAAajG,QAAQ6G,YAAe7G,QAAQ8G,aACpDpa,GAAK,IAAIwI,KAAKyR,UAAW,KAAO,OAEhC3G,QAAQ4G,WAAa5G,QAAQiG,WAC7Btc,EAAI8c,MAAM3a,MAAM,MAEhBY,EAAI+Z,MAAQ,KADA9c,EAAEA,EAAED,OAAS,GAAG8F,QAAQ,cAAe,KAAKA,QAAQ,KAAM,KAAKA,QAAQ,KAAM,KACxD,KAAS9C,GAEvCA,GAGX,SAASqa,WAAWC,MAAOC,SAAUzN,UAAW0L,gBAAiBC,QAAS+B,OAAQC,QAC9E,IAMIpb,EAAG5C,EANHie,GAAKH,SAASnb,MAAM,MAAQ,GAC5BsG,IAAM,GACNkT,KAAO,GACP+B,IAAM,GACNC,OAAS,GACTjC,MAAQ2B,MAAMlb,MAAM,iBAKxB,GAHgC,KAA5BuZ,MAAMA,MAAM3b,OAAS,IACrB2b,MAAMkC,MAENrC,gBAAiB,CACjB,IAAKnZ,EAAI,EAAGA,EAAIqb,GAAG1d,OAAQqC,GAAK,EAGxBub,QAFJD,IAAMD,GAAGrb,GAAGD,MAAM,MACVpC,OAAS,EACJ2d,IAAI,GAEJ,KAAOtb,EAAI,GAGpBqG,KADA+S,QACO,IAAOmC,OAAO9X,QAAQ,KAAM,MAAU,IAAOgK,UAE7C8N,OAAOnQ,MAAMqC,UAAW,KAAQA,UAG/CpH,IAAMA,IAAIjF,MAAM,GAAI,EAAIqM,UAAU9P,QAAU,KAEhD,IAAIsK,EAAI,EACJ8B,IAAM,EAEV,IAAK/J,EAAI,EAAGA,EAAIsZ,MAAM3b,OAAQqC,GAAK,EAE/B,GADAuZ,KAAO,GACU,KAAbD,MAAMtZ,GAAV,CAGA,IAAK5C,EAAI,EAAGA,EAAIie,GAAG1d,OAAQP,GAAK,EAGxB6K,GAFJqT,IAAMD,GAAGje,GAAG2C,MAAM,MAAQ,IAClBpC,OAAS,EACT2d,IAAI,GAAK,EAET,EAGJvR,IADAuR,IAAI3d,OAAS,EACP2d,IAAI,GAEJ,EAENA,IAAI3d,OAAS,EACN2d,IAAI,GAEJ,KAAOle,EAAI,GAGlB+B,MADAic,OACQ9B,MAAMtZ,GAAG4J,OAAO3B,EAAG8B,KAEnBuP,MAAMtZ,GAAG4J,OAAO3B,EAAG8B,KAAKT,OAEtB,OAAVnK,MACAA,MAAQ,GAERA,OAAS,GAGToa,MADAH,QACQ,KAAQ,GAAKja,OAAOsE,QAAQ,KAAM,MAAU,IAAOgK,UAEvD0N,OACS,GAAKhc,MAASsO,WAEd,GAAKtO,OAAOiM,MAAMqC,UAAW,KAAQA,UAK1DpH,MADAkT,KAAOA,KAAKnY,MAAM,GAAI,EAAIqM,UAAU9P,SACtB,KAElB,OAAO0I,IAGX,SAASoV,WAAWjO,IAAKkO,IAAKC,aAAcC,gBAAiBC,kBAAmBC,WAAYzC,aAAcD,QAAS2C,UAAW9D,YAC1H,IACI5a,EAGAO,EAJAR,EAAI,EAGJuD,EAAI,GAEJqL,EAAI,EACJpL,EAAI,GACJob,QAAU,GAMd,GALAF,WAAaA,YAAc,IACvBpb,MAAM,IAAMob,cACZA,WAAa,KAEjBle,EAAI+X,aAAanI,KACZA,IAAL,CAIA,GADAoO,gBAAkBA,iBAAmB,GACZ,IAArBpO,IAAIiC,MAAM9R,OACV,OAAOgD,EAGX,IADMkW,aAAarJ,KACdpQ,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CACtC,IAAK4O,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAC3BgQ,QAAU,IACV3e,EAAIO,EAAEoO,GAAK,IACFwB,IAAIiC,MAAMrS,GAAGO,OAClBiD,EAAI,IAEJA,EAAI4M,IAAIiC,MAAMrS,GAAGC,GAAK,KACbgc,eACLzY,EAAIA,EAAE6C,QAAQ,cAAe,MAGjC7C,GAAKqX,aACLrX,EAAIA,EAAE6C,QAAQ,YAAa,KAE/B7C,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,KACxBuO,YACAnb,EAAIA,EAAEwK,MAAMsQ,IAAKlO,IAAIO,YAAaP,IAAIO,YAAaqL,UAEnDuC,eAGQK,QAFJD,UACI1e,GAAKmQ,IAAIgC,YAAY7R,QACV,GAAGwL,KAAK2S,YAAc,UAAYze,EAAI,IAAI+N,MAAMsQ,IAAKlO,IAAIO,YAAaP,IAAIO,YAAaqL,SAAWwC,iBAElG,GAAGzS,KAAK2S,YAActO,IAAIgC,YAAYnS,GAAGoG,QAAQ,cAAe,MAAM2H,MAAMsQ,IAAKlO,IAAIO,YAAaP,IAAIO,YAAaqL,SAAWwC,gBAGzIve,GAAKmQ,IAAIgC,YAAY7R,OACX,GAAGwL,KAAK2S,YAAc,UAAYze,EAAI,GAAKue,gBAE3C,GAAGzS,KAAK2S,YAActO,IAAIgC,YAAYnS,GAAGoG,QAAQ,cAAe,KAAOmY,iBAI7Fjb,GAAKqb,QAAUpb,EAAI,KACfib,oBACAlb,GAAK,MAGRob,YACDpb,GAAK+a,IAAM,MAGnB,OAAO/a,GAGX,SAASsb,SAASzO,IAAK0O,QAASC,QAASC,OAAQC,QAASC,OAAQC,UAC9D,IACIlf,EACAoZ,IAFArZ,EAAI,EAGJof,MAAQ,GACRC,SAAW,GACX9b,EAAI,2CAGR,GAFAA,GAAK,kDACLA,GAAK,eACA6M,IAAL,CAGA,GAAyB,IAArBA,IAAIiC,MAAM9R,OACV,OAAOgD,EAAI,oBAMf,IAJA8V,IAAMI,aAAarJ,MACK,KAApB+O,SAASjT,QAAiB5I,MAAM6b,WAAyB,EAAXA,SAAe,GAAgB,EAAXA,SAAe/O,IAAIiC,MAAM,GAAG9R,UAC9F4e,SAAW,IAEVnf,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CAGtC,IAFAuD,GAAK,gBACL6b,MAAQ,GACHnf,EAAI,EAAGA,EAAImQ,IAAIiC,MAAMrS,GAAGO,UACrBN,GAAKoZ,IAAI9Y,QADoBN,GAAK,EAItC,IAAKqD,MAAM0b,SAAW/e,GAAM+e,OAAS,KAGhC1b,MAAM2b,UAAYhf,GAAMgf,QAAU,KAGlC3b,MAAM4b,SAAWjf,GAAMif,OAAS,GAArC,CAGA,GAAK5b,MAAMwb,UAAY7e,GAAM6e,QAAU,EAEhC,CACH,GAAKxb,MAAMyb,UAAY9e,GAAM8e,QAAU,EAMnC,SALA1F,IAAIpZ,GAAK,cACQ,KAAbkf,WACAC,MAAQ,IAAMhP,IAAIiC,MAAMrS,GAAGmf,SAAW,SAL9C9F,IAAIpZ,GAAK,OAWbuD,EAAI4M,IAAIiC,MAAMrS,GAAGC,GAAKmQ,IAAIiC,MAAMrS,GAAGC,GAAK,GACxCuD,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,KAC5B7M,GAAK,IAAM8V,IAAIpZ,GAAK,IAAMuD,EAAEsK,SAAWsR,MAAMtR,SAAW,KAAOuL,IAAIpZ,GAAK,OAEvEqD,MAAM0b,UAAY1b,MAAM2b,UAAYD,OAAOze,OAAS,GAAK0e,QAAQ1e,OAAS,GAAc,EAATye,QAAc5O,IAAIiC,MAAMrS,GAAGO,QAAoB,EAAV0e,SAAe7O,IAAIiC,MAAMrS,GAAGO,QAAU6P,IAAIiC,MAAMrS,GAAY,EAATgf,OAAa,IAAM5O,IAAIiC,MAAMrS,GAAa,EAAVif,QAAc,KAElNI,SADW,KAAXH,SAAkB5b,MAAM4b,SAAoB,EAATA,QAAc9O,IAAIiC,MAAMrS,GAAGO,QAAU6P,IAAIiC,MAAMrS,GAAY,EAATkf,OAAa,GACvF5H,kBAAkBlH,IAAIiC,MAAMrS,GAAY,EAATkf,OAAa,GAAa,EAATA,OAAa,EAAG9O,KAEhE,IAEf7M,GAAK,uBACLA,GAAK+T,kBAAkBlH,IAAIiC,MAAMrS,GAAGif,QAAU,GAAIA,QAAU,EAAG7O,KAAO,IAAMkH,kBAAkBlH,IAAIiC,MAAMrS,GAAGgf,OAAS,GAAIA,OAAS,EAAG5O,KAAO,IAAMiP,SACjJ9b,GAAK,4BAETA,GAAK,iBAGT,OADAA,GAAK,uBAIT,SAAS+b,SAASlP,IAAKyG,SACnB,GAAKzG,IAAL,CAGA,GAAyB,IAArBA,IAAIiC,MAAM9R,OACV,MAAO,GAENsW,UACDA,QAAU,IAEd,IASI5W,EACAoZ,IAEA7Y,EAZA6P,UAAYwG,QAAQxG,UACpBkP,iBAAmB1I,QAAQ0I,iBAC3BC,eAAiB3I,QAAQ2I,eACzBC,cAAgB5I,QAAQ4I,cACxBxD,aAAepF,QAAQoF,aACvBD,QAAUnF,QAAQmF,QAClBnB,WAAahE,QAAQgE,WACrB6E,aAAe7I,QAAQ6I,aACvB1f,EAAI,EAGJuD,EAAI,GAEJqL,EAAI,EAGR,GADApO,EAAI+X,aAAanI,KACbmP,kBAAoBE,cAAe,CAEnC,IADApG,IAAMI,aAAarJ,KACdxB,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAEvBA,EAAI,IACJrL,GAAK8M,WAET9M,KAJAvD,EAAIQ,EAAEoO,GAAK,IAICyK,IAAI9Y,OAAS,GAAK8Y,IAAIrZ,IAAKgO,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,aAEvE,KAANpN,IACAA,GAAK,MAGb,IAAKvD,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EAAG,CACtC,IAAK4O,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAAG,CAU9B,GATA3O,EAAIO,EAAEoO,GAAK,GACXpL,EAAI4M,IAAIiC,MAAMrS,GAAGC,GAAKmQ,IAAIiC,MAAMrS,GAAGC,GAAK,KAC/B4a,aACLrX,EAAIA,EAAE6C,QAAQ,YAAa,KAE3B7C,GAAKyY,eACLzY,EAAIA,EAAE6C,QAAQ,cAAe,MAGvB,MADV7C,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,OACZ,kBAAmByG,SAAqC,KAA1BA,QAAQ+B,eAAwBxI,IAAIkC,SAASrS,IAAmC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,UAAkB,CAC/H,IAAIgL,GAAKnc,EACT,IACI,IAAIA,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,GACL7B,EAAImc,IAGRH,gBAAwB,KAANhc,EACdA,EAAER,QAAQ,KAAO,GAAKQ,EAAER,QAAQ,MAAU,GAAKQ,EAAER,QAAQ,MAAU,EACnEO,GAAK,IAAMC,EAAEwK,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,aAAa,GAEhEpN,IAAM,IAAMC,EAAEwK,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,aAAa,IAAO3C,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,aAAa,GAG1HqL,UAAW5L,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,UAQhFpR,GADAmc,aACKlc,EAAEwK,MAAMqC,UAAW,GAAI,IAAI,GAE3B7M,EAAEwK,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,YAAaqL,SAR1DzY,GADAC,GAGK,GAUjBD,GAAMqL,EAAIpO,EAAED,OAAS,EAAI8P,UAAY,GAEzC9M,GAAK,KAET,OAAOA,GAGX,SAASqc,aAAaxP,IAAKC,UAAWkP,iBAAkBC,eAAgBC,cAAexD,aAAcD,SACjG,GAAK5L,IAAL,CAGA,GAAyB,IAArBA,IAAIiC,MAAM9R,OACV,MAAO,GAEX,IACIN,EAGAO,EAEAgD,EANAxD,EAAI,EAGJuD,EAAI,GAEJqL,EAAI,EAGR,IADApO,EAAI+X,aAAanI,KACZxB,EAAI,EAAGA,EAAIpO,EAAED,OAAQqO,GAAK,EAAG,CAS9B,KARI2Q,kBAAoBE,iBAGpBlc,GAFMkW,aAAarJ,KACnBpQ,EAAIQ,EAAEoO,GAAK,GACCZ,MAAMqC,UAAWD,IAAIO,aAC7BP,IAAIiC,MAAM9R,OAAS,IACnBgD,GAAK8M,YAGRrQ,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EACnCC,EAAIO,EAAEoO,GAAK,GACXpL,EAAI4M,IAAIiC,MAAMrS,GAAGC,GAAKmQ,IAAIiC,MAAMrS,GAAGC,GAAK,KAC/Bgc,eACLzY,EAAIA,EAAE6C,QAAQ,cAAe,MAEjC7C,EAAI8T,kBAAkB9T,EAAGvD,EAAGmQ,KACxBoP,gBAAwB,KAANhc,EACdA,EAAER,QAAQ,KAAO,EACjBO,GAAK,IAAMC,EAAEwK,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,YAAa6O,gBAEhEjc,GAAK,MAAUC,EAAEwK,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,YAAa6O,gBAAkB,KAGrFxD,UAAW5L,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,UAOpFpR,GAAKC,EAAEwK,MAAMqC,UAAWD,IAAIO,YAAaP,IAAIO,YAAaqL,SALtDzY,GADAC,GAGK,GAMjBD,GAAMvD,EAAIoQ,IAAIiC,MAAM9R,OAAS,EAAI8P,UAAY,GAEjD9M,GAAK,KAET,OAAOA,GAGX,SAASyZ,gBAAgB5M,KACrB,IAAIpQ,EAAI,EACJC,EAAI,EACJkD,EAAI,EACJuM,EAAI,EACJqN,MAAQ,GACZ,GAAK3M,IAAL,CAGA,GAAyB,IAArBA,IAAIiC,MAAM9R,OACV,OAAOwc,MAEX,IAAK9c,EAAI,EAAGA,EAAImQ,IAAI4B,gBAAiB/R,GAAK,EACtC8c,MAAMtc,KAAK,GAEf,IAAKT,EAAI,EAAGA,EAAIoQ,IAAIiC,MAAM9R,OAAQP,GAAK,EACnC,IAAKC,EAAI,EAAGA,EAAI8c,MAAMxc,OAAQN,GAAK,EAC/B,KAAIA,GAAKmQ,IAAIiC,MAAMrS,GAAGO,QAAtB,CAMA,GAHI6P,IAAIiC,MAAMrS,GAAGC,GAAGM,OAASwc,MAAM9c,KAC/B8c,MAAM9c,GAAKmQ,IAAIiC,MAAMrS,GAAGC,GAAGM,QAE3BM,SAAS2Z,eAAe,aAAeva,EAAI,IAE3C,GADAyP,EAAI7O,SAAS2Z,eAAe,aAAeva,EAAI,IAAI8B,OAC/CqO,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAa5G,GAAiB,KAAbjF,EAAExD,QAAiBkE,IAAIkC,SAASrS,IAAiC,KAA3BmQ,IAAIiC,MAAMrS,GAAGC,GAAGiM,SAA+C,KAA7BkE,IAAIkC,SAASrS,GAAG0U,YAAqBvE,IAAIkC,SAASrS,GAAGmU,QAAUhE,IAAIkC,SAASrS,GAAGsU,UAAYnE,IAAI+B,eAAiB,IACxL,KAEQhP,EADM0V,OAAOzI,IAAIiC,MAAMrS,GAAGC,GAAImQ,IAAI0I,WAAW7Y,IAAI8Y,OAAOrJ,GACjDnP,QACHwc,MAAM9c,KACV8c,MAAM9c,GAAKkD,GAEjB,MAAOkC,UAnBT/B,MAAMoM,GACNA,EAAI,EAEJA,GAAQ,EAEmB,KAA3BU,IAAIiC,MAAMrS,GAAGC,GAAGiM,SAChB/I,GAAKiN,IAAIiC,MAAMrS,GAAGC,GAAGsO,WAAW7K,QAAQgM,GAAK,IAAInP,QACzCwc,MAAM9c,KACV8c,MAAM9c,GAAKkD,GAevBtC,SAAS2Z,eAAe,YAAcva,EAAI,MAC1CkD,EAAItC,SAAS2Z,eAAe,YAAcva,EAAI,IAAI8B,MAC9CuB,MAAMH,GACNA,EAAI,EAEJA,GAAQ,EAERA,EAAI,IACJ4Z,MAAM9c,GAAKkD,IAK3B,OAAO4Z,OAGX,SAAS8C,gBACL,MAAO,CAAC,SAAU,MAAO,QAAS,MAAO,QAAS,UAAW,MAAO,KAAM,MAAO,SAAU,gBAAiB,SAAU,QAAS,UAAW,KAAM,UAAW,OAAQ,OAAQ,QAAS,UAAW,SAAU,SAAU,WAAY,aAAc,SAAU,QAAS,eAAgB,eAAgB,oBAAqB,WAAY,UAAW,aAAc,WAAY,SAAU,OAAQ,SAAU,WAAY,OAAQ,OAAQ,OAAQ,MAAO,SAAU,SAAU,YAAa,SAAU,UAAW,OAAQ,MAAO,UAAW,OAAQ,OAAQ,OAAQ,QAAS,SAAU,KAAM,SAAU,YAAa,KAAM,QAAS,UAAW,YAAa,QAAS,SAAU,UAAW,YAAa,OAAQ,KAAM,SAAU,OAAQ,MAAO,OAAQ,OAAQ,QAAS,QAAS,UAAW,KAAM,MAAO,UAAW,OAAQ,KAAM,SAAU,KAAM,KAAM,QAAS,QAAS,OAAQ,SAAU,UAAW,QAAS,QAAS,YAAa,aAAc,SAAU,UAAW,UAAW,SAAU,UAAW,WAAY,QAAS,WAAY,MAAO,YAAa,SAAU,MAAO,MAAO,UAAW,QAAS,OAAQ,YAAa,OAAQ,KAAM,cAAe,UAAW,QAAS,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,UAAW,OAAQ,QAAS,OAAQ,WAGhsC,SAASC,SAAS1P,IAAK2P,UAAWlJ,SAC9B,IACI5W,EAAG2C,EAAQO,EAAG6c,EAAGtQ,EAAGwD,IACpBmG,IAFArZ,EAAI,EACqByT,IAAM,EAE/BlQ,EAAI,GACJ0c,GAAK,GAELzc,EAAI,GACJgU,IAAM,GAEN0I,KAAO,GACPC,OAAS,GACTC,MAAQ,GACRC,KAAO,GACPC,KAAO,GACPC,cAAe,EACfC,MAAQ,GACRlgB,KAAO,GACPmgB,OAAS,EACTC,OAAS,EACTC,iBAAkB,EAClBC,MAAQ,EACRC,WAAa,EACbC,iBAAmB,EACvB,GAAK1Q,IAAL,CAGA2P,UAAYA,WAAa,IACzBlJ,QAAQkK,SAAWlK,QAAQkK,WAAY,EACjC,eAAgBlK,UAClBA,QAAQmK,YAAa,GAEnB,cAAenK,SAAyC,KAA7BA,QAAQoK,UAAU/U,SAAiB5I,MAAMuT,QAAQoK,aAC9EpK,QAAQoK,UAAYrZ,OAAOmN,WAEzB,uBAAwB8B,SAAkD,KAAtCA,QAAQqK,mBAAmBhV,SAAiB5I,MAAMuT,QAAQqK,sBAChGrK,QAAQqK,mBAAqBtZ,OAAOmN,WAEnC8B,QAAQsK,iBACTtK,QAAQqK,mBAAqB,IAEjC7H,IAAMI,aAAarJ,KACnB,IAAKnQ,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAC7BkgB,OAAOlgB,GAAKoZ,IAAIpZ,GAAGoG,QAAQ,OAAQ,KAC/B8Z,OAAOlgB,GAAGM,OAASmgB,SACnBA,OAASP,OAAOlgB,GAAGM,QAEvBD,KAAKL,IAAK,EACVmgB,MAAMngB,GAAKogB,KAAKpgB,GAAK,GACjBY,SAAS2Z,eAAe,QAAUva,EAAI,KAClCY,SAAS2Z,eAAe,QAAUva,EAAI,IAAIwa,UAC1CgG,QAAU,EACVngB,KAAKL,IAAK,GAGdY,SAAS2Z,eAAe,SAAWva,EAAI,MACvCkgB,OAAOlgB,GAAKY,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,MAAMsE,QAAQ,OAAQ,MAE7ExF,SAAS2Z,eAAe,QAAUva,EAAI,MACtCqgB,KAAKrgB,GAAKY,SAAS2Z,eAAe,QAAUva,EAAI,IAAIwa,SAEpD5Z,SAAS2Z,eAAe,SAAWva,EAAI,KACvCmgB,MAAMngB,GAAKY,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,MAAMmK,OACvD5I,MAAM8c,MAAMngB,IAGbmgB,MAAMngB,GAAK,GAFXmgB,MAAMngB,IAAM,EAIZmgB,MAAMngB,GAAK,IACXmgB,MAAMngB,GAAK,KAGfmgB,MAAMngB,GAAK,GAEXY,SAAS2Z,eAAe,QAAUva,EAAI,MACtCogB,KAAKpgB,GAAKY,SAAS2Z,eAAe,QAAUva,EAAI,IAAI8B,MAAMmK,OACrD5I,MAAM+c,KAAKpgB,IAMZogB,KAAKpgB,GAAK,IALVogB,KAAKpgB,IAAM,EACPogB,KAAKpgB,GAAK,IACVogB,KAAKpgB,GAAK,MAMlBY,SAAS2Z,eAAe,QAAUva,EAAI,IAClCY,SAAS2Z,eAAe,QAAUva,EAAI,IAAIwa,SAC1CyF,KAAKjgB,IAAK,EACV4gB,YAAc,GAEdX,KAAKjgB,IAAK,GAGdigB,KAAKjgB,IAAK,EACV4gB,YAAc,GAGtB,GAAmB,IAAfxH,IAAI9Y,OACJ,MAAO,GAEX,GAAmB,IAAfsgB,YAAiC,KAAbd,UACpB,MAAO,GAQX,GANIlJ,QAAQuK,UAAUpe,QAAQ,KAAO,GAAoC,KAA/B6T,QAAQuK,UAAUte,OAAO,IAA4C,KAA/B+T,QAAQuK,UAAUte,OAAO,KACrG+T,QAAQuK,UAAY,IAAOvK,QAAQuK,UAAY,KAE/CvK,QAAQwK,YACR9d,GAAK,SAAyB,MAAdwc,UAAoB,QAAU,WAAalJ,QAAQyK,WAAa,aAAe,IAAMzK,QAAQuK,UAAY,OAEzHvK,QAAQ0K,aAA4B,KAAbxB,UAAkB,CACzC,IAAIyB,YAAc3K,QAAQkK,SAM1B,IALAlK,QAAQkK,UAAW,EACnBxd,GAAK,iBAAmBsT,QAAQ4K,gBAAkB,iBAAmB,IAAM5K,QAAQuK,UAAY,IAC3FvK,QAAQkK,WACRxd,GAAK,MAEJJ,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAAGkD,GAAK,EAAG,CAiB5C,OAhBI0T,QAAQkK,UAAY5d,EAAI,IACxBI,GAAK,MAGLA,GADAJ,EAAI,EACC,MAEA,MAETI,GAAK4c,OAAOlgB,GAAG8L,KAAK2U,QACpBT,GAAK,KACDhgB,EAAImQ,IAAIkC,SAAS/R,SACjB0f,GAAK7P,IAAIkC,SAASrS,GAAG0U,WAErB9T,SAAS2Z,eAAe,SAAWva,EAAI,MACvCggB,GAAKpf,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,OAE5Cke,IACJ,IAAK,IACD1c,GAAK,QACL,MACJ,IAAK,IACDA,GAAK,YACL,MACJ,IAAK,KACL,IAAK,IAEGA,GADM,KAAN0c,GACK,WAEA,UAEL7P,IAAIkC,SAAS/R,OAAS,GACtByf,EAAI5P,IAAIkC,SAASrS,GAAG4U,UAAYzE,IAAIkC,SAASrS,GAAG2U,UAChDlF,EAAIU,IAAIkC,SAASrS,GAAG2U,YAEpBoL,EAAI,EACJtQ,EAAI2Q,KAAKpgB,GAAKogB,KAAKpgB,GAAK,GAExBmgB,MAAMngB,IAAMmgB,MAAMngB,GAAK+f,IACvBA,EAAII,MAAMngB,IAGVsD,GADM,KAANyc,EACK,IAAMA,EAAI,IAAMtQ,EAAI,IAEpB,IAET,MACJ,IAAK,KACDnM,GAAK,WACL,MACJ,IAAK,KACDA,GAAK,QACL,MACJ,IAAK,IACDA,GAAK,YACL,MACJ,IAAK,IACDA,GAAK,QACL,MACJ,IAAK,IACDA,GAAK,WACL,MACJ,IAAK,IACDA,GAAK,SACL,MACJ,IAAK,KACDA,GAAK,aACL,MACJ,IAAK,KACDA,GAAK,SACL,MACJ,IAAK,MACDA,GAAK,aAAe6c,MAAMngB,GAAM,IAAMmgB,MAAMngB,GAAK,IAAO,IACxD,MACJ,IAAK,KACDsD,GAAK,YAAc6c,MAAMngB,GAAM,IAAMmgB,MAAMngB,GAAK,IAAO,IACvD,MACJ,IAAK,MACDsD,GAAK,aAAe6c,MAAMngB,GAAM,IAAMmgB,MAAMngB,GAAK,IAAO,IACxD,MACJ,IAAK,KACDsD,GAAK,UAAY6c,MAAMngB,GAAM,IAAMmgB,MAAMngB,GAAK,IAAO,IACrD,MACJ,QACIsD,GAAK,SAAW6c,MAAMngB,GAAM,IAAMmgB,MAAMngB,GAAK,IAAO,IAGxDqgB,KAAKrgB,KACLsD,GAAK,aAELjD,KAAKL,IAAgB,GAAVwgB,SACXld,GAAK,eACK,KAAN0c,IAAmB,MAANA,IAAoB,KAANA,IAAmB,MAANA,IAAoB,MAANA,IAClDpf,SAAS2Z,eAAe,sBACxBjX,GAAK,IAAM1C,SAAS2Z,eAAe,oBAAoBzY,QAKvE,GAAI0e,OAAS,EAAG,CAKZ,IAJI5J,QAAQkK,WACRxd,GAAK,MAETA,GAAK,kBACAqL,EAAI,EAAGA,EAAItO,KAAKC,OAAQqO,GAAK,EAC1BtO,KAAKsO,KACLrL,IAAOqL,EAAI,EAAK,IAAM,IAAMuR,OAAOvR,IAG3CrL,GAAK,IAELsT,QAAQkK,WACRxd,GAAK,MAETA,GAAK,OACLsT,QAAQkK,SAAWS,iBAEnB,GAAI3K,QAAQ0K,aAA6B,MAAdxB,UAAmB,CAS1C,IARAxc,GAAK,UACkC,KAAnCsT,QAAQ6K,gBAAgBxV,SACxB3I,GAAK,IAAMsT,QAAQ6K,gBAAgBxV,QAEvC3I,GAAK,SAAWsT,QAAQ4K,gBAAkB,iBAAmB,IAAM5K,QAAQuK,UAAY,IACnFvK,QAAQkK,WACRxd,GAAK,MAEJJ,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAC5BigB,KAAKjgB,KAGNkD,EAAI,IACJI,GAAK,KAETA,GAAK4c,OAAOlgB,GACR4W,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,GAETI,GAAK,SAGb,GAAmB,IAAfsd,WACA,OAAOtd,EAEX,OAAQwc,WACJ,IAAK,IAED,IADAtM,IAAMP,IAAM,EACPlT,EAAI,EAAGA,GAAKoQ,IAAIiC,MAAM9R,OAAS6P,IAAIiC,MAAM9R,OAAS,GAAIP,GAAK,EAAG,CAG/D,GADAyT,KAAO,EACI,IAFXP,KAAO,KAEU2D,QAAQsK,gBAAkB1N,IAAmC,EAA7BoD,QAAQqK,mBAAwB,CAU7E,IATAzN,IAAM,EACNlQ,GAAKsT,QAAQ8K,WAAa,UAAY,SACC,KAAnC9K,QAAQ6K,gBAAgBxV,SACxB3I,GAAK,IAAMsT,QAAQ6K,gBAAgBxV,QAEvC3I,GAAK,SAAWsT,QAAQuK,UAAY,IAChCvK,QAAQkK,WACRxd,GAAK,MAEJJ,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAC5BigB,KAAKjgB,KAGNkD,EAAI,IACJI,GAAK,KAETA,GAAK4c,OAAOlgB,GACR4W,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,GAGT,GADAI,GAAK,YAAesT,QAAQsK,eAAsB,KAAL,IAAe,KACnC,IAArB/Q,IAAIiC,MAAM9R,OAAc,CACxB,IAAK4C,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAC5BigB,KAAKjgB,KAGNkD,EAAI,IACJI,GAAK,KAETA,GAAK,IACDsT,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,GAET,OAAOI,EAAI,WAGfA,GAAK,KAKT,IAHIsT,QAAQkK,WACRxd,GAAK,MAEJJ,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EACjC,GAAKigB,KAAKjgB,GAAV,CA2CA,GAvCIggB,GADqB,IAArB7P,IAAIiC,MAAM9R,OACL,KAEA6P,IAAIkC,SAASrS,GAAG0U,UAGrBnR,EADAvD,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAErB0gB,iBAAkB,EACd9f,SAAS2Z,eAAe,SAAWva,EAAI,MACvCggB,GAAKpf,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,QAAUva,EAAI,MACtCuX,IAAM3W,SAAS2Z,eAAe,QAAUva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,SAAWva,EAAI,KACnCY,SAAS2Z,eAAe,SAAWva,EAAI,IAAIwa,UAC3CjX,EAAIA,EAAE0I,QAGVrL,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAES,eAGVpD,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAEkD,eAGV7F,SAAS2Z,eAAe,WAAava,EAAI,KACrCY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,UAC7CkG,iBAAkB,GAGtBxd,EAAI,IACJI,GAAK,KAEG,KAARiU,IAGQjU,GAFG,MAAP0c,IAAqB,OAAPA,IAAsB,MAAPA,IAAqB,OAAPA,IAAsB,MAAPA,IAAqB,MAAPA,IAAqB,OAAPA,IAAsB,OAAPA,IAAsB,MAAPA,IAAqB,MAAPA,GACxH,KAANzc,EACKgU,IAAInR,QAAQ,MAAO,QAEd,KAAN4Z,IAAmB,MAANA,GACRzI,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,KAEtCyI,IAAInR,QAAQ,MAAO7C,EAAEuL,SAI7ByI,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,UAG/C,OAAQkR,IACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,IACiB,KAAbzc,EAAE0I,SAAuC,QAAnB1I,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAC5Ere,GAAK,OAELA,GAAKC,EAAEuL,QAEX,MACJ,IAAK,KACL,IAAK,IACD,GAAW,KAANvL,IAAkC,QAAnBA,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cACrEre,GAAK,WACF,CACH,GAAIsT,SAAWA,QAAQ+B,eAA2C,KAA1B/B,QAAQ+B,cAC5C,IACI,IAAI+G,GAAKnc,EACLA,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,GACL7B,EAAImc,GAGZpc,GAAK,IAAOC,EAAEuL,QAAU,IAE5B,MACJ,QAC4B,QAAnBvL,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAIlDre,GADM,KAANC,GAAYmd,gBACP,OAEM,OAAPV,IAAsB,QAAPA,GACV,KAAQzc,EAAEuL,QAAU,IAEpB,IAAOvL,EAAEuL,QAAU,IARhCxL,GAAK,OAejBsT,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,GAEJ0T,QAAQsK,gBAAkBnhB,GAAKoQ,IAAIiC,MAAM9R,OAAS,GAAKkT,KAAoC,EAA7BoD,QAAQqK,mBACvE3d,GAAK,OAELA,GAAK,MAGb,MACJ,IAAK,IAED,IADAgd,cAAe,EACVvgB,EAAI,EAAGA,GAAKoQ,IAAIiC,MAAM9R,OAAS6P,IAAIiC,MAAM9R,OAAS,GAAIP,GAAK,EAAG,CAU/D,IATAwgB,MAAQ,GACRjd,GAAK,SACkC,KAAnCsT,QAAQ6K,gBAAgBxV,SACxB3I,GAAK,IAAMsT,QAAQ6K,gBAAgBxV,QAEvC3I,GAAK,IAAMsT,QAAQuK,UAAY,QAC3BvK,QAAQkK,WACRxd,GAAK,MAEJtD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EACzBK,KAAKL,KACLugB,QAAoB,KAAVA,MAAe,QAAU,IAAML,OAAOlgB,GAAK,OAASA,EAAI,KAM1E,IAHc,KAAVugB,QACAA,MAAQL,OAAO,GAAK,UAEnBhd,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAAG,CAiEpC,OAhEIigB,KAAKjgB,KACDkD,EAAI,IACJI,GAAK,KAETA,GAAK4c,OAAOlgB,GAAK,MACjBkD,GAAK,GAGL8c,GADqB,IAArB7P,IAAIiC,MAAM9R,OACL,KAEA6P,IAAIkC,SAASrS,GAAG0U,UAGrBnR,EADqB,IAArB4M,IAAIiC,MAAM9R,OACN,IAEAN,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAGzB0gB,iBAAkB,EACd9f,SAAS2Z,eAAe,SAAWva,EAAI,MACvCggB,GAAKpf,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,QAAUva,EAAI,MACtCuX,IAAM3W,SAAS2Z,eAAe,QAAUva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,SAAWva,EAAI,KACnCY,SAAS2Z,eAAe,SAAWva,EAAI,IAAIwa,UAC3CjX,EAAIA,EAAE0I,QAGVrL,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAES,eAGVpD,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAEkD,eAGV7F,SAAS2Z,eAAe,WAAava,EAAI,KACrCY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,UAC7CkG,iBAAkB,GAGd,KAARnJ,MAGQjU,GAFG,MAAP0c,IAAqB,OAAPA,IAAsB,MAAPA,IAAqB,OAAPA,IAAsB,MAAPA,IAAqB,MAAPA,IAAqB,OAAPA,IAAsB,OAAPA,IAAsB,MAAPA,IAAqB,MAAPA,GACxH,KAANzc,EACKgU,IAAInR,QAAQ,MAAO,QAEd,KAAN4Z,IAAmB,MAANA,GACRzI,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,KAEtCyI,IAAInR,QAAQ,MAAO7C,EAAEuL,SAI7ByI,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,KAE/CwR,cAAe,GAEXN,IACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACIM,cAAgBL,KAAKjgB,KACX,KAANuD,IAAkC,QAAnBA,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cACrEre,GAAK,OAEoB,IAArB6M,IAAIiC,MAAM9R,OACVgD,GAAKC,EAELD,GAAKC,EAAEuL,SAKfyR,MADqB,IAArBpQ,IAAIiC,MAAM9R,OACFigB,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,GAE9Bgd,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,EAAEuL,SAE5C,MACJ,IAAK,KACL,IAAK,KACL,IAAK,KACIwR,cAAgBL,KAAKjgB,KACX,KAANuD,IAAkC,QAAnBA,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cACrEre,GAAK,OAEoB,IAArB6M,IAAIiC,MAAM9R,OACVgD,GAAKC,EAELD,GAAKC,EAAEuL,SAKfyR,MADqB,IAArBpQ,IAAIiC,MAAM9R,OACFigB,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,GAE9Bgd,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,EAAEuL,SAE5C,MACJ,IAAK,IACD,IAAKwR,cAAgBL,KAAKjgB,GACtB,GAAW,KAANuD,IAAkC,QAAnBA,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cACrEre,GAAK,YAEL,GAAyB,IAArB6M,IAAIiC,MAAM9R,OACVgD,GAAKC,MACF,CACH,GAAIqT,SAAWA,QAAQ+B,eAA2C,KAA1B/B,QAAQ+B,cAC5C,IACQ+G,GAAKnc,EACLA,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,GACL7B,EAAImc,GAGZpc,GAAK,IAAOC,EAAEuL,QAAU,IAKhCyR,MADqB,IAArBpQ,IAAIiC,MAAM9R,OACFigB,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,GAE9Bgd,MAAMna,QAAQ,KAAOpG,EAAI,IAAK,IAAOuD,EAAEuL,QAAU,KAE7D,MACJ,SACSwR,cAAgBL,KAAKjgB,KACE,QAAnBuD,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAG5C,KAANpe,GAAYmd,gBACZpd,GAAK,OAEM,OAAP0c,IAAsB,QAAPA,GACf1c,GAAK,KAAQC,EAAEuL,QAAU,IAEA,IAArBqB,IAAIiC,MAAM9R,OACVgD,GAAKC,EAELD,GAAK,IAAOC,EAAEuL,QAAU,IAXpCxL,GAAK,QAkBTid,MADO,OAAPP,IAAsB,QAAPA,GACPO,MAAMna,QAAQ,KAAOpG,EAAI,IAAK,KAAQuD,EAAEuL,QAAU,KAEjC,IAArBqB,IAAIiC,MAAM9R,OACFigB,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,GAE9Bgd,MAAMna,QAAQ,KAAOpG,EAAI,IAAK,IAAOuD,EAAEuL,QAAU,KAKrEmR,KAAKjgB,KACD4W,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,GAGbI,GAAK,UAAYid,MACjBjd,GAAK,MAET,MACJ,IAAK,IACD,IAAKvD,EAAI,EAAGA,GAAKoQ,IAAIiC,MAAM9R,OAAS6P,IAAIiC,MAAM9R,OAAS,GAAIP,GAAK,EAAG,CAM/D,IALAwgB,MAAQ,GACRjd,GAAK,eAAiBsT,QAAQuK,UAC1BvK,QAAQkK,WACRxd,GAAK,MAEJtD,EAAI,EAAGA,EAAIkgB,OAAO5f,OAAQN,GAAK,EAC5BK,KAAKL,KACLugB,QAAoB,KAAVA,MAAe,QAAU,IAAML,OAAOlgB,GAAK,OAASA,EAAI,KAM1E,IAHc,KAAVugB,QACAA,MAAQL,OAAO,GAAK,UAEnBhd,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAAG,CAqCpC,OApCAkD,GAAK,EAED8c,GADqB,IAArB7P,IAAIiC,MAAM9R,OACL,KAEA6P,IAAIkC,SAASrS,GAAG0U,UAGrBnR,EADqB,IAArB4M,IAAIiC,MAAM9R,OACN,IAEAN,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAGrBY,SAAS2Z,eAAe,SAAWva,EAAI,MACvCggB,GAAKpf,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,QAAUva,EAAI,MACtCuX,IAAM3W,SAAS2Z,eAAe,QAAUva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,SAAWva,EAAI,KACnCY,SAAS2Z,eAAe,SAAWva,EAAI,IAAIwa,UAC3CjX,EAAIA,EAAE0I,QAGVrL,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAES,eAGVpD,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAEkD,eAGNuZ,IACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IAEGO,MADqB,IAArBpQ,IAAIiC,MAAM9R,OACFigB,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,GAE9Bgd,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,EAAEuL,SAE5C,MACJ,QAEQyR,MADO,OAAPP,IAAsB,QAAPA,GACPO,MAAMna,QAAQ,KAAOpG,EAAI,IAAK,KAAQuD,EAAEuL,QAAU,KAEjC,IAArBqB,IAAIiC,MAAM9R,OACFigB,MAAMna,QAAQ,KAAOpG,EAAI,IAAKuD,GAE9Bgd,MAAMna,QAAQ,KAAOpG,EAAI,IAAK,IAAOuD,EAAEuL,QAAU,KAKrE8H,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,EAETI,GAAK,UAAYid,MACjBjd,GAAK,MAET,MACJ,IAAK,IAED,IADA2P,IAAM0N,MAAQ,EACT5gB,EAAI,EAAGA,GAAKoQ,IAAIiC,MAAM9R,OAAS6P,IAAIiC,MAAM9R,OAAS,GAAIP,GAAK,EAAG,CAG/D,GAFA4gB,OAAS,EAEG,KADZ1N,KAAO,IACU0N,OAAS/J,QAAQoK,UAAW,CAGzC,IAFA1d,GAAK,cAAgBsT,QAAQuK,UAAY,gBACzCZ,MAAQ,OACH5d,EAAI3C,EAAI,EAAGA,EAAIkgB,OAAO5f,OAAQN,GAAK,EAChCK,KAAKL,KACLugB,QAAU5d,EAAI,EAAI,QAAU,KAAO,KAAOud,OAAOlgB,GAAK,OAASkgB,OAAOlgB,GACtE2C,GAAK,GAGC,SAAV4d,QACAA,OAAS,KAAOL,OAAO,GAAK,OAASA,OAAO,GAC5C7f,KAAKG,KAAK0f,OAAO,KAErBK,OAAS,UAEL3J,QAAQ0K,aAAeX,MAAQ/J,QAAQoK,aACvC1d,GAAK,eAOb,IAJIsT,QAAQkK,WACRxd,GAAK,MAETA,GAAK,UACAud,iBAAmB7gB,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EAC5CigB,KAAKjgB,KAAOK,KAAKL,KACjB6gB,kBAAoB,GAG5B,IAAK3d,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EACjC,GAAKigB,KAAKjgB,IAAOK,KAAKL,GAAtB,CA+CA,GA3CIggB,GADqB,IAArB7P,IAAIiC,MAAM9R,OACL,KAEA6P,IAAIkC,SAASrS,GAAG0U,UAGrBnR,EADqB,IAArB4M,IAAIiC,MAAM9R,OACN,IAEAN,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAGzB0gB,iBAAkB,EACd9f,SAAS2Z,eAAe,SAAWva,EAAI,MACvCggB,GAAKpf,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,QAAUva,EAAI,MACtCuX,IAAM3W,SAAS2Z,eAAe,QAAUva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,SAAWva,EAAI,KACnCY,SAAS2Z,eAAe,SAAWva,EAAI,IAAIwa,UAC3CjX,EAAIA,EAAE0I,QAGVrL,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAES,eAGVpD,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAEkD,eAGV7F,SAAS2Z,eAAe,WAAava,EAAI,KACrCY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,UAC7CkG,iBAAkB,GAGtBxd,EAAI,IACJI,GAAK,KAEG,KAARiU,IACU,KAANyI,IAAmB,MAANA,IAAoB,KAANA,IAAmB,MAANA,IAAoB,KAANA,IAAmB,KAANA,IAAmB,MAANA,IAAoB,MAANA,IAAoB,KAANA,IAAoB,MAAPA,GAC/G,KAANzc,EACAD,GAAKiU,IAAInR,QAAQ,MAAO,QAEd,KAAN4Z,IAAmB,MAANA,GACb1c,GAAKiU,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,KAElB,IAArBqB,IAAIiC,MAAM9R,OACVgD,GAAKse,IAAIxb,QAAQ,MAAO7C,GAExBD,GAAKiU,IAAInR,QAAQ,MAAO7C,EAAEuL,SAKb,IAArBqB,IAAIiC,MAAM9R,OACVgD,GAAKse,IAAIxb,QAAQ,MAAO7C,GAExBD,GAAKiU,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,SAGhD,CACH,OAAQkR,IACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,IACiB,KAAbzc,EAAE0I,SAAuC,QAAnB1I,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAC5Ere,GAAK,OAEoB,IAArB6M,IAAIiC,MAAM9R,OACVgD,GAAKC,EAELD,GAAKC,EAAEuL,QAGf,MACJ,IAAK,KACL,IAAK,IACD,GAAW,KAANvL,IAAkC,QAAnBA,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cACrEre,GAAK,YAEL,GAAyB,IAArB6M,IAAIiC,MAAM9R,OACVgD,GAAKC,MACF,CACH,GAAIqT,SAAWA,QAAQ+B,eAA2C,KAA1B/B,QAAQ+B,cAC5C,IACQ+G,GAAKnc,EACLA,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,GACL7B,EAAImc,GAGZpc,GAAK,IAAOC,EAAEuL,QAAU,IAGhC,MACJ,QAC4B,QAAnBvL,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAG5C,KAANpe,GAAYmd,gBACZpd,GAAK,OAEM,OAAP0c,IAAsB,QAAPA,GACf1c,GAAK,KAAQC,EAAEuL,QAAU,IAEA,IAArBqB,IAAIiC,MAAM9R,OACVgD,GAAKC,EAELD,GAAK,IAAOC,EAAEuL,QAAU,IAXpCxL,GAAK,OAkBL,IAAR2P,MACA3P,GAAK,OAAS4c,OAAOlgB,IAGzB4W,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,EAKT,GAHI0T,QAAQmK,aACRzd,GAAK,UAAYsT,QAAQiL,eAAiB,WAE1C9hB,GAAKoQ,IAAIiC,MAAM9R,OAAS,GAAKqgB,OAAS/J,QAAQoK,WAAkC,IAArB7Q,IAAIiC,MAAM9R,OAAc,CAGnF,GAFAgD,GAAK,UACLA,GAAKid,MACDM,iBAAmB,EAEnB,IADAvd,GAAK,2CACAJ,EAAIlD,EAAI,EAAGA,EAAIkgB,OAAO5f,OAAQN,GAAK,GAC/BK,KAAKL,IAAMigB,KAAKjgB,KACjBsD,IAAMJ,EAAI,EAAI,KAAO,KAAO,KAAOgd,OAAOlgB,GAAK,MAAQkgB,OAAOlgB,GAC9DkD,GAAK,GAKjB,IADAI,GAAK,0CACAJ,EAAIlD,EAAI,EAAGA,EAAIkgB,OAAO5f,OAAQN,GAAK,GAChCK,KAAKL,IAAMigB,KAAKjgB,MAChBsD,IAAMJ,EAAI,EAAI,KAAO,KAAYgd,OAAOlgB,GACxCkD,GAAK,GAIb,IADAI,GAAK,kBACAJ,EAAIlD,EAAI,EAAGA,EAAIkgB,OAAO5f,OAAQN,GAAK,GAChCK,KAAKL,IAAMigB,KAAKjgB,MAChBsD,IAAMJ,EAAI,EAAI,KAAO,KAAO,KAAOgd,OAAOlgB,GAC1CkD,GAAK,GAGbI,GAAK,cAELA,GAAK,KAKT,GAHIqd,OAAS/J,QAAQoK,YACjBL,MAAQ,GAEa,IAArBxQ,IAAIiC,MAAM9R,OACV,MAGR,MACJ,IAAK,IAKD,IAJA2S,IAAM0N,MAAQ,EACV/J,QAAQ0K,cACR1K,QAAQoK,UAAYrZ,OAAOmN,WAE1B/U,EAAI,EAAGA,GAAKoQ,IAAIiC,MAAM9R,OAAS6P,IAAIiC,MAAM9R,OAAS,GAAIP,GAAK,EAAG,CAY/D,IAXA4gB,OAAS,GACT1N,KAAO,GACG,IACF2D,QAAQ0K,aAAeX,MAAQ/J,QAAQoK,aACvC1d,GAAK,eAGTsT,QAAQkK,WACRxd,GAAK,MAETA,GAAK,UACAJ,EAAIlD,EAAI,EAAGA,EAAIoZ,IAAI9Y,OAAQN,GAAK,EACjC,GAAKigB,KAAKjgB,GAAV,CA+CA,GA3CIggB,GADqB,IAArB7P,IAAIiC,MAAM9R,OACL,KAEA6P,IAAIkC,SAASrS,GAAG0U,UAGrBnR,EADqB,IAArB4M,IAAIiC,MAAM9R,OACN,GAEAN,GAAKmQ,IAAIiC,MAAMrS,GAAGO,OACd,GAEA6P,IAAIiC,MAAMrS,GAAGC,GAGzB0gB,iBAAkB,EACd9f,SAAS2Z,eAAe,SAAWva,EAAI,MACvCggB,GAAKpf,SAAS2Z,eAAe,SAAWva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,QAAUva,EAAI,MACtCuX,IAAM3W,SAAS2Z,eAAe,QAAUva,EAAI,IAAI8B,OAEhDlB,SAAS2Z,eAAe,SAAWva,EAAI,KACnCY,SAAS2Z,eAAe,SAAWva,EAAI,IAAIwa,UAC3CjX,EAAIA,EAAE0I,QAGVrL,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAES,eAGVpD,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAEkD,eAGV7F,SAAS2Z,eAAe,WAAava,EAAI,KACrCY,SAAS2Z,eAAe,WAAava,EAAI,IAAIwa,UAC7CkG,iBAAkB,GAGtBxd,EAAI,IACJI,GAAK,KAEG,KAARiU,IACyB,IAArBpH,IAAIiC,MAAM9R,OACVgD,GAAKiU,IAAInR,QAAQ,MAAO,KAIhB9C,GAFG,MAAP0c,IAAqB,OAAPA,IAAsB,MAAPA,IAAqB,OAAPA,IAAsB,MAAPA,IAAqB,MAAPA,IAAqB,OAAPA,IAAsB,OAAPA,IAAsB,MAAPA,IAAqB,MAAPA,GACxH,KAANzc,EACKgU,IAAInR,QAAQ,MAAO,QAEd,KAAN4Z,IAAmB,MAANA,GACRzI,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,KAEtCyI,IAAInR,QAAQ,MAAO7C,EAAEuL,SAI7ByI,IAAInR,QAAQ,MAAO,IAAO7C,EAAEuL,QAAU,UAInD,OAAQkR,IACJ,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,KACL,IAAK,KACL,IAAK,IACwB,IAArB7P,IAAIiC,MAAM9R,OACVgD,GAAK,IAEa,KAAbC,EAAE0I,SAAuC,QAAnB1I,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAC5Ere,GAAK,OAELA,GAAKC,EAAEuL,QAGf,MACJ,IAAK,KACL,IAAK,IACD,GAAyB,IAArBqB,IAAIiC,MAAM9R,OACVgD,GAAK,SAEL,GAAW,KAANC,IAAkC,QAAnBA,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cACrEre,GAAK,WACF,CACH,GAAIsT,SAAWA,QAAQ+B,eAA2C,KAA1B/B,QAAQ+B,cAC5C,IACQ+G,GAAKnc,EACLA,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOlC,QAAQ+B,eACtD,MAAOvT,GACL7B,EAAImc,GAGZpc,GAAK,IAAOC,EAAEuL,QAAU,IAGhC,MACJ,QAC6B,IAArBqB,IAAIiC,MAAM9R,OACVgD,GAAK,IAEmB,QAAnBC,EAAES,eAAiC,QAANT,IAAgBqT,QAAQ+K,cAIlDre,GADM,KAANC,GAAYmd,gBACP,OAEM,OAAPV,IAAsB,QAAPA,GACV,KAAQzc,EAAEuL,QAAU,IAEpB,IAAOvL,EAAEuL,QAAU,IARhCxL,GAAK,OAgBrBsT,QAAQkK,WACRxd,GAAK,MAETJ,GAAK,EACO,IAAR+P,MACA3P,GAAK,OAAS4c,OAAOlgB,IAGzB4W,QAAQmK,aAAqC,IAArB5Q,IAAIiC,MAAM9R,QAAiBsW,QAAQ0K,eAC3Dhe,GAAK,UAAYsT,QAAQiL,eAAiB,WAE1C9hB,GAAKoQ,IAAIiC,MAAM9R,OAAS,GAAKqgB,OAAS/J,QAAQoK,WAAkC,IAArB7Q,IAAIiC,MAAM9R,OACrEgD,GAAK,MAELA,GAAK,KAELqd,OAAS/J,QAAQoK,YACjBL,MAAQ,GAGS,IAArBxQ,IAAIiC,MAAM9R,QAAiBsW,QAAQ0K,eACnChe,EAAIA,EAAE8C,QAAQ,cAAe,KAAK+F,SAC5BzF,SAAS,OACXpD,EAAIA,EAAES,MAAM,GAAI,IAEpBT,GAAK,WAAesT,QAAQuK,WAAa,WAAa,KAKlE,OADIhR,IAAIiC,MAAM9R,OACPgD,GAGX,SAASwe,aAAaC,IAAK3R,UAAW0L,gBAAiBC,QAASC,cAC5D,IAAIjc,EAAGC,EAAG4K,EACNtH,EAAI,GACJxB,MAAQ,GACRkgB,KAAO,GACPC,SAAW,CAAC,WAAY,YAAa,WAAY,YACjDhiB,IAAM,GACN4P,EAAI,GACR,GAAmB,iBAARkS,IACP,IACIA,IAAMjb,KAAKgD,MAAMiY,KACnB,MAAO3c,GACL2c,IAAM7X,KAAK,OAAS6X,KAG5B,IAAIG,OAAS,EAOb,GANiB,YAAbH,IAAII,OACJJ,IAAM,CACFI,KAAQ,oBACRC,SAAY,CAACL,OAGJ,sBAAbA,IAAII,KAA8B,CAClC,IAAKpiB,EAAI,EAAGA,EAAIgiB,IAAIK,SAAS9hB,OAAQP,GAAK,EACA,UAAlCgiB,IAAIK,SAASriB,GAAGsiB,SAASF,MACnB,aAAcH,OAChBA,KAAKM,SAAWJ,QAAU,GAExB,cAAeF,OACjBA,KAAKO,UAAYL,QAAU,GAEzB,aAAcF,OAChBA,KAAK5C,SAAW8C,QAAU,IAGxB,gBAAiBF,OACnBA,KAAKQ,YAAcN,QAAU,EAC7BD,SAASzhB,KAAK,gBAI1B,IAAKT,EAAI,EAAGA,EAAIgiB,IAAIK,SAAS9hB,OAAQP,GAAK,EACtC,IAAK6K,KAAKmX,IAAIK,SAASriB,GAAG0iB,WAChB7X,KAAKoX,OACPA,KAAKpX,GAAKsX,QAAU,EACpBD,SAASzhB,KAAKoK,IAI1B,GAAIkR,gBAAiB,CACjB,IAAK/b,EAAI,EAAGA,EAAIkiB,SAAS3hB,OAAQP,GAAK,EAClC8P,GAAKoS,SAASliB,GAAGgO,MAAMqC,UAAW,IAAM,IAAM2L,SAAW3L,UAE7DP,EAAIA,EAAE9L,MAAM,GAAI,EAAIqM,UAAU9P,QAAU,KAE5C,IAAKP,EAAI,EAAGA,EAAIgiB,IAAIK,SAAS9hB,OAAQP,GAAK,EAAG,CACrC,aAAciiB,MACVD,IAAIK,SAASriB,GAAGsiB,UAAYN,IAAIK,SAASriB,GAAGsiB,SAASF,MAAQJ,IAAIK,SAASriB,GAAGsiB,SAASG,aAAeT,IAAIK,SAASriB,GAAGsiB,SAASG,YAAYliB,QAAU,GAAuC,UAAlCyhB,IAAIK,SAASriB,GAAGsiB,SAASF,MAClL7e,IAAMyY,QAAU,IAAO,IAAMgG,IAAIK,SAASriB,GAAGsiB,SAASG,YAAY,IAAMzG,QAAU,IAAO,IAAM3L,UAC/F9M,IAAMyY,QAAU,IAAO,IAAMgG,IAAIK,SAASriB,GAAGsiB,SAASG,YAAY,IAAMzG,QAAU,IAAO,IAAM3L,UAC3F2R,IAAIK,SAASriB,GAAGsiB,SAASG,YAAYliB,OAAS,EAC9CgD,IAAMyY,QAAU,IAAO,IAAMgG,IAAIK,SAASriB,GAAGsiB,SAASG,YAAY,IAAMzG,QAAU,IAAO,IAAM3L,UAE/F9M,IAAMyY,QAAU,KAAS,IAAM3L,YAQvC9M,IAAMyY,QAAU,KAAS,IAAM3L,UAC/B9M,IAAMyY,QAAU,KAAS,IAAM3L,UAC/B9M,IAAMyY,QAAU,KAAS,IAAM3L,WAE/B2R,IAAIK,SAASriB,GAAGsiB,SAASF,MACzBrgB,MAAQigB,IAAIK,SAASriB,GAAGsiB,SAASF,KACjC7e,IAAM,GAAKxB,OAAOiM,MAAMqC,UAAW,IAAM,IAAM2L,SAAW3L,WAE1D9M,IAAMyY,QAAU,KAAS,IAAM3L,UAE/B,gBAAiB4R,OACoB,SAAjCD,IAAIK,SAASriB,GAAGsiB,SAASF,MACzBrgB,MAAQigB,IAAIK,SAASriB,GAAGsiB,SAASG,YACI,oBAAhC1gB,MAAQ,IAAIgB,UAAU,EAAG,MAC1BhB,MAAQgF,KAAKkE,WAAWlJ,OAAOiC,MAAM,GAAI,IAE7CT,IAAM,GAAKxB,OAAOiM,MAAMqC,UAAW,IAAM,IAAM2L,SAAW3L,WAE1D9M,IAAMyY,QAAU,KAAS,IAAM3L,WAGvC,IAAKpQ,EAAI,EAAGA,EAAIiiB,SAAS3hB,OAAQN,GAAK,EAClC4K,EAAIqX,SAASjiB,GACJ,YAAL4K,GAAyB,cAANA,GAA2B,aAANA,GAA0B,gBAANA,GAA4B,YAALA,IAGnFA,KAAKmX,IAAIK,SAASriB,GAAG0iB,YACrB3gB,MAAQigB,IAAIK,SAASriB,GAAG0iB,WAAW7X,GACrB,OAAV9I,QACAA,MAAQ,IAEyB,oBAAhCA,MAAQ,IAAIgB,UAAU,EAAG,MAC1BhB,MAAQgF,KAAKkE,WAAWlJ,OAAOiC,MAAM,GAAI,IAEzCiY,eACAla,OAASA,MAAQ,IAAIsE,QAAQ,cAAe,MAEhD9C,IAAMxB,MAAQ,IAAIiM,MAAMqC,UAAW,IAAM,IAAM2L,SAAW3L,WAE1D9M,IAAMyY,QAAU,KAAS,IAAM3L,WAGvC9M,EAAIA,EAAES,MAAM,GAAI,EAAIqM,UAAU9P,QAAU,MAGhD,OAAOuP,EAAIvM,EAGf,SAASof,WAAW1Z,KAChB,OAAOtB,OAAOsB,KAAK5C,QAAQ,KAAM,SAASA,QAAQ,KAAM,UAAUA,QAAQ,KAAM,SAASA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QAGjI,SAASoT,aAAarJ,KAClB,IAAInQ,EACAoZ,IAAM,GACV,GAAKjJ,IAAL,CAGKA,KACDwS,MAAM,eAELxS,IAAIgC,aACLwQ,MAAM,uBAEV,IAAIC,IAAMzS,IAAIgC,YAAY7R,OAI1B,IAHIsiB,IAAMzS,IAAI4B,kBACV6Q,IAAMzS,IAAI4B,iBAET/R,EAAI,EAAGA,EAAI4iB,IAAK5iB,GAAK,EACjBmQ,IAAIgC,YAAYnS,IACjBmQ,IAAIgC,YAAY3R,KAAK,SAAWR,EAAI,IAExCoZ,IAAI5Y,KAAK2P,IAAIgC,YAAYnS,IACrBmQ,IAAIU,eACJV,IAAIgC,YAAYnS,GAAKmQ,IAAIgC,YAAYnS,GAAGgE,cACxCoV,IAAIA,IAAI9Y,OAAS,GAAK8Y,IAAIA,IAAI9Y,OAAS,GAAG0D,eAEtCmM,IAAIW,gBACJX,IAAIgC,YAAYnS,GAAKmQ,IAAIgC,YAAYnS,GAAGyG,cACxC2S,IAAIA,IAAI9Y,OAAS,GAAK8Y,IAAIA,IAAI9Y,OAAS,GAAGmG,eAItD,OAAO2S,KAGX,SAASyJ,WAAW1S,KAChB,GAAKA,IAAL,CAGA,IAAI2M,MAAQC,gBAAgB5M,KACxBiJ,IAAMI,aAAarJ,KACnB7M,EAAI,yFACRA,GAAK,sBACLA,GAAK,sCACLA,GAAK,2CACLA,GAAK,mHACLA,GAAK,gGACLA,GAAK,qGACLA,GAAK,mJACLA,GAAK,mJACLA,GAAK,oJACLA,GAAK,yHACL,IA8BIvD,EA9BA+iB,SAAW,mBA+Bf,IA9BAA,UAAY,kGACZA,UAAY,iEACZA,UAAY,8CACZA,UAAY,gDACZA,UAAY,iDACZA,UAAY,yCACZA,UAAY,2CACZA,UAAY,6CACZA,UAAY,4CACZA,UAAY,0CACZA,UAAY,4CACZA,UAAY,4CACZA,UAAY,yCACZA,UAAY,gDACZA,UAAY,6CACZA,UAAY,4CACZA,UAAY,0CACZA,UAAY,2CACZA,UAAY,4FACZA,UAAY,gFACZA,UAAY,4DACZA,UAAY,mEACZA,UAAY,4DACZA,UAAY,mEACZA,UAAY,gJACZA,UAAY,gJACZA,UAAY,qEACZA,UAAY,+EACZA,UAAY,QAEP/iB,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,EAC7BuD,GAAKwf,SAAS1c,QAAQ,SAAU,IAAMrG,EAAI,IAAIqG,QAAQ,cAAgBrG,EAAI,GAAK,IAAKqZ,IAAIrZ,GAAGqG,QAAQ,4CAA6C,IAAIA,QAAQ,OAAQ,KAAKA,QAAQ,MAAO,MAAMA,QAAQ,cAAgBrG,EAAI,GAAK,IAAwC,KAAlC+c,MAAMxc,OAAS,GAAKwc,MAAM/c,IAAY+c,MAAM/c,GAAK,IAC1P,IAAxBoQ,IAAIkC,SAAS/R,QAWjBgD,GAJIA,EAD8B,MAA9B6M,IAAIkC,SAAStS,GAAG2U,UACZpR,EAAE8C,QAAQ,YAAcrG,EAAI,GAAK,IAAKoQ,IAAIkC,SAAStS,GAAG4U,WAEtDrR,EAAE8C,QAAQ,YAAcrG,EAAI,GAAK,IAAK,KAExCqG,QAAQ,WAAarG,EAAI,GAAK,IAAK,QAAUoQ,IAAIkC,SAAStS,GAAG2U,UAAY,2BAA6BvE,IAAIiC,MAAM9R,OAAS,kBAAoB6P,IAAIkC,SAAStS,GAAGuU,UACjI,OAA9BnE,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,OAASrG,EAAI,GAAK,IAAK,YAEH,QAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,QAAUrG,EAAI,GAAK,IAAK,YAEJ,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,YAEF,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,YAEF,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,YAEF,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,YAEF,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,YAEF,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,UAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,YAEF,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,YAChBpR,EAAIA,EAAE8C,QAAQ,MAAQrG,EAAI,GAAK,IAAK,cAlCpEuD,GADAA,GADAA,EAAIA,EAAE8C,QAAQ,OAASrG,EAAI,GAAK,IAAK,aAC/BqG,QAAQ,WAAarG,EAAI,GAAK,IAAK,wCAA0CoQ,IAAIiC,MAAM9R,OAAS,sBAChG8F,QAAQ,YAAcrG,EAAI,GAAK,IAAK,IA8ClD,OADAuD,GAAK,YAIT,SAASyf,WAAW5S,KAChB,IAAIpQ,EACJ,GAAKoQ,IAAL,CAGA,IAAIiJ,IAAMI,aAAarJ,KAOvB,IANIvP,SAAS2Z,eAAe,WACxB3Z,SAAS2Z,eAAe,SAASC,SAAU,GAE3C5Z,SAAS2Z,eAAe,WACxB3Z,SAAS2Z,eAAe,SAASC,SAAU,GAE1Cza,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,EACxBa,SAAS2Z,eAAe,SAAWxa,EAAI,MAG5Ca,SAAS2Z,eAAe,SAAWxa,EAAI,IAAI+B,MAAQsX,IAAIrZ,GAAGqG,QAAQ,4CAA6C,IAAIA,QAAQ,OAAQ,KAAKA,QAAQ,MAAO,KAClJxF,SAAS2Z,eAAe,SAAWxa,EAAI,KAGvCoQ,IAAIkC,SAAStS,IAGe,IAA7BoQ,IAAIkC,SAAStS,GAAGuU,WAChB1T,SAAS2Z,eAAe,QAAUxa,EAAI,IAAIya,SAAU,KAKhE,SAASwI,WAAW7S,KAChB,IAAI8S,WAAcriB,UAAYA,SAAS2Z,eAAe,eACtD,GAAKpK,IAAL,CAGA,IAAIiJ,IAAMI,aAAarJ,KACnB7M,EAAI,uGACRA,GAAK,mGACLA,GAAK,oGACLA,GAAK,uLACLA,GAAK,uLACLA,GAAK,mPACLA,GAAK,8GACLA,GAAK,0GACD2f,aACA3f,GAAK,sHAETA,GAAK,uCACLA,GAAK,QACL,IAcIvD,EAdA+iB,SAAW,mBAef,IAdAA,UAAY,4BACZA,UAAY,8EACZA,UAAY,+EACZA,UAAY,oMACZA,UAAY,oMACZA,UAAY,mMACZA,UAAY,0FACZA,UAAY,uGACRG,aACAH,UAAY,uGAEhBA,UAAY,kIACZA,UAAY,QAEP/iB,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,EAC7BuD,GAAKwf,SAAS1c,QAAQ,SAAU,IAAMrG,EAAI,IAAIqG,QAAQ,cAAgBrG,EAAI,GAAK,IAAKqZ,IAAIrZ,GAAGqG,QAAQ,OAAQ,MAG/G,OADA9C,GAAK,YAIT,SAAS4f,YAAY/S,KACjB,GAAKA,IAAL,CAGA,IAAI2M,MAAQC,gBAAgB5M,KACxBiJ,IAAMI,aAAarJ,KACnB7M,EAAI,4GACRA,GAAK,gJACLA,GAAK,sJACLA,GAAK,sJACLA,GAAK,kKACLA,GAAK,wKACL,IAUIvD,EAVA+iB,SAAW,mBAWf,IAVAA,UAAY,4BACZA,UAAY,4DACZA,UAAY,2FACZA,UAAY,mEACZA,UAAY,gJACZA,UAAY,gJACZA,UAAY,gJACZA,UAAY,gJACZA,UAAY,QAEP/iB,EAAI,EAAGA,EAAIqZ,IAAI9Y,OAAQP,GAAK,EAC7BuD,GAAKwf,SAAS1c,QAAQ,SAAU,IAAMrG,EAAI,IAAIqG,QAAQ,cAAgBrG,EAAI,GAAK,IAAKqZ,IAAIrZ,GAAGqG,QAAQ,OAAQ,MAAMA,QAAQ,cAAgBrG,EAAI,GAAK,IAAwC,KAAlC+c,MAAMxc,OAAS,GAAKwc,MAAM/c,IAAY+c,MAAM/c,GAAK,IAG7M,OADAuD,GAAK,YAIT,SAAS6f,gBAAgBhT,IAAKiT,cAC1B,IACIrjB,EACAsjB,UAAY,EAChB,GAAKlT,IAAL,CAkBA,GAfIvP,SAAS2Z,eAAe,iBACxBpK,IAAIQ,MAAQ/P,SAAS2Z,eAAe,eAAezY,OAEnDlB,SAAS2Z,eAAe,kBACxBpK,IAAIc,KAAOrQ,SAAS2Z,eAAe,gBAAgBzY,OAEnDlB,SAAS2Z,eAAe,eACxBpK,IAAIS,iBAAmBhQ,SAAS2Z,eAAe,aAAaC,SAE5D5Z,SAAS2Z,eAAe,oBACxBpK,IAAIU,cAAgBjQ,SAAS2Z,eAAe,kBAAkBC,SAE9D5Z,SAAS2Z,eAAe,oBACxBpK,IAAIW,cAAgBlQ,SAAS2Z,eAAe,kBAAkBC,SAE9D5Z,SAAS2Z,eAAe,QAAS,CAUjC,IATApK,IAAIrG,MAAMlJ,SAAS2Z,eAAe,QAAQzY,OASrC/B,EAAI,EAAGA,EAAIoQ,IAAI4B,gBAAiBhS,GAAK,EAClCoQ,IAAIkC,SAAStS,IAAoC,MAA9BoQ,IAAIkC,SAAStS,GAAG2U,YACnC2O,WAAa,GAGjBC,kBAAoBD,UAAY,EAChCC,iBAAiBnT,KAEjBA,IAAI0I,gBAAa5O,EAgBzB,GAbIrJ,SAAS2Z,eAAe,gBAAkBpK,IAAI8B,kBAAoB9B,IAAI4B,iBAAmBqR,gBACzFxiB,SAAS2Z,eAAe,cAAc3W,UAAYif,WAAW1S,KAC7D4S,WAAW5S,KACXA,IAAI8B,iBAAmB9B,IAAI4B,iBAE3BnR,SAAS2Z,eAAe,oBAAsBpK,IAAI8B,kBAAoB9B,IAAI4B,iBAAmBqR,gBAC7FxiB,SAAS2Z,eAAe,kBAAkB3W,UAAYsf,YAAY/S,KAClEA,IAAI8B,iBAAmB9B,IAAI4B,iBAE3BnR,SAAS2Z,eAAe,mBAAqBpK,IAAI8B,kBAAoB9B,IAAI4B,iBAAmBqR,gBAC5FxiB,SAAS2Z,eAAe,iBAAiB3W,UAAYof,WAAW7S,KAChEA,IAAI8B,iBAAmB9B,IAAI4B,iBAE3BnR,SAAS2Z,eAAe,kBAAmB,CAE3C,GADA3Z,SAAS2Z,eAAe,kBAAkB3W,UAAY,2BAA0D,IAA3BuM,IAAIgC,YAAY7R,QAAkB6P,IAAoB,iBAAK,UAAYA,IAAIS,kBAAoBT,IAAIS,iBAAmB,0BAA4BT,IAAI6B,cAAgB,KAAO,6BAAuD,MAAjB7B,IAAIC,UAAsB,MAAyB,KAAjBD,IAAIC,UAAmB,QAAUD,IAAIC,WAAa,KAAO,2BAAkCD,IAAI4B,gBAAkB,6BAAoC5B,IAAI+B,eAAiB,EAAI,IAAM/B,IAAI+B,eAC9f/B,IAAIS,iBACJ,IAAK7Q,EAAI,EAAGA,EAAIoQ,IAAIgC,YAAY7R,OAAQP,GAAK,EACzC,GAAIoQ,IAAIgC,YAAYpS,GAAGsO,aAAsC,KAAvB8B,IAAIgC,YAAYpS,GAAW,CAC7Da,SAAS2Z,eAAe,kBAAkB3W,WAAa,qEACvD,MAIZ,IAAK7D,EAAI,EAAGA,EAAIoQ,IAAIyB,aAAatR,OAAQP,GAAK,EAC1Ca,SAAS2Z,eAAe,kBAAkB3W,WAAa,0CAA4CuM,IAAIyB,aAAa7R,GAAGqV,MAAQ,aAenI,IAbIjF,IAAIa,gBAAkB,IACtBpQ,SAAS2Z,eAAe,kBAAkB3W,WAAa,8CAAgDuM,IAAIa,iBAE3Gb,IAAIS,kBAAoBT,IAAIuB,iBAAmBvB,IAAI+B,cAAgB,EACnEtR,SAAS2Z,eAAe,kBAAkB3W,WAAa,gDAAkDuM,IAAI6B,cAAgB,oCAAsC7B,IAAIwB,oBAEnKxB,IAAIqB,iBACJ5Q,SAAS2Z,eAAe,kBAAkB3W,WAAa,6CAA+CuM,IAAI4B,gBAAkB,oCAAsC5B,IAAIsB,oBAG1KtB,IAAIzH,OAASyH,IAAIM,gBACjB7P,SAAS2Z,eAAe,kBAAkB3W,WAAa,oHAEtD7D,EAAI,EAAGA,EAAIoQ,IAAIkC,SAAS/R,OAAQP,GAAK,EAClCoQ,IAAIkC,SAAStS,IAAoC,KAA7BoQ,IAAIkC,SAAStS,GAAG2U,YAAqBvE,IAAIkC,SAAStS,GAAGoU,QAAUhE,IAAIkC,SAAStS,GAAGuU,UAAYnE,IAAI+B,eAAiB,KACpItR,SAAS2Z,eAAe,kBAAkB3W,WAAa,iCAAmCuM,IAAIgC,YAAYpS,IAAOA,EAAI,GAAM,oDAGnI,IAAIwjB,IACA/P,IAAM,EACNgQ,IAAM,CAAC,GAAI,kCAAmC,+BAAgC,iCAClF,IAAKD,OAAOpT,IAAIiB,YAAa,CAEzB,IADAoC,KAAO,GACG,EAAG,CACT5S,SAAS2Z,eAAe,kBAAkB3W,WAAa,WACvD,MAEJhD,SAAS2Z,eAAe,kBAAkB3W,WAAa,yBAA2B4f,IAAIrT,IAAIiB,YAAYmS,KAAKtP,OAAS,aAAesP,IAAM,YAAcpT,IAAIiB,YAAYmS,KAAKrP,UAKxL,SAASuP,WACL,IAAIC,YAAa,EACb9iB,SAAS2Z,eAAe,eACxBmJ,WAAa9iB,SAAS2Z,eAAe,aAAaC,SAElD5Z,SAAS2Z,eAAe,aACxB3Z,SAAS2Z,eAAe,WAAWC,SAAU,GAE7CrK,MACAA,IAAIC,UAAY,IAChBD,IAAIG,YAAa,EACjBH,IAAIzH,MAAQ,IACZyH,IAAIO,YAAc,IAClBP,IAAI4B,gBAAkB,GAEtBnR,SAAS2Z,eAAe,UACxB3Z,SAAS2Z,eAAe,QAAQzY,MAAQ,IAEvC4hB,YACG9iB,SAAS2Z,eAAe,UACxB3Z,SAAS2Z,eAAe,QAAQzY,MAAQ,IAG5ClB,SAAS2Z,eAAe,aACxB3Z,SAAS2Z,eAAe,WAAWzY,MAAQ,IAE3ClB,SAAS2Z,eAAe,eACxB3Z,SAAS2Z,eAAe,aAAaC,SAAU,GAE/C5Z,SAAS2Z,eAAe,oBACxB3Z,SAAS2Z,eAAe,kBAAkBC,SAAU,GAEpD5Z,SAAS2Z,eAAe,oBACxB3Z,SAAS2Z,eAAe,kBAAkBC,SAAU,GAEnDkJ,YACG9iB,SAAS2Z,eAAe,UACxB3Z,SAAS2Z,eAAe,QAAQ3W,UAAY,IAGhDhD,SAAS2Z,eAAe,gBACxB3Z,SAAS2Z,eAAe,cAAc3W,UAAY,IAElDhD,SAAS2Z,eAAe,oBACxB3Z,SAAS2Z,eAAe,kBAAkB3W,UAAY,IAEtDhD,SAAS2Z,eAAe,mBACxB3Z,SAAS2Z,eAAe,iBAAiB3W,UAAY,IAErDhD,SAAS2Z,eAAe,mBACxB3Z,SAAS2Z,eAAe,iBAAiBC,SAAU,GAEnD5Z,SAAS2Z,eAAe,oBACxB3Z,SAAS2Z,eAAe,kBAAkBC,SAAU,GAEpD5Z,SAAS2Z,eAAe,0BACxB3Z,SAAS2Z,eAAe,wBAAwBC,SAAU,GAE1D5Z,SAAS2Z,eAAe,uBACxB3Z,SAAS2Z,eAAe,qBAAqBC,SAAU,GAE3D2I,kBACAQ,cAGJ,SAASC,eAAeC,SAExB,SAASC,WAAWC,UAEhB,IAAKA,SACD,MAAO,GAEX,IAAIC,YAAcD,SAASzjB,OAC3B,QAAoB,IAAhB0jB,YACA,OAAID,SAASvJ,QACFuJ,SAASjiB,MAET,GAGf,IAAK,IAAIa,EAAI,EAAGA,EAAIqhB,YAAarhB,GAAK,EAClC,GAAIohB,SAASphB,GAAG6X,QACZ,OAAOuJ,SAASphB,GAAGb,MAG3B,MAAO,GAGX,SAASmiB,cAAcF,SAAUG,UAC7B,GAAKH,SAAL,CAGA,IAAIC,YAAcD,SAASzjB,OAC3B,QAAoB,IAAhB0jB,YAAJ,CAKiB,QADjBE,UAAYA,UAAY,IAAM,MAE1BA,SAAW,OAEf,IAAK,IAAIvhB,EAAI,EAAGA,EAAIqhB,YAAarhB,GAAK,EAClCohB,SAASphB,GAAG6X,SAAU,EAClBuJ,SAASphB,GAAGb,OAASoiB,WACrBH,SAASphB,GAAG6X,SAAU,QAV1BuJ,SAASvJ,QAAWuJ,SAASjiB,OAASoiB,SAASnb,YAevD,SAASob,UACL,IACO1U,EAAG1P,EAAGuD,EAEb,IADAA,EAAI,GACCvD,EAAI,EAAGA,GAAK,EAAGA,GAAK,EACba,SAAS2Z,eAAe,aAAexa,IAKrC,MADV0P,EAAI7O,SAAS2Z,eAAe,aAAexa,GAAG+B,SAM1C/B,EAAI,IACJuD,GAAK,KAETA,GALI1C,SAAS2Z,eAAe,cAAgBxa,GAAG+B,MAKtC2N,EAJL7O,SAAS2Z,eAAe,aAAexa,GAAG+B,OAQlD,OAFAqO,IAAIqF,YAAYlS,GAChB6M,IAAIiU,cAAe,EACZ9gB,EAGX,SAASqgB,cACL,IAAIU,GACAtkB,EAAGC,EAAGH,EACV,IAAKE,EAAI,EAAGA,GAAK,EAAGA,GAAK,EAErB,GADAskB,GAAKzjB,SAAS2Z,eAAe,aAAexa,GAC5C,CAGA,GAAIskB,GAAGzN,QAAQtW,OAAS,GAAK6P,IAAI4B,gBAC7B,MAIJ,IAFAsS,GAAGzN,QAAQtW,OAAS,EACpB+jB,GAAGC,cAAgB,EACdtkB,EAAI,EAAGA,GAAKmQ,IAAI4B,gBAAiB/R,GAAK,GACvCH,EAAIe,SAAS2jB,cAAc,WACzB1jB,KAAOhB,EAAEiC,MAAQ,GAAK9B,EACxBqkB,GAAGzN,QAAQ4N,IAAI3kB,GAGvBskB,iBACW,yBAA6B,UACpCM,mBAEA7jB,SAAS2Z,eAAe,iBACxB3Z,SAAS2Z,eAAe,gBAAgBmK,QAIhD,SAASpM,aAAanI,KAClB,IACIxN,EAAG5C,EADHQ,EAAI,GAER,GAAK4P,IAAL,CAGA,GAAwB,KAApBA,IAAImC,YAAoB,CAExB,IADA/R,EAAI4P,IAAImC,YAAY5P,MAAM,KACrBC,EAAI,EAAGA,EAAIpC,EAAED,OAAQqC,GAAK,EAE3B,GADApC,EAAEoC,IAAMpC,EAAEoC,GAAK,IAAIsJ,OACf5I,MAAM9C,EAAEoC,KAAOpC,EAAEoC,GAAK,IACtB,IAAK5C,EAAI,EAAGA,EAAIoQ,IAAIgC,YAAY7R,OAAQP,GAAK,GACpCQ,EAAEoC,GAAK,IAAIqB,eAAiBmM,IAAIgC,YAAYpS,GAAGiE,gBAChDzD,EAAEoC,GAAK5C,EAAI,GAK3B,IAAK4C,EAAIpC,EAAED,OAAS,EAAGqC,GAAK,EAAGA,GAAK,GAC5BU,MAAM9C,EAAEoC,KAAOpC,EAAEoC,GAAK,GAAKpC,EAAEoC,GAAKwN,IAAI4B,kBACtCxR,EAAE4F,OAAOxD,EAAG,GAGpB,IAAKA,EAAI,EAAGA,EAAIpC,EAAED,OAAQqC,GAAK,EAC3BpC,EAAEoC,IAAM,EAGhB,GAAiB,IAAbpC,EAAED,OACF,IAAKqC,EAAI,EAAGA,EAAIwN,IAAI4B,gBAAiBpP,GAAK,EACtCpC,EAAEA,EAAED,QAAUqC,EAAI,EAG1B,GAAiB,IAAbpC,EAAED,OACF,IAAKqC,EAAI,EAAGA,EAAIwN,IAAIgC,YAAY7R,OAAQqC,GAAK,EACzCpC,EAAEA,EAAED,QAAUqC,EAAI,EAG1B,OAAOpC,GAGX,SAASokB,eAAe5e,MACpB,IAAIhG,EACA6kB,KAAO,GACX,IAAK7kB,EAAI,EAAGA,EAAIgG,KAAKzF,OAAQP,GAAK,EAAG,CACjC,IAAI8kB,IAAM,GACV,IAAK7kB,EAAI,EAAGA,EAAI+F,KAAKhG,GAAGO,OAAQN,GAAK,EACjC6kB,IAAI9e,KAAKhG,GAAGC,GAAGkU,QAAUnO,KAAKhG,GAAGC,GAAG8B,MAExC8iB,KAAK7kB,GAAK8kB,IAEd,OAAOD,KAGX,SAASE,gBAEL,MADQ,4NAIZ,SAASC,oBAEL,MADQ,gHAIZ,SAASC,cAAc9hB,GACnBA,GAAKA,GAAK,GAAK,EAEf,MADQ,+hBAIZ,SAAS+hB,eAAe/hB,GAGpB,MADQ,CAAC,icAAqpB,kPAAgX,0QAAmZ,gHAA4J,wIAD7jDA,GAAKA,GAAK,GAAK,GAKnB,SAASgiB,gBAEL,MADQ,koBAIZ,SAASC,iBAEL,MADQ,uSAIZ,SAASC,kBAAkBliB,GAEvB,MADQ,ksBAIZ,SAASmiB,WAAWC,KAChB,IAAIhiB,EAAI1C,SAAS2jB,cAAc,UAC/BjhB,EAAE6e,KAAO,kBACT7e,EAAEiiB,GAAK,gBACPjiB,EAAEkiB,IAAMF,IACR1kB,SAAS6kB,qBAAqB,QAAQ,GAAGC,YAAYpiB,GAGzD,SAASqiB,iBAAiBL,KACjBA,IAAIpW,WAAW,OAChBoW,IAAM,IAAMA,KAEhBD,WAAW,qDAAuDC,KAGtE,SAASM,eAAe7f,MACpBnF,SAAS2Z,eAAe,QAAQzY,MAAQiE,KAAK8f,KAAKtc,KAAK,MACvD3I,SAAS2Z,eAAe,UAAUmK,QAGtC,SAASoB,QAAQR,KACb,GAAmB,KAAfA,IAAIrZ,OAEJ,OADA0W,MAAM,gBACC,EAEXgD,iBAAiB,gCAAkCI,mBAAmBT,MAG1E,SAASU,WAAWnlB,KAAMolB,MACtB,IAAIA,KAAOA,MAAc,EACzB,GAAoB,oBAATnf,KACP,OAAOjG,KAEX,IACI,GAAoB,iBAATA,KACP,OAAOiG,KAAK2C,UAAU3C,KAAKgD,MAAMjJ,MAAO,KAAMolB,MAElD,GAAoB,iBAATplB,KACP,OAAOiG,KAAK2C,UAAU5I,KAAM,KAAMolB,MAExC,MAAO7gB,GACL,IAEI,OADA8gB,EAAIhc,KAAK,IAAMrJ,KAAO,KACfiG,KAAK2C,UAAUyc,EAAG,KAAMD,MACjC,MAAO7gB,KAEb,OAAOvE,KAGX,SAASwb,aAAaxc,GACD,iBAANA,IACPA,EAAIiH,KAAKgD,MAAMjK,IAEnB,IAEIE,EAAGQ,EAFH+C,EAAIwD,KAAK2C,UAAU5J,EAAG,KAAM,MAAQ6C,MAAM,gBAC1CyjB,MAAQ,EAEZ,IAAKpmB,EAAI,EAAGA,EAAIuD,EAAEhD,OAAQP,GAAK,EACL,MAAlBuD,EAAEvD,GAAG8C,OAAO,KAGhBtC,EAAI+C,EAAEvD,GAAGqmB,MAAM,UACT,GAAG9lB,OAAS6lB,QACdA,MAAQ5lB,EAAE,GAAGD,QAGrB,OAAO6lB,MAAQ,EAGnB,SAASE,WAAWxlB,KAAM2D,GAAI8hB,SAC1B,IAAIC,KAAO,IAAIC,KAAK,CAAC3lB,MAAO,CACxBshB,KAAM,6BAEVsE,OAAOF,KAAM/hB,IAAI,GAGrB,SAASkiB,UAAUnB,GAAIoB,UACnB,IAAIniB,GAAK,aACLoiB,IAAM,GAwCV,OAvCID,WACAC,IAAItW,WAAaH,IAAIG,WACrBsW,IAAIhW,iBAAmBT,IAAIS,iBAC3BgW,IAAIle,MAAQyH,IAAIzH,MAChBke,IAAIxW,UAAYD,IAAIC,UACpBwW,IAAIxU,MAAQjC,IAAIiC,MAAMrO,MAAM,IAE5BnD,SAAS2Z,eAAe,QACxB/V,GAAK5D,SAAS2Z,eAAe,MAAMzY,OAEvCqO,IAAIG,YAAa,EACjBH,IAAIS,kBAAmB,EACvBT,IAAIzH,MAAQ,IACR9H,SAAS2Z,eAAe,SAAW3Z,SAAS2Z,eAAe,iBAC3DpK,IAAIC,UAAY0T,WAAWljB,SAASimB,KAAKC,SAAW,IAC9B,MAAlB3W,IAAIC,YACJD,IAAIC,UAAYxP,SAAS2Z,eAAe,kBAAkBzY,OAE9DqO,IAAIG,YAAa,GAEjB1P,SAAS2Z,eAAe,mBACpB3Z,SAAS2Z,eAAe,kBAAkBC,UAC1CrK,IAAIzH,MAAQ,KAGhB9H,SAAS2Z,eAAegL,IACxBpV,IAAIrG,MAAMlJ,SAAS2Z,eAAegL,IAAIzjB,OAEtCqO,IAAIrG,MAAMyb,IAEdzf,OAAO,uBAA0BtB,GAAK,iCAAmC,CAAC2L,IAAIiC,QAC1EuU,WACAxW,IAAIG,WAAasW,IAAItW,WACrBH,IAAIS,iBAAmBgW,IAAIhW,iBAC3BT,IAAIzH,MAAQke,IAAIle,MAChByH,IAAIC,UAAYwW,IAAIxW,UACpBD,IAAIiC,MAAQwU,IAAIxU,MAAMrO,MAAM,GAC5BoM,IAAIrG,MAAMqG,IAAI1G,eAEX,EAGX,SAASsd,SAASlmB,KAAMgF,KACpB,IAAIgQ,IAAM,OACNhQ,MAAAA,MACAA,IAAM,IAEE,KAARA,MACAA,IAAM,IAAMA,KAEhB,IAAIrB,GAAK5D,SAAS2Z,eAAe,MAAMzY,MAAMmK,OAClC,KAAPzH,KACAA,GAAK5D,SAAS2Z,eAAe,MAAMzY,MAAQ,cAE3ClB,SAAS2Z,eAAe,SACxB1E,IAAMjV,SAAS2Z,eAAe,OAAOzY,OAAS+T,KAEvC,MAAPA,MACAA,IAAM,MAEC,QAAPA,MACAA,IAAM,QAGVwQ,WADQxlB,KAAKuF,QAAQ,eAAgByP,KACvBrR,GAAKqB,IAAK,MAG5B,SAASmhB,UACL,IAAI5W,UAAY,GACZuF,EAAI,GACJsR,GAAK,EACLC,IAAM,GACNC,IAAM,GACLC,WAAWC,sBAGiB,OAA7BD,WAAWE,eACXF,WAAWG,YAAY,KAEK,KAA5BH,WAAWE,gBAGX1mB,SAAS2Z,eAAe,SAAqD,KAA1CiN,eAAeC,QAAQ,kBACtD7mB,SAAS2Z,eAAe,eACxB3Z,SAAS2Z,eAAe,aAAaC,QAAkD,KAAxCkN,aAAaD,QAAQ,gBACpErX,UAAYsX,aAAaD,QAAQ,gBACjCxD,cAAcrjB,SAAS+mB,MAAMd,KAAKxI,IAAKjO,WACvCuF,EAAI+R,aAAaD,QAAQ,YACzBR,GAAKS,aAAaD,QAAQ,gBAC1BP,IAAMQ,aAAaD,QAAQ,qBAC3BN,IAAMO,aAAaD,QAAQ,wBAC3BtX,IAAIG,YAAa,EACbF,WAA2B,KAAdA,YACbD,IAAIG,YAAa,EACjBH,IAAIC,UAAYA,WAEhBuF,GAAW,KAANA,IACLxF,IAAIzH,MAAQiN,EACR/U,SAAS2Z,eAAe,mBACxB3Z,SAAS2Z,eAAe,iBAAiBC,QAAiB,MAAN7E,IAGxDwR,KAAe,KAARA,KACHvmB,SAAS2Z,eAAe,0BACxBpK,IAAIgB,YAAsB,KAAPgW,IACnBvmB,SAAS2Z,eAAe,wBAAwBC,QAAUrK,IAAIgB,aAGlE+V,KAAe,KAARA,KACHtmB,SAAS2Z,eAAe,uBACxB3Z,SAAS2Z,eAAe,qBAAqBC,QAAmB,MAAR0M,KAGhE/W,IAAI0B,yBAA0B,EACnB,KAAPoV,KACA9W,IAAI0B,wBAAkC,MAAPoV,GAC3BrmB,SAAS2Z,eAAe,uBACxB3Z,SAAS2Z,eAAe,qBAAqBC,QAAUrK,IAAI0B,2BAIvE+V,WAAWR,WAAWS,WAE1BL,eAAeM,QAAQ,eAAgB,MAG3C,SAASC,UACL,IAAIpS,EAAIxF,IAAIzH,OAAS,IACjBue,GAAK,IACJG,WAAWC,sBAGZzmB,SAAS2Z,eAAe,sBACxBmN,aAAaI,QAAQ,oBAAsBlnB,SAAS2Z,eAAe,qBAA4B,QAAI,IAAM,IAEzG3Z,SAAS2Z,eAAe,yBACxBmN,aAAaI,QAAQ,uBAAyBlnB,SAAS2Z,eAAe,wBAA+B,QAAI,IAAM,IAE/G3Z,SAAS2Z,eAAe,uBACxB0M,GAAKrmB,SAAS2Z,eAAe,qBAAqBC,SAElD5Z,SAAS2Z,eAAe,SACpB3Z,SAAS2Z,eAAe,QAAQzY,OAASgjB,iBAAmBlkB,SAAS2Z,eAAe,QAAQzY,MAAMxB,OAAS,GAC3G8mB,WAAWY,OAAOpnB,SAAS2Z,eAAe,QAAQzY,MAAOlB,SAAS2Z,eAAe,aAAaC,QAAU,IAAM,IAAKsJ,WAAWljB,SAAS+mB,MAAMd,KAAKxI,KAAM1I,EAAGsR,GAAK,IAAM,MAKlL,SAASgB,YACDb,YAAcA,WAAWC,qBACzBG,eAAeM,QAAQ,eAAgB,KAE3C1mB,OAAOyC,SAASqkB,QAAO,GAG3B,SAAS7Q,kBAAkB9T,EAAGvD,EAAGmQ,KAC7B,IAAIV,EA+CJ,GA9CI7O,SAAS2Z,eAAe,SAAWva,EAAI,KACnCY,SAAS2Z,eAAe,SAAWva,EAAI,IAAIwa,UAC3CjX,EAAIA,EAAE0I,QAGVrL,SAAS2Z,eAAe,UAAYva,EAAI,KACpCY,SAAS2Z,eAAe,UAAYva,EAAI,IAAIwa,UAC5CjX,EAAIA,EAAE2I,SAGVtL,SAAS2Z,eAAe,UAAYva,EAAI,KACpCY,SAAS2Z,eAAe,UAAYva,EAAI,IAAIwa,UAC5CjX,EAAIA,EAAE4I,SAGVvL,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAES,eAGVpD,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC9CjX,EAAIA,EAAEkD,eAGV7F,SAAS2Z,eAAe,aAAeva,EAAI,KACvCY,SAAS2Z,eAAe,aAAeva,EAAI,IAAIwa,UAC/CjX,EAAIA,EAAEyJ,gBAGVpM,SAAS2Z,eAAe,YAAcva,EAAI,KACtCY,SAAS2Z,eAAe,YAAcva,EAAI,IAAIwa,UAC1CrK,IAAIkC,SAASrS,GACoB,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,YACpDnR,EAAIA,EAAE6J,qBAGV7J,EAAIA,EAAE6J,qBAIdxM,SAAS2Z,eAAe,aAAeva,EAAI,KACvCY,SAAS2Z,eAAe,aAAeva,EAAI,IAAIwa,UAC/CjX,EAAIA,EAAE6I,UAGVxL,SAAS2Z,eAAe,aAAeva,EAAI,KACkB,KAAzDY,SAAS2Z,eAAe,aAAeva,EAAI,IAAI8B,MAE/C,GADA2N,EAAI7O,SAAS2Z,eAAe,aAAeva,EAAI,IAAI8B,OAC/CqO,IAAIkC,SAASrS,IAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAAiD,KAA7BvE,IAAIkC,SAASrS,GAAG0U,WAU5G,GAAiB,KAAbnR,EAAE0I,QAAiBkE,IAAIkC,SAASrS,KAAoC,KAA7BmQ,IAAIkC,SAASrS,GAAG0U,YAAqBvE,IAAIkC,SAASrS,GAAGmU,QAAUhE,IAAIkC,SAASrS,GAAGsU,UAAYnE,IAAI+B,eAAiB,IAAM,CAC7J,IAAIwN,GAAKnc,EACT,IACIkM,EAAIA,EAAEzL,cACFT,EAAIqV,OAAOrV,EAAG4M,IAAI0I,WAAW7Y,IAAI8Y,OAAOrJ,GAC9C,MAAOrK,GACL7B,EAAImc,UAfRrc,MAAMoM,GACNA,EAAI,EAEJA,GAAQ,EAEK,KAAblM,EAAE0I,SACF1I,EAAKA,EAAE+K,WAAW7K,QAAQgM,GAAK,IAe/C,OAAOlM,EAGX,SAAS4kB,qBAAqBC,IAC1BjY,IAAIO,YAAe0X,GAAK,IAAO,IAGnC,SAASC,oBAAoBD,IACzBjY,IAAIzH,MAAS0f,GAAK,IAAO,IACzBjF,gBAAgBhT,KAAK,GAGzB,SAASmY,cAAczmB,KAAM0mB,IACzB,IAAIxoB,EACAke,IACJ,IAAKle,EAAI,EAAGA,EAAIoQ,IAAI4B,gBAAiBhS,GAAK,GACtCke,IAAMrd,SAAS2Z,eAAe1Y,MAAQ9B,EAAI,OAI1Cke,IAAIzD,QAAU+N,IAItB,IAAIC,IAAM,CACNlD,IAAO,iGAEPmD,IAAM,GACNC,QAAU,EACVC,QAAU,EAEd,SAASC,UACLH,IAAIrY,UAAY0T,WAAWljB,SAAS+mB,MAAM,GAAGb,QACxB,KAAjB2B,IAAIrY,YACJqY,IAAIrY,UAAYtP,EAAE,mBAAmB,GAAGgB,OAEvC2mB,IAAIrY,YACLqY,IAAIrY,UAAY,KAEpBqY,IAAI9X,MAAQ7P,EAAE,aAAa,GAAG0Z,QAC9BiO,IAAII,UAAU/nB,EAAE,eAAe,IAAKA,EAAE,eAAe,GAAG0Z,QAExDiO,IAAIK,OAAShoB,EAAE,cAAc,GAAG0Z,QAChCiO,IAAIM,cAAgBjoB,EAAE,YAAY,GAAG0Z,QACrCiO,IAAIO,OAASloB,EAAE,cAAc,GAAG0Z,QAChCiO,IAAIQ,SAAWnoB,EAAE,aAAa,GAAGgB,MACjC2mB,IAAIS,OAASpoB,EAAE,cAAc,GAAG0Z,QAChCiO,IAAIrP,IAAMtY,EAAE,iBAAiB,GAAG0Z,QAChCiO,IAAIU,SAAWroB,EAAE,gBAAgB,GAAG0Z,QACpCiO,IAAIW,IAAMtoB,EAAE,WAAW,GAAG0Z,QAC1BiO,IAAIY,OAASvoB,EAAE,YAAY,GAAG0Z,QAC9BiO,IAAIa,OAASxoB,EAAE,YAAY,GAAG0Z,QAC9BiO,IAAIc,gBAAiBzoB,EAAE,sBAAsB,IAAKA,EAAE,sBAAsB,GAAG0Z,QAC7EiO,IAAIe,QAAU,MAGlB,SAAS5B,WAAW6B,aAChB3oB,EAAE,SAAS,GAAGgB,MAAQ2nB,YAG1B,SAASC,uBAAuBC,UACvBA,SAASza,WAAW,OACrBya,SAAW,IAAMA,UAErBtE,WAAW,qDAAuDsE,UAGtE,SAASC,qBAAqBhM,OAC1B6K,IAAInD,IAAO1H,MAAM0H,KAAO,GACxBuE,MAAMjM,MAAMiI,KAAKtc,KAAK,MAASkf,KAGnC,SAASqB,cAAcH,UACnB,GAAuB,IAAnBA,SAAS1d,OACT,OAAO,EAEXyd,uBAAuB,gEAAkE3D,mBAAmB4D,WAGhH,SAASI,UAAUN,YAAaO,aAC5B,IAAIze,MAAQ,EACR0e,WAAa,GAOjB,GANArB,UACAF,QAAU,EACVC,QAAUqB,YACLvB,IAAIS,SACLpoB,EAAE,SAAS,GAAGgB,MAAQ,IAEtB2mB,IAAIa,OAKJ,KAJAW,WAAaR,YAAY/mB,MAAM,eAChBpC,OAAS,GAAkD,KAA7C2pB,WAAWA,WAAW3pB,OAAS,GAAG2L,QAC3Dge,WAAW9jB,QAAQ,EAAG,GAErBoF,MAAQ,EAAGA,MAAQ0e,WAAW3pB,OAAQiL,OAAS,EACvB,IAArB0e,WAAW1e,SAGX0e,WAAW1e,OAAO2D,WAAW,SAG7B+a,WAAW1e,OAAO2D,WAAW,SAG7B+a,WAAW1e,OAAO2D,WAAW,MAC7B+a,WAAW1e,OAAS,QAAU0e,WAAW1e,OAEzC0e,WAAW1e,OAAS0e,WAAW1e,OAAS,UAAY0e,WAAW1e,SAK3E,GADAkd,IAAIjV,IAAMyW,WAAW3pB,OACjBmoB,IAAIa,QAAUW,WAAW3pB,OAAS,EAGlC,IAFAwpB,cAAcG,WAAW,IACzBxB,IAAIS,QAAS,EACR3d,MAAQ,EAAGA,MAAQ0e,WAAW3pB,OAAQiL,OAAS,EACf,KAA7B0e,WAAW1e,OAAOU,QAGtB6d,cAAcG,WAAW1e,aAG7Bse,MAAMJ,YAAahB,KAI3B,SAASoB,MAAMJ,YAAahB,KACxB,IAAIld,MAAO2e,OAAQC,eACfC,WAAa,GACbC,WAAa5B,IAAIe,QACjBc,aAA2C,EAA5BxpB,EAAE,eAAe,GAAGgB,OAAa,EAChDwoB,aAAe,IACfA,aAAe,GAEnB,IAAIC,cAAgB/B,IAAIlD,IAEpBkF,YADAJ,WAAaX,YAAYrD,MAAMmE,gBAAkB,GACpCzpB,EAAE,cAAc,GAAGgB,MAAMY,MAAM,SAIhD,GAHA8nB,WAAaxkB,EAAEykB,OAAOD,WAAY,SAAUjqB,GACxC,OAAOA,EAAE0L,OAAO3L,OAAS,IAEzBmoB,IAAI9X,OAAS8X,IAAIQ,SAAS3oB,OAAS,EACnC,GAAKmoB,IAAII,QAIF,CACH0B,cAAgB,KAChB,IACIA,cAAgB,IAAI5c,OAAO8a,IAAIQ,SAAU,KAC3C,MAAO7jB,IAELglB,WADAG,cACavkB,EAAE0kB,OAAON,WAAY,SAAUT,UACxC,OAAQY,cAAc1hB,KAAK8gB,YAGlB3jB,EAAE0kB,OAAON,WAAY,SAAUT,UACxC,OAA6E,GAAtEA,SAASljB,cAAc1D,QAAQ0lB,IAAIQ,SAAShd,OAAOxF,sBAdlE2jB,WAAapkB,EAAE0kB,OAAON,WAAY,SAAUT,UACxC,OAA6E,GAAtEA,SAASljB,cAAc1D,QAAQ0lB,IAAIQ,SAAShd,OAAOxF,iBAkBlEgiB,IAAIK,SAEAsB,WAAapkB,EAAE0kB,OAAON,WAAY,SAAUT,UACxC,OAAIlB,IAAIM,cACG/iB,EAAEsW,MAAMkO,WAAY,SAAU5M,OACjC,OAAsE,GAA/D+L,SAASljB,cAAc1D,QAAQ6a,MAAM3R,OAAOxF,iBAGhDT,EAAE2kB,IAAIH,WAAY,SAAU5M,OAC/B,OAAO+L,SAASljB,cAAc1D,QAAQ6a,MAAM3R,OAAOxF,gBAAkB,OAMrFgiB,IAAIY,SACJe,WAAaA,WAAW9U,QAExBmT,IAAIW,MACJgB,WAAapkB,EAAE4kB,KAAKR,YAAY,IAEpC,IAAIS,WAAa,GACjB,GAAIpC,IAAIrP,KAAOkR,aAAe,GAA6B,KAAxBxpB,EAAE,SAAS,GAAGgB,MAAc,CAE3D,IADA+oB,WAAWrqB,KAAK6pB,WAAa,KACxB9e,MAAQ,EAAGA,OAAS+e,aAAc/e,OAAS,EAC5Csf,WAAWrqB,KAAK6pB,WAAa9e,OAEjC8e,WAAaQ,WAAWthB,KAAKkf,IAAIrY,WASrC,IAPIqY,IAAIrP,KAA+B,KAAxBtY,EAAE,SAAS,GAAGgB,QACzBhB,EAAE,SAAS,GAAGgB,MAAQuoB,WAClB5B,IAAIa,QAA0B,GAAhBgB,eACdxpB,EAAE,SAAS,GAAGgB,OAAS2mB,IAAIrY,UAAY,WAE3CtP,EAAE,SAAS,GAAGgB,OAAS,MAEtByJ,MAAQ,EAAGA,MAAQ6e,WAAW9pB,QAAS,CACxC,IAAK4pB,OAAS,EAAGA,OAASI,aAAcJ,QAAU,EAAG3e,OAAS,EACtDA,MAAQ6e,WAAW9pB,SACnB6pB,eAAiBC,WAAW7e,OACxBkd,IAAIO,SACJmB,eAAiB,YAAeA,eAAiB,KAAQA,eAAiB,QAE1E1B,IAAIU,WACJgB,eAAiBA,eAAepc,MAAM0a,IAAIrY,YAE9CtP,EAAE,SAAS,GAAGgB,OAASqoB,gBAEvBD,OAASI,aAAe,IACxBxpB,EAAE,SAAS,GAAGgB,OAAS2mB,IAAIrY,WAG/BqY,IAAIa,QAA0B,GAAhBgB,cAAqB7B,IAAIc,iBACvCzoB,EAAE,SAAS,GAAGgB,OAAS2mB,IAAIrY,WAAaqY,IAAInD,KAAO,KAEvDxkB,EAAE,SAAS,GAAGgB,OAAS,KAEvB2mB,IAAIa,SACJZ,SAAW,GAEXC,WAAaF,IAAIa,QAAUZ,SAAWD,IAAIjV,MAC1CkT,UAAU,QAAQ","sourcesContent":["/*\r\n    json2.js\r\n    2013-05-26\r\n\r\n    Public Domain.\r\n\r\n    NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\r\n\r\n    See http://www.JSON.org/js.html\r\n\r\n\r\n    This code should be minified before deployment.\r\n    See http://javascript.crockford.com/jsmin.html\r\n\r\n    USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\r\n    NOT CONTROL.\r\n\r\n\r\n    This file creates a global JSON object containing two methods: stringify\r\n    and parse.\r\n\r\n        JSON.stringify(value, replacer, space)\r\n            value       any JavaScript value, usually an object or array.\r\n\r\n            replacer    an optional parameter that determines how object\r\n                        values are stringified for objects. It can be a\r\n                        function or an array of strings.\r\n\r\n            space       an optional parameter that specifies the indentation\r\n                        of nested structures. If it is omitted, the text will\r\n                        be packed without extra whitespace. If it is a number,\r\n                        it will specify the number of spaces to indent at each\r\n                        level. If it is a string (such as '\\t' or '&nbsp;'),\r\n                        it contains the characters used to indent at each level.\r\n\r\n            This method produces a JSON text from a JavaScript value.\r\n\r\n            When an object value is found, if the object contains a toJSON\r\n            method, its toJSON method will be called and the result will be\r\n            stringified. A toJSON method does not serialize: it returns the\r\n            value represented by the name/value pair that should be serialized,\r\n            or undefined if nothing should be serialized. The toJSON method\r\n            will be passed the key associated with the value, and this will be\r\n            bound to the value\r\n\r\n            For example, this would serialize Dates as ISO strings.\r\n\r\n                Date.prototype.toJSON = function (key) {\r\n                    function f(n) {\r\n                        // Format integers to have at least two digits.\r\n                        return n < 10 ? '0' + n : n;\r\n                    }\r\n\r\n                    return this.getUTCFullYear()   + '-' +\r\n                         f(this.getUTCMonth() + 1) + '-' +\r\n                         f(this.getUTCDate())      + 'T' +\r\n                         f(this.getUTCHours())     + ':' +\r\n                         f(this.getUTCMinutes())   + ':' +\r\n                         f(this.getUTCSeconds())   + 'Z';\r\n                };\r\n\r\n            You can provide an optional replacer method. It will be passed the\r\n            key and value of each member, with this bound to the containing\r\n            object. The value that is returned from your method will be\r\n            serialized. If your method returns undefined, then the member will\r\n            be excluded from the serialization.\r\n\r\n            If the replacer parameter is an array of strings, then it will be\r\n            used to select the members to be serialized. It filters the results\r\n            such that only members with keys listed in the replacer array are\r\n            stringified.\r\n\r\n            Values that do not have JSON representations, such as undefined or\r\n            functions, will not be serialized. Such values in objects will be\r\n            dropped; in arrays they will be replaced with null. You can use\r\n            a replacer function to replace those with JSON values.\r\n            JSON.stringify(undefined) returns undefined.\r\n\r\n            The optional space parameter produces a stringification of the\r\n            value that is filled with line breaks and indentation to make it\r\n            easier to read.\r\n\r\n            If the space parameter is a non-empty string, then that string will\r\n            be used for indentation. If the space parameter is a number, then\r\n            the indentation will be that many spaces.\r\n\r\n            Example:\r\n\r\n            text = JSON.stringify(['e', {pluribus: 'unum'}]);\r\n            // text is '[\"e\",{\"pluribus\":\"unum\"}]'\r\n\r\n\r\n            text = JSON.stringify(['e', {pluribus: 'unum'}], null, '\\t');\r\n            // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\r\n\r\n            text = JSON.stringify([new Date()], function (key, value) {\r\n                return this[key] instanceof Date ?\r\n                    'Date(' + this[key] + ')' : value;\r\n            });\r\n            // text is '[\"Date(---current time---)\"]'\r\n\r\n\r\n        JSON.parse(text, reviver)\r\n            This method parses a JSON text to produce an object or array.\r\n            It can throw a SyntaxError exception.\r\n\r\n            The optional reviver parameter is a function that can filter and\r\n            transform the results. It receives each of the keys and values,\r\n            and its return value is used instead of the original value.\r\n            If it returns what it received, then the structure is not modified.\r\n            If it returns undefined then the member is deleted.\r\n\r\n            Example:\r\n\r\n            // Parse the text. Values that look like ISO date strings will\r\n            // be converted to Date objects.\r\n\r\n            myData = JSON.parse(text, function (key, value) {\r\n                var a;\r\n                if (typeof value === 'string') {\r\n                    a =\r\n/^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\r\n                    if (a) {\r\n                        return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\r\n                            +a[5], +a[6]));\r\n                    }\r\n                }\r\n                return value;\r\n            });\r\n\r\n            myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\r\n                var d;\r\n                if (typeof value === 'string' &&\r\n                        value.slice(0, 5) === 'Date(' &&\r\n                        value.slice(-1) === ')') {\r\n                    d = new Date(value.slice(5, -1));\r\n                    if (d) {\r\n                        return d;\r\n                    }\r\n                }\r\n                return value;\r\n            });\r\n\r\n\r\n    This is a reference implementation. You are free to copy, modify, or\r\n    redistribute.\r\n*/\r\n\r\n/*jslint evil: true, regexp: true */\r\n\r\n/*members \"\", \"\\b\", \"\\t\", \"\\n\", \"\\f\", \"\\r\", \"\\\"\", JSON, \"\\\\\", apply,\r\n    call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\r\n    getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\r\n    lastIndex, length, parse, prototype, push, replace, slice, stringify,\r\n    test, toJSON, toString, valueOf\r\n*/\r\n\r\n\r\n// Create a JSON object only if one does not already exist. We create the\r\n// methods in a closure to avoid creating global variables.\r\n\r\nif (typeof JSON !== 'object') {\r\n    JSON = {};\r\n}\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    function f(n) {\r\n        // Format integers to have at least two digits.\r\n        return n < 10 ? '0' + n : n;\r\n    }\r\n\r\n    if (typeof Date.prototype.toJSON !== 'function') {\r\n\r\n        Date.prototype.toJSON = function () {\r\n\r\n            return isFinite(this.valueOf())\r\n                ? this.getUTCFullYear()     + '-' +\r\n                    f(this.getUTCMonth() + 1) + '-' +\r\n                    f(this.getUTCDate())      + 'T' +\r\n                    f(this.getUTCHours())     + ':' +\r\n                    f(this.getUTCMinutes())   + ':' +\r\n                    f(this.getUTCSeconds())   + 'Z'\r\n                : null;\r\n        };\r\n\r\n        String.prototype.toJSON      =\r\n            Number.prototype.toJSON  =\r\n            Boolean.prototype.toJSON = function () {\r\n                return this.valueOf();\r\n            };\r\n    }\r\n\r\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n        escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\r\n        gap,\r\n        indent,\r\n        meta = {    // table of character substitutions\r\n            '\\b': '\\\\b',\r\n            '\\t': '\\\\t',\r\n            '\\n': '\\\\n',\r\n            '\\f': '\\\\f',\r\n            '\\r': '\\\\r',\r\n            '\"' : '\\\\\"',\r\n            '\\\\': '\\\\\\\\'\r\n        },\r\n        rep;\r\n\r\n\r\n    function quote(string) {\r\n\r\n// If the string contains no control characters, no quote characters, and no\r\n// backslash characters, then we can safely slap some quotes around it.\r\n// Otherwise we must also replace the offending characters with safe escape\r\n// sequences.\r\n\r\n        escapable.lastIndex = 0;\r\n        return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\r\n            var c = meta[a];\r\n            return typeof c === 'string'\r\n                ? c\r\n                : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n        }) + '\"' : '\"' + string + '\"';\r\n    }\r\n\r\n\r\n    function str(key, holder) {\r\n\r\n// Produce a string from holder[key].\r\n\r\n        var i,          // The loop counter.\r\n            k,          // The member key.\r\n            v,          // The member value.\r\n            length,\r\n            mind = gap,\r\n            partial,\r\n            value = holder[key];\r\n\r\n// If the value has a toJSON method, call it to obtain a replacement value.\r\n\r\n        if (value && typeof value === 'object' &&\r\n                typeof value.toJSON === 'function') {\r\n            value = value.toJSON(key);\r\n        }\r\n\r\n// If we were called with a replacer function, then call the replacer to\r\n// obtain a replacement value.\r\n\r\n        if (typeof rep === 'function') {\r\n            value = rep.call(holder, key, value);\r\n        }\r\n\r\n// What happens next depends on the value's type.\r\n\r\n        switch (typeof value) {\r\n        case 'string':\r\n            return quote(value);\r\n\r\n        case 'number':\r\n\r\n// JSON numbers must be finite. Encode non-finite numbers as null.\r\n\r\n            return isFinite(value) ? String(value) : 'null';\r\n\r\n        case 'boolean':\r\n        case 'null':\r\n\r\n// If the value is a boolean or null, convert it to a string. Note:\r\n// typeof null does not produce 'null'. The case is included here in\r\n// the remote chance that this gets fixed someday.\r\n\r\n            return String(value);\r\n\r\n// If the type is 'object', we might be dealing with an object or an array or\r\n// null.\r\n\r\n        case 'object':\r\n\r\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\r\n// so watch out for that case.\r\n\r\n            if (!value) {\r\n                return 'null';\r\n            }\r\n\r\n// Make an array to hold the partial results of stringifying this object value.\r\n\r\n            gap += indent;\r\n            partial = [];\r\n\r\n// Is the value an array?\r\n\r\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\r\n\r\n// The value is an array. Stringify every element. Use null as a placeholder\r\n// for non-JSON values.\r\n\r\n                length = value.length;\r\n                for (i = 0; i < length; i += 1) {\r\n                    partial[i] = str(i, value) || 'null';\r\n                }\r\n\r\n// Join all of the elements together, separated with commas, and wrap them in\r\n// brackets.\r\n\r\n                v = partial.length === 0\r\n                    ? '[]'\r\n                    : gap\r\n                    ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\r\n                    : '[' + partial.join(',') + ']';\r\n                gap = mind;\r\n                return v;\r\n            }\r\n\r\n// If the replacer is an array, use it to select the members to be stringified.\r\n\r\n            if (rep && typeof rep === 'object') {\r\n                length = rep.length;\r\n                for (i = 0; i < length; i += 1) {\r\n                    if (typeof rep[i] === 'string') {\r\n                        k = rep[i];\r\n                        v = str(k, value);\r\n                        if (v) {\r\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n\r\n// Otherwise, iterate through all of the keys in the object.\r\n\r\n                for (k in value) {\r\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                        v = str(k, value);\r\n                        if (v) {\r\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n// Join all of the member texts together, separated with commas,\r\n// and wrap them in braces.\r\n\r\n            v = partial.length === 0\r\n                ? '{}'\r\n                : gap\r\n                ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\r\n                : '{' + partial.join(',') + '}';\r\n            gap = mind;\r\n            return v;\r\n        }\r\n    }\r\n\r\n// If the JSON object does not yet have a stringify method, give it one.\r\n\r\n    if (typeof JSON.stringify !== 'function') {\r\n        JSON.stringify = function (value, replacer, space) {\r\n\r\n// The stringify method takes a value and an optional replacer, and an optional\r\n// space parameter, and returns a JSON text. The replacer can be a function\r\n// that can replace values, or an array of strings that will select the keys.\r\n// A default replacer method can be provided. Use of the space parameter can\r\n// produce text that is more easily readable.\r\n\r\n            var i;\r\n            gap = '';\r\n            indent = '';\r\n\r\n// If the space parameter is a number, make an indent string containing that\r\n// many spaces.\r\n\r\n            if (typeof space === 'number') {\r\n                for (i = 0; i < space; i += 1) {\r\n                    indent += ' ';\r\n                }\r\n\r\n// If the space parameter is a string, it will be used as the indent string.\r\n\r\n            } else if (typeof space === 'string') {\r\n                indent = space;\r\n            }\r\n\r\n// If there is a replacer, it must be a function or an array.\r\n// Otherwise, throw an error.\r\n\r\n            rep = replacer;\r\n            if (replacer && typeof replacer !== 'function' &&\r\n                    (typeof replacer !== 'object' ||\r\n                    typeof replacer.length !== 'number')) {\r\n                throw new Error('JSON.stringify');\r\n            }\r\n\r\n// Make a fake root object containing our value under the key of ''.\r\n// Return the result of stringifying the value.\r\n\r\n            return str('', {'': value});\r\n        };\r\n    }\r\n\r\n\r\n// If the JSON object does not yet have a parse method, give it one.\r\n\r\n    if (typeof JSON.parse !== 'function') {\r\n        JSON.parse = function (text, reviver) {\r\n\r\n// The parse method takes a text and an optional reviver function, and returns\r\n// a JavaScript value if the text is a valid JSON text.\r\n\r\n            var j;\r\n\r\n            function walk(holder, key) {\r\n\r\n// The walk method is used to recursively walk the resulting structure so\r\n// that modifications can be made.\r\n\r\n                var k, v, value = holder[key];\r\n                if (value && typeof value === 'object') {\r\n                    for (k in value) {\r\n                        if (Object.prototype.hasOwnProperty.call(value, k)) {\r\n                            v = walk(value, k);\r\n                            if (v !== undefined) {\r\n                                value[k] = v;\r\n                            } else {\r\n                                delete value[k];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                return reviver.call(holder, key, value);\r\n            }\r\n\r\n\r\n// Parsing happens in four stages. In the first stage, we replace certain\r\n// Unicode characters with escape sequences. JavaScript handles many characters\r\n// incorrectly, either silently deleting them, or treating them as line endings.\r\n\r\n            text = String(text);\r\n            cx.lastIndex = 0;\r\n            if (cx.test(text)) {\r\n                text = text.replace(cx, function (a) {\r\n                    return '\\\\u' +\r\n                        ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\r\n                });\r\n            }\r\n\r\n// In the second stage, we run the text against regular expressions that look\r\n// for non-JSON patterns. We are especially concerned with '()' and 'new'\r\n// because they can cause invocation, and '=' because it can cause mutation.\r\n// But just to be safe, we want to reject all unexpected forms.\r\n\r\n// We split the second stage into 4 regexp operations in order to work around\r\n// crippling inefficiencies in IE's and Safari's regexp engines. First we\r\n// replace the JSON backslash pairs with '@' (a non-JSON character). Second, we\r\n// replace all simple value tokens with ']' characters. Third, we delete all\r\n// open brackets that follow a colon or comma or that begin the text. Finally,\r\n// we look to see that the remaining characters are only whitespace or ']' or\r\n// ',' or ':' or '{' or '}'. If that is so, then the text is safe for eval.\r\n\r\n            if (/^[\\],:{}\\s]*$/\r\n                    .test(text.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@')\r\n                        .replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']')\r\n                        .replace(/(?:^|:|,)(?:\\s*\\[)+/g, ''))) {\r\n\r\n// In the third stage we use the eval function to compile the text into a\r\n// JavaScript structure. The '{' operator is subject to a syntactic ambiguity\r\n// in JavaScript: it can begin a block or an object literal. We wrap the text\r\n// in parens to eliminate the ambiguity.\r\n\r\n                j = eval('(' + text + ')');\r\n\r\n// In the optional fourth stage, we recursively walk the new structure, passing\r\n// each name/value pair to a reviver function for possible transformation.\r\n\r\n                return typeof reviver === 'function'\r\n                    ? walk({'': j}, '')\r\n                    : j;\r\n            }\r\n\r\n// If the text is not JSON parseable, then a SyntaxError is thrown.\r\n\r\n            throw new SyntaxError('JSON.parse');\r\n        };\r\n    }\r\n}());\r\n\r\nJSON.unflatten = function(data) {\r\n    \"use strict\";\r\n    if (Object(data) !== data || Array.isArray(data))\r\n        return data;\r\n    var result = {}, cur, prop, idx, last, temp;\r\n    for(var p in data) {\r\n        cur = result, prop = \"\", last = 0;\r\n        do {\r\n            idx = p.indexOf(\"/\", last);\r\n            temp = p.substring(last, idx !== -1 ? idx : undefined);\r\n            cur = cur[prop] || (cur[prop] = (!isNaN(parseInt(temp)) ? [] : {}));\r\n            prop = temp;\r\n            last = idx + 1;\r\n        } while(idx >= 0);\r\n        cur[prop] = data[p];\r\n    }\r\n    return result[\"\"];\r\n}\r\nJSON.flatten = function(data) {\r\n    var result = {};\r\n    function recurse (cur, prop) {\r\n        if (Object(cur) !== cur) {\r\n            result[prop] = cur;\r\n        } else if (Array.isArray(cur)) {\r\n             for(var i=0, l=cur.length; i<l; i++)\r\n                 recurse(cur[i], prop ? prop+\"/\"+i : \"\"+i);\r\n            if (l == 0)\r\n                result[prop] = [];\r\n        } else {\r\n            var isEmpty = true;\r\n            for (var p in cur) {\r\n                isEmpty = false;\r\n                recurse(cur[p], prop ? prop+\"/\"+p : p);\r\n            }\r\n            if (isEmpty)\r\n                result[prop] = {};\r\n        }\r\n    }\r\n    recurse(data, \"\");\r\n    return result;\r\n}\r\nJSON.valueArray = function(data) {\r\n    var result = \"\";\r\n    function recurse (cur, prop) {\r\n        if (Object(cur) !== cur) {\r\n            result+= cur + \"|\";\r\n        } else if (Array.isArray(cur)) {\r\n             for(var i=0, l=cur.length; i<l; i++)\r\n                 recurse(cur[i], prop ? prop+\"/\"+i : \"\"+i);\r\n            if (l == 0)\r\n                result += \"|\";\r\n        } else {\r\n            var isEmpty = true;\r\n            for (var p in cur) {\r\n                isEmpty = false;\r\n                recurse(cur[p], prop ? prop+\"/\"+p : p);\r\n            }\r\n            if (isEmpty)\r\n                result += \"|\";\r\n        }\r\n    }\r\n    recurse(data, \"\");\r\n    return result;\r\n}\r\n\r\nif (!Object.prototype.size)\r\n{\r\n    Object.size = function(obj) {\r\n        var size = 0, key;\r\n        for (key in obj) {\r\n            if (obj.hasOwnProperty(key)) size++;\r\n        }\r\n        return size;\r\n    }\r\n}\r\n\r\nfunction isNull(o) {\r\n   return o===null || o===undefined;\r\n}\r\n\r\nJSON.stringifyOnce = function(obj, replacer, indent){\r\n    var printedObjects = [];\r\n    var printedObjectKeys = [];\r\n\r\n    function printOnceReplacer(key, value){\r\n        if ( printedObjects.length > 2000){ // browsers will not print more than 20K, I don't see the point to allow 2K.. algorithm will not be fast anyway if we have too many objects\r\n        return 'object too long';\r\n        }\r\n        var printedObjIndex = false;\r\n        printedObjects.forEach(function(obj, index){\r\n            if(obj===value){\r\n                printedObjIndex = index;\r\n            }\r\n        });\r\n\r\n        if ( key == ''){ //root element\r\n             printedObjects.push(obj);\r\n            printedObjectKeys.push(\"root\");\r\n             return value;\r\n        }\r\n\r\n        else if(printedObjIndex+\"\" != \"false\" && typeof(value)==\"object\"){\r\n            if ( printedObjectKeys[printedObjIndex] == \"root\"){\r\n                return \"(pointer to root)\";\r\n            }else{\r\n                return \"(see \" + ((!!value && !!value.constructor) ? value.constructor.name.toLowerCase()  : typeof(value)) + \" with key \" + printedObjectKeys[printedObjIndex] + \")\";\r\n            }\r\n        }else{\r\n\r\n            var qualifiedKey = key || \"(empty key)\";\r\n            printedObjects.push(value);\r\n            printedObjectKeys.push(qualifiedKey);\r\n            if(replacer){\r\n                return replacer(key, value);\r\n            }else{\r\n                return value;\r\n            }\r\n        }\r\n    }\r\n    return JSON.stringify(obj, printOnceReplacer, indent);\r\n};\r\n\r\nfunction objTransform(o) {\r\n    var j = 0;\r\n    var k = 0;\r\n    var v = \"\";\r\n    var obj = {};\r\n    var maxsize = 0;\r\n    propList = Object.keys(o);\r\n    for (j = 0; j < propList.length; j++) {\r\n        if ((o[propList[j]].length) > maxsize) { maxsize = o[propList[j]].length; }\r\n    }\r\n\r\n    var a = [];\r\n    for (j = 0; j < maxsize; j++) {\r\n        obj = {};\r\n        for (k = 0; k < propList.length; k++) {\r\n            obj[propList[k]] = o[propList[k]][j];\r\n        }\r\n\r\n        a.push(obj);\r\n    }\r\n    return a;\r\n}\n// Portions found here and there\r\n\r\n//pads left to length\r\nString.prototype.lpad = function (length, pad) {\r\n    if (typeof (pad) == \"undefined\") { var pad = ' '; }\r\n    var str = this;\r\n    while (str.length < length)\r\n        str = pad + str;\r\n    return str;\r\n}\r\n//Zero pad a numeric string\r\nString.prototype.zeroPad = function (length) {\r\n    var pad = '0';\r\n    var str = this;\r\n    var negative = false;\r\n    if (isNaN(str)) return str;\r\n    if (str.length > length) return str.toString();\r\n    if (str < 0) negative = true;\r\n    if (!negative) {\r\n        str = str.lpad(length, pad);\r\n    }\r\n    else {\r\n        str = str.substring(1).lpad(length, pad);\r\n        if (str.charAt(0) == pad) str = '-' + str.substring(1);\r\n    }\r\n    return str;\r\n}\r\n//pads right to length\r\nString.prototype.rpad = function (length, pad, truncate) {\r\n    if (typeof (pad) == \"undefined\" || pad === '') { var pad = ' '; }\r\n    var str = this;\r\n    if (str.length >= length && truncate === false) return str;\r\n    return (str + pad.repeat(length)).substring(0, length);\r\n    //while (str.length < length)\r\n    //    str += pad;\r\n    //return str;\r\n}\r\n// trim\r\nif (typeof String.prototype.trim !== 'function') {\r\n    String.prototype.trim = function () {\r\n        //return this.replace(/^\\s+|\\s+$/g, ''); \r\n        return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n    }\r\n}\r\n\r\nString.prototype.ltrim = function () { return this.replace(/^\\s+/, ''); };\r\nString.prototype.rtrim = function () { return this.replace(/\\s+$/g, ''); };\r\nString.prototype.crunch = function () { return this.replace(/\\s{2,}/g, ' '); };\r\n\r\n// repeat string\r\nif (typeof String.prototype.repeat !== 'function') {\r\n    String.prototype.repeat = function (n) {\r\n        n = n || 1;\r\n        return Array(n + 1).join(this);\r\n    }\r\n}\r\nString.prototype.ljust = function (width, pad) {\r\n    pad = pad || \" \";\r\n    pad = pad.substr(0, 1);\r\n    if (this.length < width)\r\n        return this + pad.repeat(width - this.length);\r\n    else\r\n        return this;\r\n}\r\nString.prototype.rjust = function (width, pad) {\r\n    pad = pad || \" \";\r\n    pad = pad.substr(0, 1);\r\n    if (this.length < width)\r\n        return pad.repeat(width - this.length) + this;\r\n    else\r\n        return this;\r\n}\r\n\r\nString.prototype.cjust = function (width, pad) {\r\n    pad = pad || \" \";\r\n    pad = pad.substr(0, 1);\r\n    if (this.length < width - 1) {\r\n        var len = width - this.length;\r\n        var remain = (len % 2 == 0) ? \"\" : pad;\r\n        var pads = pad.repeat(Math.floor(len / 2));\r\n        return pads + this + pads + remain;\r\n    }\r\n    else\r\n        return this.rpad(width);\r\n}\r\nif (typeof String.prototype.capitalize !== 'function') {\r\n    String.prototype.capitalize = function () {\r\n        return this.replace(/(?:^|\\s)\\S/g, function (a) { return a.toUpperCase(); });\r\n    };\r\n}\r\nif (typeof String.prototype.toProperCase !== 'function') {\r\n    String.prototype.toProperCase = function () {\r\n        return this.replace(/\\w\\S*/g, function (txt) { return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase(); });\r\n    };\r\n}\r\n\r\nif (typeof String.prototype.left !== 'function') {\r\n    String.prototype.left = function (n) { return this.substring(0, n); }    // return left side of string\r\n}\r\nif (typeof String.prototype.right !== 'function') {\r\n    String.prototype.right = function (n) { return this.substring(this.length - n); }    // return right side of string\r\n}\r\n\r\n\r\nString.prototype.removePunctuation = function () {\r\n    return this.replace(/[@+<>\"'?\\.,-\\/#!$%\\^&\\*;:{}=\\-_`~()\\[\\]\\\\\\|]/g, \"\");\r\n};\r\n\r\nif (typeof String.prototype.hashCode !== 'function') {\r\n    String.prototype.hashCode = function () {\r\n        var hash = 0, i, chr;\r\n        if (this.length === 0) return hash;\r\n        for (i = 0; i < this.length; i++) {\r\n            chr = this.charCodeAt(i);\r\n            hash = ((hash << 5) - hash) + chr;\r\n            hash |= 0; // Convert to 32bit integer\r\n        }\r\n        return hash;\r\n    }\r\n}\r\n\r\n// enclose(by,escape)\r\nif (typeof String.prototype.enclose !== 'function') {\r\n    String.prototype.enclose = function (byChar, escapeByCharWith) {\r\n        if (typeof byChar === \"undefined\") byChar = '';\r\n        if (typeof escapeByCharWith === \"undefined\") escapeByCharWith = '';\r\n        if (escapeByCharWith != '') {\r\n            var re = new RegExp(byChar.regExpEscape(byChar), \"gmi\");\r\n            return byChar + this.replace(re, escapeByCharWith + byChar) + byChar;\r\n        }\r\n        return byChar + this + byChar;\r\n    }\r\n}\r\nString.prototype.toHtml = function () {\r\n    return this.replace(/&/g, '&amp;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&#39;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;')\r\n        ;\r\n\r\n}\r\nString.prototype.toXml = function () {\r\n    return this.replace(/&/g, '&amp;')\r\n        .replace(/\"/g, '&quot;')\r\n        .replace(/'/g, '&apos;')\r\n        .replace(/</g, '&lt;')\r\n        .replace(/>/g, '&gt;');\r\n\r\n}\r\nString.prototype.toCsv = function (sepChar, quoteChar, escapeChar, forceEnclose) {\r\n    if (typeof sepChar === \"undefined\") sepChar = \",\";\r\n    if (typeof quoteChar === \"undefined\") quoteChar = '\"';\r\n    if (typeof escapeChar === \"undefined\") escapeChar = quoteChar;\r\n    if (typeof forceEnclose === \"undefined\") forceEnclose = false;\r\n    var encloseit = (this.indexOf(quoteChar) >= 0) || (this.indexOf(sepChar) >= 0) || (this.indexOf('\\r') >= 0) || (this.indexOf('\\n') >= 0);\r\n    if (forceEnclose) encloseit = true;\r\n    return encloseit ? this.enclose(quoteChar, escapeChar) : this;\r\n};\r\n\r\nif (typeof String.prototype.isNumeric !== 'function') {\r\n    String.prototype.isNumeric = function () {\r\n        return !isNaN(parseFloat(this)) && isFinite(this);\r\n    }\r\n}\r\n//convert string to number maybe   TODO Euro support\r\nString.prototype.toNumber = function () {\r\n    var str = this.replace(/[^\\d.\\-\\+eE]/g, \"\");\r\n    if (str.length > 0 && !isNaN(str))\r\n        str = (str * 1);\r\n    return str;\r\n}\r\nString.prototype.toInteger = function () {\r\n    return parseInt(this.toNumber().toString(), 10);\r\n};\r\n\r\n//convert string to number, run toFixed, and return to string\r\nString.prototype.toFixed = function (dec) {\r\n    var str = this.toNumber().toString();\r\n    if (str.length > 0 && !isNaN(str))\r\n        str = (str * 1).toFixed(dec);\r\n    return String(str);\r\n}\r\n//convert string to dollar string with formatting\r\nString.prototype.toDollar = function (dec, dollarsymbol) {\r\n    var str = this.toNumber().toString();\r\n    if (typeof dec === 'undefined') dec = 2;\r\n    if (typeof dollarsymbol === 'undefined') dollarsymbol = '$';\r\n    if (str.length > 0 && !isNaN(str)) {\r\n        var x, x1, x2, re;\r\n        x = ((1 * str).toFixed(dec)).split('.'); // TODO Euro support\r\n        x1 = x[0];\r\n        if (x.length > 1) x2 = '.' + x[1];  // TODO Euro support\r\n        else x2 = \"\";\r\n        var re = /(\\d+)(\\d{3})/;\r\n        while (re.test(x1)) x1 = x1.replace(re, '$1' + ',' + '$2');\r\n        str = dollarsymbol + x1 + x2;\r\n    }\r\n    return String(str);\r\n}\r\nString.prototype.toJson = function () {\r\n    // check for a bug when replacing \"\\t in string\r\n    return this.replace(/\\\\/g, \"\\\\\\\\\")  // backslash\r\n        .replace(/\\t/g, \"\\\\t\")    // tab\r\n        .replace(/\\\"/g, \"\\\\\\\"\")  // double quote\r\n        .replace(/\\n/g, \"\\\\n\")   // linefeed\r\n        .replace(/\\r/g, \"\\\\r\")   // carriage return\r\n        ;\r\n\r\n}\r\nString.prototype.toSql = function (wrap) {\r\n    return (wrap ? \"'\" : \"\") + this.replace(/'/g, \"''\") + (wrap ? \"'\" : \"\");   // escape single quote to 2 single quotes\r\n}\r\nString.prototype.toYaml = function () {\r\n    var escapeThese = /[\\r\\n\\f\\v\\t]/g;\r\n    if (escapeThese.test(this)) {\r\n        return '\"' +\r\n            this.replace(/\\t/g, \"\\\\t\")    // tab\r\n                .replace(/\\\"/g, \"\\\\\\\"\")  // double quote\r\n                .replace(/\\n/g, \"\\\\n\")   // linefeed\r\n                .replace(/\\r/g, \"\\\\r\")   // carriage return\r\n                .replace(/\\f/g, \"\\\\f\")   // form feed\r\n                .replace(/\\v/g, \"\\\\v\")  // vertical feed\r\n                .replace(/\"/g, '\\\\\"') + '\"';\r\n    }\r\n    else if (this.indexOf(\"'\") >= 0) {\r\n        return \"'\" + this.replace(/'/g, \"''\") + \"'\";\r\n    }\r\n    else {\r\n        return this;\r\n    }\r\n\r\n}\r\nString.prototype.regExpEscape = function (text) {\r\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n};\r\nif (typeof RegExp.prototype.escape !== 'function') {\r\n    RegExp.prototype.escape = function (text) {\r\n        return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\r\n    };\r\n}\r\nfunction selectDivText(element) {\r\n    var doc = document;\r\n    var text = $(element)[0];\r\n    if (doc.body.createTextRange) {\r\n        var range = document.body.createTextRange();\r\n        range.moveToElementText(text);\r\n        range.select();\r\n    } else if (window.getSelection) {\r\n        var selection = window.getSelection();\r\n        if (selection.selectAllChildren) {\r\n            selection.selectAllChildren(text);\r\n        } else {\r\n            var range = document.createRange();\r\n            range.selectNodeContents(text);\r\n            selection.removeAllRanges();\r\n            selection.addRange(range);\r\n        }\r\n    }\r\n}\r\n// cookie stuff\r\nfunction createCookie(name, value, days) {\r\n    if (days) {\r\n        var date = new Date();\r\n        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\r\n        var expires = \"; expires=\" + date.toGMTString();\r\n    }\r\n    else {\r\n        var expires = \"\";\r\n        document.cookie = name + \"=\" + value + expires + \"; path=/\";\r\n    }\r\n}\r\n\r\nfunction readCookie(name) {\r\n    var nameEQ = name + \"=\";\r\n    var ca = document.cookie.split(';');\r\n    for (var i = 0; i < ca.length; i++) {\r\n        var c = ca[i];\r\n        while (c.charAt(0) == ' ') c = c.substring(1, c.length);\r\n        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction eraseCookie(name) {\r\n    createCookie(name, \"\", -1);\r\n}\r\n\r\nif (typeof String.prototype.startsWith != 'function') {\r\n    String.prototype.startsWith = function (str) {\r\n        return this.slice(0, str.length) == str;\r\n    };\r\n}\r\n\r\nif (typeof String.prototype.endsWith != 'function') {\r\n    String.prototype.endsWith = function (str) {\r\n        return this.slice(-str.length) == str;\r\n    };\r\n}\r\n\r\nfunction getOrdinal(n) {\r\n    if ((parseFloat(n) == parseInt(n)) && !isNaN(n)) {\r\n        var s = [\"th\", \"st\", \"nd\", \"rd\"],\r\n            v = n % 100;\r\n        return n + (s[(v - 20) % 10] || s[v] || s[0]);\r\n    }\r\n    return n;\r\n}\r\nif (typeof String.prototype.removeDiacritics != 'function') {\r\n    String.prototype.removeDiacritics = function () {\r\n        var defaultDiacriticsRemovalMap = [\r\n            { 'base': 'A', 'letters': /[\\u0041\\u24B6\\uFF21\\u00C0\\u00C1\\u00C2\\u1EA6\\u1EA4\\u1EAA\\u1EA8\\u00C3\\u0100\\u0102\\u1EB0\\u1EAE\\u1EB4\\u1EB2\\u0226\\u01E0\\u00C4\\u01DE\\u1EA2\\u00C5\\u01FA\\u01CD\\u0200\\u0202\\u1EA0\\u1EAC\\u1EB6\\u1E00\\u0104\\u023A\\u2C6F]/g },\r\n            { 'base': 'AA', 'letters': /[\\uA732]/g },\r\n            { 'base': 'AE', 'letters': /[\\u00C6\\u01FC\\u01E2]/g },\r\n            { 'base': 'AO', 'letters': /[\\uA734]/g },\r\n            { 'base': 'AU', 'letters': /[\\uA736]/g },\r\n            { 'base': 'AV', 'letters': /[\\uA738\\uA73A]/g },\r\n            { 'base': 'AY', 'letters': /[\\uA73C]/g },\r\n            { 'base': 'B', 'letters': /[\\u0042\\u24B7\\uFF22\\u1E02\\u1E04\\u1E06\\u0243\\u0182\\u0181]/g },\r\n            { 'base': 'C', 'letters': /[\\u0043\\u24B8\\uFF23\\u0106\\u0108\\u010A\\u010C\\u00C7\\u1E08\\u0187\\u023B\\uA73E]/g },\r\n            { 'base': 'D', 'letters': /[\\u0044\\u24B9\\uFF24\\u1E0A\\u010E\\u1E0C\\u1E10\\u1E12\\u1E0E\\u0110\\u018B\\u018A\\u0189\\uA779]/g },\r\n            { 'base': 'DZ', 'letters': /[\\u01F1\\u01C4]/g },\r\n            { 'base': 'Dz', 'letters': /[\\u01F2\\u01C5]/g },\r\n            { 'base': 'E', 'letters': /[\\u0045\\u24BA\\uFF25\\u00C8\\u00C9\\u00CA\\u1EC0\\u1EBE\\u1EC4\\u1EC2\\u1EBC\\u0112\\u1E14\\u1E16\\u0114\\u0116\\u00CB\\u1EBA\\u011A\\u0204\\u0206\\u1EB8\\u1EC6\\u0228\\u1E1C\\u0118\\u1E18\\u1E1A\\u0190\\u018E]/g },\r\n            { 'base': 'F', 'letters': /[\\u0046\\u24BB\\uFF26\\u1E1E\\u0191\\uA77B]/g },\r\n            { 'base': 'G', 'letters': /[\\u0047\\u24BC\\uFF27\\u01F4\\u011C\\u1E20\\u011E\\u0120\\u01E6\\u0122\\u01E4\\u0193\\uA7A0\\uA77D\\uA77E]/g },\r\n            { 'base': 'H', 'letters': /[\\u0048\\u24BD\\uFF28\\u0124\\u1E22\\u1E26\\u021E\\u1E24\\u1E28\\u1E2A\\u0126\\u2C67\\u2C75\\uA78D]/g },\r\n            { 'base': 'I', 'letters': /[\\u0049\\u24BE\\uFF29\\u00CC\\u00CD\\u00CE\\u0128\\u012A\\u012C\\u0130\\u00CF\\u1E2E\\u1EC8\\u01CF\\u0208\\u020A\\u1ECA\\u012E\\u1E2C\\u0197]/g },\r\n            { 'base': 'J', 'letters': /[\\u004A\\u24BF\\uFF2A\\u0134\\u0248]/g },\r\n            { 'base': 'K', 'letters': /[\\u004B\\u24C0\\uFF2B\\u1E30\\u01E8\\u1E32\\u0136\\u1E34\\u0198\\u2C69\\uA740\\uA742\\uA744\\uA7A2]/g },\r\n            { 'base': 'L', 'letters': /[\\u004C\\u24C1\\uFF2C\\u013F\\u0139\\u013D\\u1E36\\u1E38\\u013B\\u1E3C\\u1E3A\\u0141\\u023D\\u2C62\\u2C60\\uA748\\uA746\\uA780]/g },\r\n            { 'base': 'LJ', 'letters': /[\\u01C7]/g },\r\n            { 'base': 'Lj', 'letters': /[\\u01C8]/g },\r\n            { 'base': 'M', 'letters': /[\\u004D\\u24C2\\uFF2D\\u1E3E\\u1E40\\u1E42\\u2C6E\\u019C]/g },\r\n            { 'base': 'N', 'letters': /[\\u004E\\u24C3\\uFF2E\\u01F8\\u0143\\u00D1\\u1E44\\u0147\\u1E46\\u0145\\u1E4A\\u1E48\\u0220\\u019D\\uA790\\uA7A4]/g },\r\n            { 'base': 'NJ', 'letters': /[\\u01CA]/g },\r\n            { 'base': 'Nj', 'letters': /[\\u01CB]/g },\r\n            { 'base': 'O', 'letters': /[\\u004F\\u24C4\\uFF2F\\u00D2\\u00D3\\u00D4\\u1ED2\\u1ED0\\u1ED6\\u1ED4\\u00D5\\u1E4C\\u022C\\u1E4E\\u014C\\u1E50\\u1E52\\u014E\\u022E\\u0230\\u00D6\\u022A\\u1ECE\\u0150\\u01D1\\u020C\\u020E\\u01A0\\u1EDC\\u1EDA\\u1EE0\\u1EDE\\u1EE2\\u1ECC\\u1ED8\\u01EA\\u01EC\\u00D8\\u01FE\\u0186\\u019F\\uA74A\\uA74C]/g },\r\n            { 'base': 'OI', 'letters': /[\\u01A2]/g },\r\n            { 'base': 'OO', 'letters': /[\\uA74E]/g },\r\n            { 'base': 'OU', 'letters': /[\\u0222]/g },\r\n            { 'base': 'P', 'letters': /[\\u0050\\u24C5\\uFF30\\u1E54\\u1E56\\u01A4\\u2C63\\uA750\\uA752\\uA754]/g },\r\n            { 'base': 'Q', 'letters': /[\\u0051\\u24C6\\uFF31\\uA756\\uA758\\u024A]/g },\r\n            { 'base': 'R', 'letters': /[\\u0052\\u24C7\\uFF32\\u0154\\u1E58\\u0158\\u0210\\u0212\\u1E5A\\u1E5C\\u0156\\u1E5E\\u024C\\u2C64\\uA75A\\uA7A6\\uA782]/g },\r\n            { 'base': 'S', 'letters': /[\\u0053\\u24C8\\uFF33\\u1E9E\\u015A\\u1E64\\u015C\\u1E60\\u0160\\u1E66\\u1E62\\u1E68\\u0218\\u015E\\u2C7E\\uA7A8\\uA784]/g },\r\n            { 'base': 'T', 'letters': /[\\u0054\\u24C9\\uFF34\\u1E6A\\u0164\\u1E6C\\u021A\\u0162\\u1E70\\u1E6E\\u0166\\u01AC\\u01AE\\u023E\\uA786]/g },\r\n            { 'base': 'TZ', 'letters': /[\\uA728]/g },\r\n            { 'base': 'U', 'letters': /[\\u0055\\u24CA\\uFF35\\u00D9\\u00DA\\u00DB\\u0168\\u1E78\\u016A\\u1E7A\\u016C\\u00DC\\u01DB\\u01D7\\u01D5\\u01D9\\u1EE6\\u016E\\u0170\\u01D3\\u0214\\u0216\\u01AF\\u1EEA\\u1EE8\\u1EEE\\u1EEC\\u1EF0\\u1EE4\\u1E72\\u0172\\u1E76\\u1E74\\u0244]/g },\r\n            { 'base': 'V', 'letters': /[\\u0056\\u24CB\\uFF36\\u1E7C\\u1E7E\\u01B2\\uA75E\\u0245]/g },\r\n            { 'base': 'VY', 'letters': /[\\uA760]/g },\r\n            { 'base': 'W', 'letters': /[\\u0057\\u24CC\\uFF37\\u1E80\\u1E82\\u0174\\u1E86\\u1E84\\u1E88\\u2C72]/g },\r\n            { 'base': 'X', 'letters': /[\\u0058\\u24CD\\uFF38\\u1E8A\\u1E8C]/g },\r\n            { 'base': 'Y', 'letters': /[\\u0059\\u24CE\\uFF39\\u1EF2\\u00DD\\u0176\\u1EF8\\u0232\\u1E8E\\u0178\\u1EF6\\u1EF4\\u01B3\\u024E\\u1EFE]/g },\r\n            { 'base': 'Z', 'letters': /[\\u005A\\u24CF\\uFF3A\\u0179\\u1E90\\u017B\\u017D\\u1E92\\u1E94\\u01B5\\u0224\\u2C7F\\u2C6B\\uA762]/g },\r\n            { 'base': 'a', 'letters': /[\\u0061\\u24D0\\uFF41\\u1E9A\\u00E0\\u00E1\\u00E2\\u1EA7\\u1EA5\\u1EAB\\u1EA9\\u00E3\\u0101\\u0103\\u1EB1\\u1EAF\\u1EB5\\u1EB3\\u0227\\u01E1\\u00E4\\u01DF\\u1EA3\\u00E5\\u01FB\\u01CE\\u0201\\u0203\\u1EA1\\u1EAD\\u1EB7\\u1E01\\u0105\\u2C65\\u0250]/g },\r\n            { 'base': 'aa', 'letters': /[\\uA733]/g },\r\n            { 'base': 'ae', 'letters': /[\\u00E6\\u01FD\\u01E3]/g },\r\n            { 'base': 'ao', 'letters': /[\\uA735]/g },\r\n            { 'base': 'au', 'letters': /[\\uA737]/g },\r\n            { 'base': 'av', 'letters': /[\\uA739\\uA73B]/g },\r\n            { 'base': 'ay', 'letters': /[\\uA73D]/g },\r\n            { 'base': 'b', 'letters': /[\\u0062\\u24D1\\uFF42\\u1E03\\u1E05\\u1E07\\u0180\\u0183\\u0253]/g },\r\n            { 'base': 'c', 'letters': /[\\u0063\\u24D2\\uFF43\\u0107\\u0109\\u010B\\u010D\\u00E7\\u1E09\\u0188\\u023C\\uA73F\\u2184]/g },\r\n            { 'base': 'd', 'letters': /[\\u0064\\u24D3\\uFF44\\u1E0B\\u010F\\u1E0D\\u1E11\\u1E13\\u1E0F\\u0111\\u018C\\u0256\\u0257\\uA77A]/g },\r\n            { 'base': 'dz', 'letters': /[\\u01F3\\u01C6]/g },\r\n            { 'base': 'e', 'letters': /[\\u0065\\u24D4\\uFF45\\u00E8\\u00E9\\u00EA\\u1EC1\\u1EBF\\u1EC5\\u1EC3\\u1EBD\\u0113\\u1E15\\u1E17\\u0115\\u0117\\u00EB\\u1EBB\\u011B\\u0205\\u0207\\u1EB9\\u1EC7\\u0229\\u1E1D\\u0119\\u1E19\\u1E1B\\u0247\\u025B\\u01DD]/g },\r\n            { 'base': 'f', 'letters': /[\\u0066\\u24D5\\uFF46\\u1E1F\\u0192\\uA77C]/g },\r\n            { 'base': 'g', 'letters': /[\\u0067\\u24D6\\uFF47\\u01F5\\u011D\\u1E21\\u011F\\u0121\\u01E7\\u0123\\u01E5\\u0260\\uA7A1\\u1D79\\uA77F]/g },\r\n            { 'base': 'h', 'letters': /[\\u0068\\u24D7\\uFF48\\u0125\\u1E23\\u1E27\\u021F\\u1E25\\u1E29\\u1E2B\\u1E96\\u0127\\u2C68\\u2C76\\u0265]/g },\r\n            { 'base': 'hv', 'letters': /[\\u0195]/g },\r\n            { 'base': 'i', 'letters': /[\\u0069\\u24D8\\uFF49\\u00EC\\u00ED\\u00EE\\u0129\\u012B\\u012D\\u00EF\\u1E2F\\u1EC9\\u01D0\\u0209\\u020B\\u1ECB\\u012F\\u1E2D\\u0268\\u0131]/g },\r\n            { 'base': 'j', 'letters': /[\\u006A\\u24D9\\uFF4A\\u0135\\u01F0\\u0249]/g },\r\n            { 'base': 'k', 'letters': /[\\u006B\\u24DA\\uFF4B\\u1E31\\u01E9\\u1E33\\u0137\\u1E35\\u0199\\u2C6A\\uA741\\uA743\\uA745\\uA7A3]/g },\r\n            { 'base': 'l', 'letters': /[\\u006C\\u24DB\\uFF4C\\u0140\\u013A\\u013E\\u1E37\\u1E39\\u013C\\u1E3D\\u1E3B\\u017F\\u0142\\u019A\\u026B\\u2C61\\uA749\\uA781\\uA747]/g },\r\n            { 'base': 'lj', 'letters': /[\\u01C9]/g },\r\n            { 'base': 'm', 'letters': /[\\u006D\\u24DC\\uFF4D\\u1E3F\\u1E41\\u1E43\\u0271\\u026F]/g },\r\n            { 'base': 'n', 'letters': /[\\u006E\\u24DD\\uFF4E\\u01F9\\u0144\\u00F1\\u1E45\\u0148\\u1E47\\u0146\\u1E4B\\u1E49\\u019E\\u0272\\u0149\\uA791\\uA7A5]/g },\r\n            { 'base': 'nj', 'letters': /[\\u01CC]/g },\r\n            { 'base': 'o', 'letters': /[\\u006F\\u24DE\\uFF4F\\u00F2\\u00F3\\u00F4\\u1ED3\\u1ED1\\u1ED7\\u1ED5\\u00F5\\u1E4D\\u022D\\u1E4F\\u014D\\u1E51\\u1E53\\u014F\\u022F\\u0231\\u00F6\\u022B\\u1ECF\\u0151\\u01D2\\u020D\\u020F\\u01A1\\u1EDD\\u1EDB\\u1EE1\\u1EDF\\u1EE3\\u1ECD\\u1ED9\\u01EB\\u01ED\\u00F8\\u01FF\\u0254\\uA74B\\uA74D\\u0275]/g },\r\n            { 'base': 'oi', 'letters': /[\\u01A3]/g },\r\n            { 'base': 'ou', 'letters': /[\\u0223]/g },\r\n            { 'base': 'oo', 'letters': /[\\uA74F]/g },\r\n            { 'base': 'p', 'letters': /[\\u0070\\u24DF\\uFF50\\u1E55\\u1E57\\u01A5\\u1D7D\\uA751\\uA753\\uA755]/g },\r\n            { 'base': 'q', 'letters': /[\\u0071\\u24E0\\uFF51\\u024B\\uA757\\uA759]/g },\r\n            { 'base': 'r', 'letters': /[\\u0072\\u24E1\\uFF52\\u0155\\u1E59\\u0159\\u0211\\u0213\\u1E5B\\u1E5D\\u0157\\u1E5F\\u024D\\u027D\\uA75B\\uA7A7\\uA783]/g },\r\n            { 'base': 's', 'letters': /[\\u0073\\u24E2\\uFF53\\u00DF\\u015B\\u1E65\\u015D\\u1E61\\u0161\\u1E67\\u1E63\\u1E69\\u0219\\u015F\\u023F\\uA7A9\\uA785\\u1E9B]/g },\r\n            { 'base': 't', 'letters': /[\\u0074\\u24E3\\uFF54\\u1E6B\\u1E97\\u0165\\u1E6D\\u021B\\u0163\\u1E71\\u1E6F\\u0167\\u01AD\\u0288\\u2C66\\uA787]/g },\r\n            { 'base': 'tz', 'letters': /[\\uA729]/g },\r\n            { 'base': 'u', 'letters': /[\\u0075\\u24E4\\uFF55\\u00F9\\u00FA\\u00FB\\u0169\\u1E79\\u016B\\u1E7B\\u016D\\u00FC\\u01DC\\u01D8\\u01D6\\u01DA\\u1EE7\\u016F\\u0171\\u01D4\\u0215\\u0217\\u01B0\\u1EEB\\u1EE9\\u1EEF\\u1EED\\u1EF1\\u1EE5\\u1E73\\u0173\\u1E77\\u1E75\\u0289]/g },\r\n            { 'base': 'v', 'letters': /[\\u0076\\u24E5\\uFF56\\u1E7D\\u1E7F\\u028B\\uA75F\\u028C]/g },\r\n            { 'base': 'vy', 'letters': /[\\uA761]/g },\r\n            { 'base': 'w', 'letters': /[\\u0077\\u24E6\\uFF57\\u1E81\\u1E83\\u0175\\u1E87\\u1E85\\u1E98\\u1E89\\u2C73]/g },\r\n            { 'base': 'x', 'letters': /[\\u0078\\u24E7\\uFF58\\u1E8B\\u1E8D]/g },\r\n            { 'base': 'y', 'letters': /[\\u0079\\u24E8\\uFF59\\u1EF3\\u00FD\\u0177\\u1EF9\\u0233\\u1E8F\\u00FF\\u1EF7\\u1E99\\u1EF5\\u01B4\\u024F\\u1EFF]/g },\r\n            { 'base': 'z', 'letters': /[\\u007A\\u24E9\\uFF5A\\u017A\\u1E91\\u017C\\u017E\\u1E93\\u1E95\\u01B6\\u0225\\u0240\\u2C6C\\uA763]/g },\r\n            { 'base': \"'\", 'letters': /[\\u0060\\u00B4\\u2018\\u2019]/g },\r\n            { 'base': '\"', 'letters': /[\\u201C\\u201D]/g },\r\n        ];\r\n        newstr = this;\r\n        var diaChanges = defaultDiacriticsRemovalMap;\r\n        for (var i = 0; i < diaChanges.length; i++) {\r\n            newstr = newstr.replace(diaChanges[i].letters, diaChanges[i].base);\r\n        }\r\n        newstr = newstr.replace(/[\\u2018\\u2019\\u201A]/g, \"\\'\");\r\n        // smart double quotes\r\n        newstr = newstr.replace(/[\\u201C\\u201D\\u201E]/g, \"\\\"\");\r\n        // ellipsis\r\n        newstr = newstr.replace(/\\u2026/g, \"...\");\r\n        // dashes\r\n        newstr = newstr.replace(/[\\u2013\\u2014]/g, \"-\");\r\n        // circumflex\r\n        newstr = newstr.replace(/\\u02C6/g, \"^\")\r\n        // open/close angle bracket\r\n        newstr = newstr.replace(/\\u2039/g, \"<\").replace(/\\u203A/g, \">\");\r\n        // spaces\r\n        newstr = newstr.replace(/[\\u02DC\\u00A0]/g, \" \");\r\n\r\n        return newstr;\r\n    }\r\n}\r\n\r\nif (typeof String.prototype.isDateMaybe != 'function') {\r\n    String.prototype.isDateMaybe = function () {\r\n        // Example using momentjs library, but you need to know the format\r\n        //moment(\"06/22/2015\", \"MM/DD/YYYY\", true).isValid(); // true\r\n        //moment(\"06/22/2015\", \"DD/MM/YYYY\", true).isValid(); // false\r\n        var j;\r\n        var s = this.trim();\r\n        var a = s.split(/[.\\/\\-]/);\r\n        var d = [{ \"month\": false, \"day\": false, \"year\": false }, { \"month\": false, \"day\": false, \"year\": false }, { \"month\": false, \"day\": false, \"year\": false }\r\n        ];\r\n        // Not the traditional date like mm/dd/yyyy?\r\n        if (a.length == 1) {\r\n            if (isNaN(s)) {\r\n                try {\r\n                    var t = new Date(s);\r\n                    return !isNaN(t);\r\n                } catch (e) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (s.length !== 6 && s.length !== 8) return false;\r\n            if (s.length == 8) {\r\n                return (s.substring(0, 4) + \"/\" + s.substring(4, 6) + \"/\" + s.substring(6)).isDateMaybe() || (s.substring(0, 2) + \"/\" + s.substring(2, 4) + \"/\" + s.substring(4)).isDateMaybe();\r\n            }\r\n            else return (s.substring(0, 2) + \"/\" + s.substring(2, 4) + \"/\" + s.substring(4)).isDateMaybe();\r\n        }\r\n\r\n        if (a.length != 3) return false;\r\n\r\n        for (j = 0; j < 3; j++) {\r\n            if (a[j].length < 1 || a[j].length == 3 || a[j].length > 4) return false;\r\n            if (isNaN(a[j])) return false;\r\n        }\r\n\r\n        for (j = 0; j < 3; j++) {\r\n            if (a[j].length == 4) {\r\n                if (a[j] * 1 < 1900 || a[j] * 1 >= 2100) return false;\r\n                d[j].year = true;\r\n            }\r\n            else {\r\n                if (a[j] * 1 >= 1 && a[j] * 1 <= 31) d[j].day = true;\r\n                d[j].year = true;\r\n                if (a[j] * 1 >= 1 && a[j] * 1 <= 12) d[j].month = true;\r\n            }\r\n        }\r\n        if (d[0].month && d[1].day && d[2].year) return true; // mm/dd/yy[yy]\r\n        if (d[0].year && d[1].month && d[2].day) return true; // yy[yy]/mm/dd\r\n        if (d[0].day && d[1].month && d[2].year) return true; // dd/mm/yy[yy]\r\n\r\n        return false;\r\n    };\r\n}\r\n\r\nif (!Array.prototype.indexOf) {\r\n    Array.prototype.indexOf = function (elt /*, from*/) {\r\n        var len = this.length >>> 0;\r\n\r\n        var from = Number(arguments[1]) || 0;\r\n        from = (from < 0) ? Math.ceil(from) : Math.floor(from);\r\n        if (from < 0) from += len;\r\n\r\n        for (; from < len; from++) {\r\n            if (from in this && this[from] === elt) return from;\r\n        }\r\n        return -1;\r\n    };\r\n}\r\nfunction getDecimalChar() { return (0).toFixed(1).charAt(1); }\r\nfunction breadCrumb(elm) {\r\n    elm.innerHTML = \"<a href=\\\"/\\\">HOME</a> &rarr; \" + document.location.href.split(\"/\").slice(-1)[0].split(\".\")[0].toUpperCase();\r\n}\r\nNumber.isInteger = Number.isInteger || function (value) {\r\n    return typeof value === \"number\" &&\r\n        isFinite(value) &&\r\n        Math.floor(value) === value;\r\n};\nfunction ieReadLocalFile(that, callback, encoding) {\r\n    //alert(that.value);\r\n    if (!that.value) return;\r\n    if (that.value.length <= 0) return;\r\n    var request;\r\n    if (window.XMLHttpRequest && false) { // code for IE7+, Firefox, Chrome, Opera, Safari\r\n        request = new XMLHttpRequest();\r\n    }\r\n    else {// code for IE6, IE5\r\n        request = new ActiveXObject(\"Msxml2.XMLHTTP\"); // Microsoft.XMLHTTP\r\n    }\r\n    var fn = that.value;\r\n    //fn=\"file:///\"+that.value.replace(\"\\\\\",\"/\");\r\n    request.open('get', fn, true);\r\n    request.onreadystatechange = function () {\r\n        //alert(request.readystate+\":\"+request.status);\r\n        if (request.readyState == 4 && (request.status == 200 || request.status == 0)) {\r\n            callback(request.responseText);\r\n        }\r\n    }\r\n    request.send();\r\n}\r\n\r\nfunction readLocalFile(that, callback, encoding) {\r\n    var reader = new FileReader();\r\n\r\n    if (that.files && that.files[0]) {\r\n        var reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            //document.getElementById(txtTargetName).value=e.target.result;\r\n            callback(e.target.result);\r\n        };//end onload()\r\n        reader.readAsText(that.files[0], encoding);\r\n    }//\r\n} // readLocaFile\r\n\r\nfunction readExcelFile(event, callback, fn, sheet) {\r\n    var j = 0;\r\n    var opts = \"headers:false\";\r\n    if (sheet && sheet != \"\") {\r\n        opts += ',sheetid:\"' + sheet.toJson() + '\"';\r\n    }\r\n    if (!fn) fn = $('#f1')[0].value.split(/[\\\\\\/]/)[$('#f1')[0].value.split(/[\\\\\\/]/).length - 1];\r\n    var ext = \"XLSX\";\r\n    if (fn.split('.').length > 1) {\r\n        ext = fn.split('.');\r\n        ext = ext[ext.length - 1].toUpperCase();\r\n        if (ext === \"XLS\"); else ext = \"XLSX\";\r\n    }\r\n    //alert( 'SELECT * FROM ' + ext + '(?,{'+opts+'})');\r\n    alasql('SELECT * FROM ' + ext + '(?,{' + opts + '})', [event],\r\n        function (data) {\r\n            // data needs to be converted to CSV here.\r\n            //data=JSON.parse(JSON.stringify(data,function(key,value){if(value===null||value===undefined)return \"\";return value;}));\r\n            //alert(JSON.stringify(data,null,2));\r\n            for (j = 0; j < data.length; j++) {\r\n                if (_.isObject(data[j]) && _.isEmpty(data[j])) data.splice(j, 1);\r\n            }\r\n            alasql('SELECT * INTO CSV(null,{\"utf8Bom\":false}) FROM ?', [data],\r\n                function (data) {\r\n                    //alert(data)\r\n                    callback(data.replace(/\"undefined\"/g, ''));\r\n                }\r\n            );\r\n        });\r\n}\r\nfunction loadTextFile(f, callback, event) {\r\n    var fn = $('#f1')[0].value.split(/[\\\\\\/]/)[$('#f1')[0].value.split(/[\\\\\\/]/).length - 1];\r\n    var encoding = \"\";\r\n    var sheetname = \"\";\r\n    var elm = $(\"#txtEncoding\")[0];\r\n    var htmlstring = \"\";\r\n    //alert(fn);alert((fn.endsWith(\".xlsx\")));\r\n    if (fn.toLowerCase().endsWith(\".xlsx\") || fn.toLowerCase().endsWith(\".xls\")) {\r\n        htmlstring = \"<input id=\\\"txtEncoding\\\" value=\\\"\\\" class=\\\"form-control\\\" title=\\\"Enter encoding for input file\\\" onchange=\\\"loadTextFile($('#f1')[0],assignText)\\\">\";\r\n        if (elm && elm.nodeName && elm.nodeName.toLowerCase() == \"select\") {\r\n            // switch to input tag\r\n            if (elm.outerHTML) {\r\n                elm.outerHTML = htmlstring;\r\n            }\r\n            else {\r\n                $(\"#txtEncoding\").replaceWith(htmlstring);\r\n            }\r\n        }\r\n        elm = $(\"#txtEncoding\")[0];\r\n        if (document && elm && elm.nodeName && elm.nodeName.toLowerCase() === \"input\") { // add support for sheetname\r\n            sheetname = elm.value;\r\n        }\r\n        if (document && $(\"#spanEncoding\")[0]) $(\"#spanEncoding\")[0].innerHTML = \"SheetName\";\r\n        readExcelFile(event, callback, fn, sheetname);\r\n    }\r\n    else {\r\n        if (elm && elm.nodeName && elm.nodeName.toLowerCase() == \"input\") {\r\n            htmlstring = \"<select id=\\\"txtEncoding\\\" class=\\\"form-control\\\" title=\\\"Enter encoding for input file\\\" onchange=\\\"loadTextFile($('#f1')[0],assignText)\\\"><option value=\\\"\\\" selected=\\\"selected\\\">-Default-</option><option value=\\\"ISO-8859-1\\\">ISO-8859-1 (Latin No. 1)</option><option value=\\\"ISO-8859-2\\\">ISO-8859-2 (Latin No. 2)</option><option value=\\\"ISO-8859-3\\\">ISO-8859-3 (Latin No. 3)</option><option value=\\\"ISO-8859-4\\\">ISO-8859-4 (Latin No. 4)</option><option value=\\\"ISO-8859-5\\\">ISO-8859-5 (Latin/Cyrillic)</option><option value=\\\"ISO-8859-6\\\">ISO-8859-6 (Latin/Arabic)</option><option value=\\\"ISO-8859-7\\\">ISO-8859-7 (Latin/Greek)</option><option value=\\\"ISO-8859-8\\\">ISO-8859-8 (Latin/Hebrew)</option><option value=\\\"ISO-8859-9\\\">ISO-8859-9 (Latin No. 5)</option><option value=\\\"ISO-8859-13\\\">ISO-8859-13 (Latin No. 7)</option><option value=\\\"ISO-8859-15\\\">ISO-8859-15 (Latin No. 9)</option><option value=\\\"macintosh\\\">Mac OS Roman</option>\\n<option value=\\\"UTF-8\\\">UTF-8</option><option value=\\\"UTF-16\\\">UTF-16</option><option value=\\\"UTF-16BE\\\">UTF-16 (Big-Endian)</option><option value=\\\"UTF-16LE\\\">UTF-16 (Little-Endian)</option><option value=\\\"UTF-32\\\">UTF-32</option>\\n<option value=\\\"UTF-32BE\\\">UTF-32 (Big-Endian)</option><option value=\\\"UTF-32LE\\\">UTF-32 (Little-Endian)</option>\\n<option value=\\\"windows-1250\\\">windows-1250 (Win East European)</option><option value=\\\"windows-1251\\\">windows-1251 (WinCyrillic)</option><option value=\\\"windows-1252\\\">windows-1252 (WinLatin-1)</option><option value=\\\"windows-1253\\\">windows-1253 (WinGreek)</option><option value=\\\"windows-1254\\\">windows-1254 (Win Turkish)</option><option value=\\\"windows-1255\\\">windows-1255 (Win Hebrew)</option><option value=\\\"windows-1256\\\">windows-1256 (Win Arabic)</option><option value=\\\"windows-1257\\\">windows-1257 (Win Baltic)</option><option value=\\\"windows-1258\\\">windows-1257 (Win Vietnamese)</option></select>\";\r\n            // switch to select tag\r\n            if (elm.outerHTML) {\r\n                elm.outerHTML = htmlstring;\r\n            }\r\n            else {\r\n                $(\"#txtEncoding\").replaceWith(htmlstring);\r\n            }\r\n        }\r\n        elm = $(\"#txtEncoding\")[0];\r\n        if (document && elm && elm.nodeName && elm.nodeName.toLowerCase() === \"select\") {\r\n            encoding = elm.value;\r\n        }\r\n        // if (document && $(\"#spanEncoding\")[0]) $(\"#spanEncoding\")[0].innerHTML = \"Encoding\";\r\n        if (window.FileReader) { readLocalFile(f, callback, encoding) } else { ieReadLocalFile(f, callback, encoding) }\r\n        //(navigator.appName.search('Microsoft') > -1) ? ieReadLocalFile(f, callback, encoding) : readLocalFile(f, callback, encoding);\r\n\r\n    }\r\n}\nvar CSV = {\r\n    delimiter: \",\",\r\n    detectedDelimiter: \",\",\r\n    autodetect: true,\r\n    quote: '\"',\r\n\r\n    quoteCharCnt: {\r\n        \"'\": 0,\r\n        '\"': 0\r\n    },\r\n\r\n    detectedQuote: '\"',\r\n    outputQuote: '\"',\r\n    limit: '',\r\n    isFirstRowHeader: true,\r\n    headerToUpper: false,\r\n    headerToLower: false,\r\n    skipEmptyRows: true,\r\n    skipEmptyRowCnt: 0,\r\n    skip: 0,\r\n    relaxedMode: true,\r\n    ignoreQuote: false,\r\n    relaxedInfo: {},\r\n    excelMode: true,\r\n    sortNeeded: false,\r\n    addSequence: false,\r\n    fieldImbalance: false,\r\n    fieldImbalanceRows: [],\r\n    headerImbalance: false,\r\n    headerImbalanceRows: [],\r\n    headerErrors: [],\r\n    decodeBackslashLiterals: false,\r\n\r\n    decimalChar: function () {\r\n        return (0).toFixed(1).charAt(1);\r\n    },\r\n\r\n    maxColumnsFound: 0,\r\n    headerColumns: 0,\r\n    prevColumnsFound: 0,\r\n    dataRowsFound: 0,\r\n    arHeaderRow: [],\r\n    table: [],\r\n    statsCnt: [],\r\n    displayPoss: \"\",\r\n    sortPoss: \"\",\r\n    sortIgnoreCase: false,\r\n    useStringSub: false,\r\n\r\n    stringSubMap: [\r\n        [\"null\", \"\", false]\r\n    ],\r\n\r\n    unescapeLiterals: function (s) {\r\n        var j;\r\n        var n = s.length - 1;\r\n        var c;\r\n        for (j = 0; j < n; j += 1) {\r\n            c = s.charAt(j);\r\n            if (c == \"\\\\\") {\r\n                switch (s.charAt(j + 1)) {\r\n                case '\\\\':\r\n                    c = \"\\\\\";\r\n                    j += 1;\r\n                    break;\r\n                case 'b':\r\n                    c = \"\\b\";\r\n                    j += 1;\r\n                    break;\r\n                case 'f':\r\n                    c = \"\\f\";\r\n                    j += 1;\r\n                    break;\r\n                case 'n':\r\n                    c = \"\\n\";\r\n                    j += 1;\r\n                    break;\r\n                case 'r':\r\n                    c = \"\\r\";\r\n                    j += 1;\r\n                    break;\r\n                case 't':\r\n                    c = \"\\t\";\r\n                    j += 1;\r\n                    break;\r\n                case 'v':\r\n                    c = \"\\v\";\r\n                    j += 1;\r\n                    break;\r\n                case '\"':\r\n                    c = '\"';\r\n                    j += 1;\r\n                    break;\r\n                case \"'\":\r\n                    c = \"'\";\r\n                    j += 1;\r\n                    break;\r\n                case \",\":\r\n                    c = \",\";\r\n                    j += 1;\r\n                    break;\r\n                default:\r\n                    break;\r\n                }\r\n            }\r\n            a.push(c);\r\n        }\r\n        if (j == n) {\r\n            a.push(s.charAt(n));\r\n        }\r\n        return a.join('');\r\n    },\r\n\r\n    parse: function (csv, reviver) {\r\n        var j, k;\r\n        var s = \"\";\r\n        var ss = \"\";\r\n        reviver = reviver || function (r, c, v) {\r\n            return v;\r\n        };\r\n        this.table = [];\r\n        this.statsCnt = [];\r\n        this.arHeaderRow = [];\r\n        this.maxColumnsFound = 0;\r\n        this.dataRowsFound = 0;\r\n        this.headerColumns = 0;\r\n        this.relaxedInfo = {};\r\n        var c = 0;\r\n        var prevCh = \"\";\r\n        var start, end, row;\r\n        var cnt = 0;\r\n        var equalUsed = false;\r\n        var savestart;\r\n        var linestart;\r\n        var spacesFound = false;\r\n        var firstRowColumnsFound = 0;\r\n        var brcnt = 0;\r\n        var chars;\r\n        var cc;\r\n        var h = \"\";\r\n        if (this.limit !== '' && isNaN(this.limit)) {\r\n            this.limit = '';\r\n        }\r\n        if (this.skip !== '' && isNaN(this.skip)) {\r\n            this.skip = 0;\r\n        }\r\n        if (this.skip === '' || this.skip < 0) {\r\n            this.skip = 0;\r\n        }\r\n        if (this.skip > 0) {\r\n            var p = 0;\r\n            cnt = 0;\r\n            for (j = 0; j < csv.length; j += 1) {\r\n                if (csv.charAt(j) == '\\n' || (csv.charAt(j) == '\\r' && (j == csv.length - 1 || csv.charAt(j + 1) != '\\n'))) {\r\n                    cnt += 1;\r\n                    if (cnt >= this.skip) {\r\n                        p = j + 1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (cnt < this.skip) {\r\n                p = csv.length;\r\n            }\r\n            csv = csv.substr(p);\r\n        }\r\n        chars = csv.split('');\r\n        cc = chars.length;\r\n        csv = \"\";\r\n        detect = {\r\n            comma: 0,\r\n            semi: 0,\r\n            tab: 0,\r\n            pipe: 0,\r\n            colon: 0,\r\n            space: 0,\r\n            caret: 0\r\n        };\r\n        this.quoteCharCnt = {\r\n            \"'\": 0,\r\n            '\"': 0\r\n        };\r\n        for (j = 0; j < cc; j += 1) {\r\n            if (j > 1 && (chars[j] == '\\r' || chars[j] == '\\n')) {\r\n                break;\r\n            }\r\n            if (chars[j] == \",\") {\r\n                detect.comma += 1;\r\n            }\r\n            if (chars[j] == \";\") {\r\n                detect.semi += 1;\r\n            }\r\n            if (chars[j] == \"\\t\") {\r\n                detect.tab += 1;\r\n            }\r\n            if (chars[j] == \"|\") {\r\n                detect.pipe += 1;\r\n            }\r\n            if (chars[j] == \":\") {\r\n                detect.colon += 1;\r\n            }\r\n            if (chars[j] == \"^\") {\r\n                detect.caret += 1;\r\n            }\r\n            if (chars[j] == \" \") {\r\n                detect.space += 1;\r\n            }\r\n        }\r\n        this.detectedDelimiter = this.delimiter || ',';\r\n        if (detect.tab > 0 && detect.tab >= detect.comma && detect.tab >= detect.pipe && detect.tab >= detect.semi && detect.tab >= detect.colon && detect.tab > detect.caret) {\r\n            this.detectedDelimiter = \"\\t\";\r\n        } else if (detect.semi > 0 && detect.semi > detect.comma && detect.semi > detect.pipe && detect.semi > detect.tab && detect.semi > detect.colon && detect.semi > detect.caret) {\r\n            this.detectedDelimiter = \";\";\r\n        } else if (detect.colon > 0 && detect.colon > detect.comma && detect.colon > detect.pipe && detect.colon > detect.tab && detect.colon > detect.semi && detect.colon > detect.caret) {\r\n            this.detectedDelimiter = \":\";\r\n        } else if (detect.pipe > 0 && detect.pipe > detect.comma && detect.pipe > detect.semi && detect.pipe > detect.tab && detect.pipe > detect.colon && detect.pipe > detect.caret) {\r\n            this.detectedDelimiter = \"|\";\r\n        } else if (detect.caret > 0 && detect.caret > detect.comma && detect.caret > detect.pipe && detect.caret > detect.semi && detect.caret > detect.tab && detect.caret > detect.colon) {\r\n            this.detectedDelimiter = \"^\";\r\n        } else if (detect.comma > detect.tab && detect.comma > detect.pipe && detect.comma > detect.semi && detect.comma > detect.colon && detect.comma > detect.caret) {\r\n            this.detectedDelimiter = \",\";\r\n        } else {\r\n            this.detectedDelimiter = \",\";\r\n        }\r\n        if (detect.tab === 0 && detect.comma === 0 && detect.pipe === 0 && detect.colon === 0 && detect.semi === 0 && detect.caret === 0 && detect.space > 0) {\r\n            this.detectedDelimiter = \" \";\r\n        }\r\n        if (this.autodetect) {\r\n            this.delimiter = this.detectedDelimiter;\r\n        }\r\n        this.skipEmptyRowCnt = 0;\r\n        while (c < cc) {\r\n            if (this.skipEmptyRows && (chars[c] == '\\r' || chars[c] == '\\n')) {\r\n                c += 1;\r\n                this.skipEmptyRowCnt += 1;\r\n                continue;\r\n            }\r\n            this.table.push(row = []);\r\n            if (this.addSequence && row.length === 0 && this.table.length === 1 && this.isFirstRowHeader) {\r\n                row.push(\"#\");\r\n            } else if (this.addSequence && row.length === 0) {\r\n                row.push(\"\" + (cnt + 1 - (this.isFirstRowHeader ? 1 : 0)));\r\n            }\r\n            spacesFound = false;\r\n            linestart = c;\r\n            while (c < cc && chars[c] !== '\\r' && chars[c] !== '\\n') {\r\n                savestart = start = end = c;\r\n                if (this.relaxedMode) {\r\n                    while (chars[c] === ' ') {\r\n                        c += 1;\r\n                        spacesFound = true;\r\n                    }\r\n                    if (chars[c] === this.quote && !this.ignoreQuote) {\r\n                        if (spacesFound && !this.relaxedInfo[\"\" + (this.table.length + brcnt)]) {\r\n                            this.relaxedInfo[\"\" + (this.table.length + brcnt)] = {\r\n                                \"error\": 1,\r\n                                \"column\": c - linestart + 1\r\n                            };\r\n                        }\r\n                        start = c;\r\n                    } else {\r\n                        c = savestart;\r\n                    }\r\n                }\r\n                if (this.excelMode) {\r\n                    if ((chars[c] === '=') && (c + 1 < cc) && (chars[c + 1] === this.quote)) {\r\n                        start = c += 1;\r\n                        equalUsed = true;\r\n                    }\r\n                }\r\n                if (this.quote === chars[c] && !this.ignoreQuote) {\r\n                    start = end = c += 1;\r\n                    this.quoteCharCnt[this.quote] += 1;\r\n                    while (c < cc) {\r\n                        if (chars[c] === this.quote) {\r\n                            if (this.quote !== chars[c + 1]) {\r\n                                break;\r\n                            } else {\r\n                                chars[c += 1] = '';\r\n                            }\r\n                        }\r\n                        end = c += 1;\r\n                    }\r\n                    if (chars[c] === this.quote) {\r\n                        c += 1;\r\n                        if (c < cc && chars[c] !== '\\r' && chars[c] !== '\\n' && this.delimiter !== chars[c]) {\r\n                            if (!this.relaxedInfo[\"\" + (this.table.length + brcnt)]) {\r\n                                this.relaxedInfo[\"\" + (this.table.length + brcnt)] = {\r\n                                    \"error\": 2,\r\n                                    \"column\": c - linestart + 1\r\n                                };\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (!this.relaxedInfo[\"\" + (this.table.length + brcnt)]) {\r\n                            this.relaxedInfo[\"\" + (this.table.length + brcnt)] = {\r\n                                \"error\": 3,\r\n                                \"column\": c - linestart + 1\r\n                            };\r\n                        }\r\n                    }\r\n                    while (c < cc && chars[c] !== '\\r' && chars[c] !== '\\n' && this.delimiter !== chars[c]) {\r\n                        c += 1;\r\n                    }\r\n                } else {\r\n                    prevCh = \"\";\r\n                    while (c < cc && chars[c] !== '\\r' && chars[c] !== '\\n') {\r\n                        if (chars[c] === this.delimiter && !this.decodeBackslashLiterals) {\r\n                            break;\r\n                        }\r\n                        if (chars[c] === this.delimiter && this.decodeBackslashLiterals && prevCh !== \"\\\\\") {\r\n                            break;\r\n                        }\r\n                        prevCh = chars[c];\r\n                        end = c += 1;\r\n                    }\r\n                }\r\n                row.push(reviver(this.table.length - 1, row.length, chars.slice(start, end).join('')));\r\n                if (this.decodeBackslashLiterals) {\r\n                    row[row.length - 1] = this.unescapeLiterals(row[row.length - 1]);\r\n                }\r\n                if (this.delimiter == ' ') {\r\n                    while (c < cc && chars[c] == this.delimiter) {\r\n                        c += 1;\r\n                    }\r\n                }\r\n                if (this.delimiter === chars[c]) {\r\n                    c += 1;\r\n                }\r\n            }\r\n            if (chars[c - 1] == this.delimiter && this.delimiter != ' ') {\r\n                row.push(reviver(this.table.length - 1, row.length, ''));\r\n            }\r\n            if (row.length > this.maxColumnsFound) {\r\n                this.maxColumnsFound = row.length;\r\n            }\r\n            if (chars[c] === '\\r') {\r\n                c += 1;\r\n            }\r\n            if (chars[c] === '\\n') {\r\n                c += 1;\r\n            }\r\n            if (!this.isFirstRowHeader || cnt > 0) {\r\n                for (j = 0; j < row.length; j += 1) {\r\n                    if (j >= this.statsCnt.length || cnt === 0) {\r\n                        this.statsCnt[j] = {\r\n                            dateCnt: 0,\r\n                            intCnt: 0,\r\n                            realCnt: 0,\r\n                            emptyCnt: 0,\r\n                            bitCnt: 0,\r\n                            logicalCnt: 0,\r\n                            equalUsed: false,\r\n                            fieldType: \"\",\r\n                            fieldDecs: 0,\r\n                            fieldPrec: 0,\r\n                            fldMinLen: Number.MAX_VALUE,\r\n                            fldMaxLen: 0\r\n                        };\r\n                    }\r\n                    s = (j < row.length) ? row[j].replace(/^\\s+|\\s+$/g, '') : \"\";\r\n                    if (this.excelMode && s.length > 2 && s.substr(0, 2) === '=\"' && s.substr(s.length - 1) === this.quote) {\r\n                        this.statsCnt[j].equalUsed = true;\r\n                        var e = new RegExp(this.quote + this.quote, \"gmi\");\r\n                        s = row[j] = s.substr(2, s.length - 3).replace(e, this.quote);\r\n                    }\r\n                    if (this.useStringSub) {\r\n                        for (z = 0; z < this.stringSubMap.length; z += 1) {\r\n                            if (s.toUpperCase() == this.stringSubMap[z][0].toUpperCase()) {\r\n                                s = this.stringSubMap[z][1];\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    var ch = \"'\";\r\n                    if (ch === this.quote) {\r\n                        ch = '\"';\r\n                    }\r\n                    if (s.charAt(0) === ch && s.endsWith(ch)) {\r\n                        this.quoteCharCnt[ch] += 1;\r\n                    }\r\n                    if (s === \"\") {\r\n                        this.statsCnt[j].emptyCnt += 1;\r\n                    } else {\r\n                        if (s.length < this.statsCnt[j].fldMinLen) {\r\n                            this.statsCnt[j].fldMinLen = s.length;\r\n                        }\r\n                        if (s.length > this.statsCnt[j].fldMaxLen) {\r\n                            this.statsCnt[j].fldMaxLen = s.length;\r\n                        }\r\n                    }\r\n                    ss = s;\r\n                    if (ss !== \"\" && ss.isNumeric()) {\r\n                        this.statsCnt[j].realCnt += 1;\r\n                        var dc = ss.split(this.decimalChar());\r\n                        if (dc[0].length > this.statsCnt[j].fieldPrec) {\r\n                            this.statsCnt[j].fieldPrec = dc[0].length;\r\n                        }\r\n                        if (dc.length > 1) {\r\n                            if (dc[1].length > this.statsCnt[j].fieldDecs) {\r\n                                this.statsCnt[j].fieldDecs = dc[1].length;\r\n                            }\r\n                        }\r\n                        if (s.indexOf(this.decimalChar()) < 0) {\r\n                            this.statsCnt[j].intCnt += 1;\r\n                        }\r\n                        if (s === \"0\" || s === \"1\") {\r\n                            this.statsCnt[j].bitCnt += 1;\r\n                        }\r\n                    }\r\n                    if (s.isDateMaybe()) {\r\n                        this.statsCnt[j].dateCnt += 1;\r\n                    }\r\n                    if (s.toUpperCase() === \"TRUE\" || s.toUpperCase() === \"FALSE\") {\r\n                        this.statsCnt[j].logicalCnt += 1;\r\n                    }\r\n                }\r\n            }\r\n            cnt += 1;\r\n            if (this.limit !== '' && cnt - (this.isFirstRowHeader ? 1 : 0) >= this.limit * 1) {\r\n                break;\r\n            }\r\n        }\r\n        if (cnt <= 0) {\r\n            this.dataRowsFound = 0;\r\n        } else {\r\n            this.dataRowsFound = cnt - (this.isFirstRowHeader ? 1 : 0);\r\n        }\r\n        this.headerErrors = [];\r\n        if (this.isFirstRowHeader && this.table.length > 0) {\r\n            this.arHeaderRow = this.table.shift();\r\n            this.headerColumns = this.arHeaderRow.length;\r\n            for (j = 0; j < this.headerColumns; j += 1) {\r\n                if (this.arHeaderRow[j].trim() === \"\") {\r\n                    this.headerErrors.push({\r\n                        \"error\": 1,\r\n                        \"field\": (j + 1)\r\n                    });\r\n                }\r\n            }\r\n            for (j = 0; j < this.maxColumnsFound; j += 1) {\r\n                if (!this.arHeaderRow[j] || this.arHeaderRow[j] === \"\") {\r\n                    this.arHeaderRow[j] = \"FIELD\" + (j + 1);\r\n                }\r\n                this.arHeaderRow[j] = this.arHeaderRow[j].trim();\r\n            }\r\n        }\r\n        this.fieldImbalance = false;\r\n        this.fieldImbalanceRows = [];\r\n        this.headerImbalanceRows = [];\r\n        this.headerImbalance = false;\r\n        firstRowColumnsFound = this.dataRowsFound > 0 ? this.table[0].length : 0;\r\n        for (k = 0; k < this.table.length; k += 1) {\r\n            if (this.table[k].length < this.maxColumnsFound) {\r\n                for (j = this.table[k].length; j < this.maxColumnsFound; j += 1) {\r\n                    if (j >= this.statsCnt.length) {\r\n                        this.statsCnt[j] = {\r\n                            dateCnt: 0,\r\n                            intCnt: 0,\r\n                            realCnt: 0,\r\n                            emptyCnt: 0,\r\n                            bitCnt: 0,\r\n                            logicalCnt: 0,\r\n                            equalUsed: false,\r\n                            fieldType: \"\",\r\n                            fieldDecs: 0,\r\n                            fieldPrec: 0,\r\n                            fldMinLen: Number.MAX_VALUE,\r\n                            fldMaxLen: 0\r\n                        };\r\n                    }\r\n                    this.statsCnt[j].emptyCnt += 1;\r\n                }\r\n            }\r\n            if (this.isFirstRowHeader && this.headerColumns != this.table[k].length) {\r\n                this.headerImbalance = true;\r\n                if (this.headerImbalanceRows.length < 5) {\r\n                    this.headerImbalanceRows.push(k + 2);\r\n                }\r\n            }\r\n            if (!this.isFirstRowHeader && firstRowColumnsFound != this.table[k].length) {\r\n                this.fieldImbalance = true;\r\n                if (this.fieldImbalanceRows.length < 5) {\r\n                    this.fieldImbalanceRows.push(k + 1);\r\n                }\r\n            }\r\n        }\r\n        if (this.arHeaderRow.length > 0) {\r\n            for (j = 0; j < this.arHeaderRow.length; j += 1) {\r\n                this.determineCsvColType(j);\r\n            }\r\n        } else if (this.table.length > 0) {\r\n            for (j = 0; j < this.maxColumnsFound; j += 1) {\r\n                if (!this.arHeaderRow[j] || this.arHeaderRow[j] === \"\") {\r\n                    this.arHeaderRow[j] = \"FIELD\" + (j + 1);\r\n                }\r\n                this.determineCsvColType(j);\r\n            }\r\n        }\r\n        for (j = 0; j < this.arHeaderRow.length; j += 1) {\r\n            if (this.headerToUpper) {\r\n                this.arHeaderRow[j] = this.arHeaderRow[j].toUpperCase();\r\n            }\r\n            if (this.headerToLower) {\r\n                this.arHeaderRow[j] = this.arHeaderRow[j].toLowerCase();\r\n            }\r\n        }\r\n        if (this.sortPoss !== \"\") {\r\n            this.table.sort(this.sortCsv);\r\n        }\r\n        if (this.quoteCharCnt['\"'] >= this.quoteCharCnt[\"'\"]) {\r\n            this.detectedQuote = '\"';\r\n        } else {\r\n            this.detectedQuote = \"'\";\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    setSortFlds: function (flds) {\r\n        CSV.sortPoss = flds.trim();\r\n    },\r\n\r\n    sortCsv: function (a, b) {\r\n        if (CSV.sortPoss === \"\") {\r\n            return 0;\r\n        }\r\n        p = CSV.sortPoss.split(\",\");\r\n        for (j = 0; j < p.length; j += 1) {\r\n            q[j] = 1;\r\n            t[j] = \"\";\r\n            if (p[j].right(1).toUpperCase() == 'D') {\r\n                q[j] = -1;\r\n                p[j] = p[j].left(p[j].length - 1);\r\n            }\r\n            switch (p[j].left(1).toUpperCase()) {\r\n            case 'C':\r\n                t[j] = 'C';\r\n                p[j] = p[j].right(p[j].length - 1);\r\n                break;\r\n            case 'N':\r\n                t[j] = 'N';\r\n                p[j] = p[j].right(p[j].length - 1);\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n        }\r\n        for (j = 0; j < p.length; j += 1) {\r\n            if (!isNaN(p[j])) {\r\n                p[j] = (p[j] * 1) - 1;\r\n            } else {\r\n                p[j] = -1;\r\n            }\r\n        }\r\n        for (j = 0; j < p.length; j += 1) {\r\n            if (p[j] >= a.length) {\r\n                p[j] = -1;\r\n            }\r\n        }\r\n        for (j = 0; j < p.length; j += 1) {\r\n            if (p[j] < 0) {\r\n                continue;\r\n            }\r\n            if (!isNaN(a[p[j]].replace(/[\\$,]/g, \"\")) && !isNaN(b[p[j]].replace(/[\\$,]/g, \"\")) && CSV.dataRowsFound == CSV.statsCnt[p[j]].realCnt + CSV.statsCnt[p[j]].emptyCnt && t[j] != 'C') {\r\n                if (a[p[j]].replace(/[\\$,]/g, \"\") * 1 < b[p[j]].replace(/[\\$,]/g, \"\") * 1) {\r\n                    return -1 * q[j];\r\n                }\r\n                if (a[p[j]].replace(/[\\$,]/g, \"\") * 1 > b[p[j]].replace(/[\\$,]/g, \"\") * 1) {\r\n                    return 1 * q[j];\r\n                }\r\n            } else {\r\n                if (CSV.sortIgnoreCase) {\r\n                    if (a[p[j]].toUpperCase() < b[p[j]].toUpperCase()) {\r\n                        return -1 * q[j];\r\n                    }\r\n                    if (a[p[j]].toUpperCase() > b[p[j]].toUpperCase()) {\r\n                        return 1 * q[j];\r\n                    }\r\n                } else {\r\n                    if (a[p[j]] < b[p[j]]) {\r\n                        return -1 * q[j];\r\n                    }\r\n                    if (a[p[j]] > b[p[j]]) {\r\n                        return 1 * q[j];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    determineCsvColType: function (colPos) {\r\n        var j = 0;\r\n        var k = 0;\r\n        if (this.table.length === 0) {\r\n            return \"\";\r\n        }\r\n        if (colPos >= this.statsCnt.length) {\r\n            this.statsCnt[colPos] = {\r\n                dateCnt: 0,\r\n                intCnt: 0,\r\n                realCnt: 0,\r\n                emptyCnt: 0,\r\n                bitCnt: 0,\r\n                logicalCnt: 0,\r\n                fieldType: \"\"\r\n            };\r\n        }\r\n        if (this.table.length == this.statsCnt[colPos].bitCnt) {\r\n            this.statsCnt[colPos].fieldType = \"B\";\r\n            return \"B\";\r\n        }\r\n        if (this.table.length == this.statsCnt[colPos].logicalCnt) {\r\n            this.statsCnt[colPos].fieldType = \"L\";\r\n            return \"L\";\r\n        }\r\n        if (this.table.length == this.statsCnt[colPos].dateCnt) {\r\n            this.statsCnt[colPos].fieldType = \"D\";\r\n            return \"D\";\r\n        }\r\n        if (this.table.length == this.statsCnt[colPos].intCnt) {\r\n            this.statsCnt[colPos].fieldType = \"I\";\r\n            return \"I\";\r\n        }\r\n        if (this.table.length == this.statsCnt[colPos].realCnt) {\r\n            this.statsCnt[colPos].fieldType = \"N\";\r\n            return \"N\";\r\n        }\r\n        if (this.statsCnt[colPos].bitCnt > 0 && this.table.length == this.statsCnt[colPos].bitCnt + this.statsCnt[colPos].emptyCnt) {\r\n            this.statsCnt[colPos].fieldType = \"B\";\r\n            return \"B\";\r\n        }\r\n        if (this.statsCnt[colPos].logicalCnt > 0 && this.table.length == this.statsCnt[colPos].logicalCnt + this.statsCnt[colPos].emptyCnt) {\r\n            this.statsCnt[colPos].fieldType = \"L\";\r\n            return \"L\";\r\n        }\r\n        if (this.statsCnt[colPos].dateCnt > 0 && this.table.length == this.statsCnt[colPos].dateCnt + this.statsCnt[colPos].emptyCnt) {\r\n            this.statsCnt[colPos].fieldType = \"D\";\r\n            return \"D\";\r\n        }\r\n        if (this.statsCnt[colPos].intCnt > 0 && this.table.length == this.statsCnt[colPos].intCnt + this.statsCnt[colPos].emptyCnt) {\r\n            this.statsCnt[colPos].fieldType = \"I\";\r\n            return \"I\";\r\n        }\r\n        if (this.statsCnt[colPos].realCnt > 0 && this.table.length == this.statsCnt[colPos].realCnt + this.statsCnt[colPos].emptyCnt) {\r\n            this.statsCnt[colPos].fieldType = \"N\";\r\n            return \"N\";\r\n        }\r\n        this.statsCnt[colPos].fieldType = \"VC\";\r\n        return \"VC\";\r\n    },\r\n\r\n    stringify: function (eol, replacer) {\r\n        replacer = replacer || function (r, c, v) {\r\n            return v;\r\n        };\r\n        var csv = '';\r\n        var c;\r\n        var cc;\r\n        var r;\r\n        eol = eol || \"\\n\";\r\n        if (this.isFirstRowHeader) {\r\n            this.table.unshift(this.arHeaderRow);\r\n        }\r\n        var rr = this.table.length;\r\n        var re = new RegExp(\"[\" + this.delimiter + \"\\r\\n]\", \"gmi\");\r\n        var cell;\r\n        for (r = 0; r < rr; r += 1) {\r\n            if (r) {\r\n                csv += eol;\r\n            }\r\n            for (c = 0, cc = this.table[r].length; c < cc; c += 1) {\r\n                if (c) {\r\n                    csv += this.delimiter;\r\n                }\r\n                cell = replacer(r, c, this.table[r][c]);\r\n                if (re.test(cell)) {\r\n                    cell = this.outputQuote + cell.replace(/\"/g, this.outputQuote + this.outputQuote) + this.outputQuote;\r\n                }\r\n                csv += (cell || 0 === cell) ? cell : '';\r\n            }\r\n        }\r\n        return csv;\r\n    }\r\n};\nvar j, k, i;\r\nvar mye = eval;\r\nvar myhid = true;\r\nfunction SeqObj(n) {\r\n    this.n = n - 1 || 0;\r\n    this.nInit = this.n;\r\n    this.next = function () {\r\n        return this.n += 1\r\n    };\r\n    this.curr = function () {\r\n        return this.n\r\n    };\r\n    this.reset = function () {\r\n        this.n = this.nInit\r\n    }\r\n}\r\n\r\nfunction queryGetVal(CSV, s, rownum) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var j, k;\r\n    for (k = 0; k < CSV.maxColumnsFound; k += 1) {\r\n        eval(\"var f\" + (k + 1) + \"=\\'\\'\");\r\n        eval(\"var F\" + (k + 1) + \"=\\'\\'\");\r\n        eval(\"var h\" + (k + 1) + \"=\\'\\'\");\r\n        eval(\"var H\" + (k + 1) + \"=\\'\\'\")\r\n    }\r\n    for (k = 0; k < CSV.arHeaderRow.length; k += 1) {\r\n        eval(\"var h\" + (k + 1) + \"=CSV.arHeaderRow[\" + k + \"]\");\r\n        eval(\"var H\" + (k + 1) + \"=CSV.arHeaderRow[\" + k + \"].toUpperCase()\");\r\n        try {\r\n            eval(\"var \" + CSV.arHeaderRow[k] + \"=CSV.arHeaderRow[\" + k + \"]\")\r\n        } catch (e) { }\r\n    }\r\n    if (rownum >= 0) {\r\n        for (k = 0; k < CSV.table[rownum].length; k += 1) {\r\n            eval(\"var f\" + (k + 1) + \"=CSV.table[\" + rownum + \"][\" + k + \"]\");\r\n            eval(\"var F\" + (k + 1) + \"=CSV.table[\" + rownum + \"][\" + k + \"].toUpperCase()\");\r\n            try {\r\n                eval(\"var \" + CSV.arHeaderRow[k] + \"=CSV.table[\" + rownum + \"][\" + k + \"]\")\r\n            } catch (e) { }\r\n        }\r\n    }\r\n    try {\r\n        return eval(s)\r\n    } catch (e) {\r\n        return true\r\n    }\r\n}\r\n\r\nfunction temGetVal(CSV, s, rownum, seq, options) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var j, k;\r\n    var rn = (rownum || 0) + 1;\r\n    var nr = CSV.table.length;\r\n    var nh = CSV.arHeaderRow.length;\r\n    var nf = 0;\r\n    var br = \"\\x0A\";\r\n    var lb = \"{\";\r\n    var rb = \"}\";\r\n    var tab = \"    \";\r\n    var v = \"\";\r\n    options = options || {};\r\n    for (k = 0; k < CSV.maxColumnsFound; k += 1) {\r\n        eval(\"var f\" + (k + 1) + \"=\\'\\'\");\r\n        eval(\"var F\" + (k + 1) + \"=\\'\\'\");\r\n        eval(\"var h\" + (k + 1) + \"=\\'\\'\");\r\n        eval(\"var H\" + (k + 1) + \"=\\'\\'\")\r\n    }\r\n    for (k = 0; k < CSV.arHeaderRow.length; k += 1) {\r\n        eval(\"var h\" + (k + 1) + \"=CSV.arHeaderRow[k]\");\r\n        eval(\"var H\" + (k + 1) + \"=CSV.arHeaderRow[k].toUpperCase()\");\r\n        if (options.global && options.global.length > 0) {\r\n            eval(\"h\" + (k + 1) + \"=h\" + (k + 1) + \".\" + options.global.join('.'));\r\n            eval(\"H\" + (k + 1) + \"=H\" + (k + 1) + \".\" + options.global.join('.'))\r\n        }\r\n    }\r\n    if (rownum >= 0) {\r\n        for (k = 0; k < CSV.table[rownum].length; k += 1) {\r\n            eval(\"var f\" + (k + 1) + \"=CSV.table[rownum][k]\");\r\n            eval(\"var F\" + (k + 1) + \"=CSV.table[rownum][k].toUpperCase()\");\r\n            try {\r\n                eval(\"var \" + CSV.arHeaderRow[k] + \"=CSV.table[rownum][k]\")\r\n            } catch (e) { }\r\n            v = doTransformations(eval(\"f\" + (k + 1)), k, CSV);\r\n            eval(\"f\" + (k + 1) + \"=v\");\r\n            v = doTransformations(eval(\"F\" + (k + 1)), k, CSV);\r\n            eval(\"F\" + (k + 1) + \"=v\");\r\n            if ((\"f\" + (k + 1)) in options) {\r\n                eval(\"f\" + (k + 1) + \"=f\" + (k + 1) + \".\" + options[\"f\" + (k + 1)].join('.'));\r\n                eval(\"F\" + (k + 1) + \"=F\" + (k + 1) + \".\" + options[\"F\" + (k + 1)].join('.'))\r\n            }\r\n            if (options.global && options.global.length > 0) {\r\n                eval(\"f\" + (k + 1) + \"=f\" + (k + 1) + \".\" + options.global.join('.'));\r\n                eval(\"F\" + (k + 1) + \"=F\" + (k + 1) + \".\" + options.global.join('.'))\r\n            }\r\n        }\r\n    }\r\n    nf = (rownum >= 0) ? CSV.table[rownum].length : 0;\r\n    var a = s.split('.');\r\n    var b;\r\n    for (j = 0; j < a.length; j += 1) {\r\n        b = a[j].trim().split('(');\r\n        if (b[0].trim().toLowerCase() == 'csv' && b.length > 1 && b[1].trim() === ')') {\r\n            a[j] = \"csv(\" + CSV.quote.enclose('\\\"', '\\\\') + \",\" + CSV.quote.enclose('\\\"', '\\\\') + \")\"\r\n        }\r\n    }\r\n    try {\r\n        return eval(a.join('.'))\r\n    } catch (e) {\r\n        return \"\"\r\n    }\r\n}\r\n\r\nfunction temHandler(CSV, tem, rownum, seq, temOptions) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (tem.trim() === \"\") {\r\n        return tem\r\n    }\r\n    tem = tem.replace(/\\{\\s/gm, \"{lb} \").replace(/\\{$/gm, \"{lb}\").replace(/\\s\\}/gm, \" {rb}\").replace(/^\\}/gm, \"{rb}\");\r\n    tem = tem.split(/\\r\\n|\\r|\\n/).join(\"{br}\");\r\n    var a = tem.replace(/\\{/g, \"{\\x0A\").split(/\\{|\\}/);\r\n    var s = a.join(\"\\x0A\");\r\n    var j = 0;\r\n    var cmd = false;\r\n    lines = s.split(\"\\x0A\");\r\n    var t = [];\r\n    while (j < lines.length) {\r\n        if (cmd && lines[j] !== \"\") {\r\n            t.push(temGetVal(CSV, lines[j], rownum, seq, temOptions));\r\n            cmd = false\r\n        } else {\r\n            if (lines[j] === \"\") {\r\n                cmd = true\r\n            } else {\r\n                t.push(lines[j])\r\n            }\r\n        }\r\n        j += 1;\r\n    }\r\n    return t.join(\"\");\r\n}\r\n\r\nfunction csvFromTem(CSV, temHead, tem, temBetween, temFoot, temCond, temOptions) {\r\n    var j;\r\n    var v;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var s = \"\";\r\n    var seqobj = new SeqObj();\r\n    s += temHandler(CSV, temHead, -1, 0);\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        v = temHandler(CSV, temCond, j, j, null);\r\n        if (v.toString().left(5) == \"false\") {\r\n            continue\r\n        }\r\n        s += temHandler(CSV, tem, j, seqobj.next(), temOptions);\r\n        if (j != CSV.table.length - 1) {\r\n            s += temHandler(CSV, temBetween, j, seqobj.curr())\r\n        }\r\n    }\r\n    s += temHandler(CSV, temFoot, -1, seqobj.curr(), temOptions);\r\n    return s;\r\n}\r\n\r\nfunction csvToTable(CSV, addHeaderIfMissing, addLineNumbers, addSummary, options) {\r\n    var j, k, coltag;\r\n    var s = '<table class=\\\"table table-bordered table-hover table-condensed\\\">\\x0A';\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var sumFields = [];\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    options = options || {};\r\n    a = getFldPosArr(CSV);\r\n    for (k = 0; k < CSV.maxColumnsFound; k += 1) {\r\n        sumFields.push(0)\r\n    }\r\n    if (CSV.isFirstRowHeader || addHeaderIfMissing) {\r\n        s += \"<thead><tr>\";\r\n        if (addLineNumbers) {\r\n            s += \"<th>#</th>\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k > CSV.arHeaderRow.length) {\r\n                v = \"FIELD\" + k\r\n            } else {\r\n                v = CSV.arHeaderRow[k]\r\n            }\r\n            s += '<th title=\\\"Field #' + (k + 1) + '\\\">' + v.toHtml().replace(/\\r\\n|\\r|\\n/g, \"<br/>\") + \"</th>\\x0A\";\r\n        }\r\n        s += \"</tr></thead>\\x0A\";\r\n    }\r\n    s += \"<tbody>\";\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        s += \"<tr\";\r\n        if (options && 'attr1' in options) {\r\n            if (options.attr1 !== \"\" && options.attr1Row === \"\") {\r\n                s += \" \" + options.attr1\r\n            } else {\r\n                if (options.attr1 !== \"\" && options.attr1Row === \"E\" && (j % 2)) {\r\n                    s += \" \" + options.attr1\r\n                } else {\r\n                    if (options.attr1 !== \"\" && options.attr1Row === \"O\" && !(j % 2)) { // jshint ignore:line\r\n                        s += \" \" + options.attr1\r\n                    }\r\n                }\r\n            }\r\n            if (options.attr2 !== \"\" && options.attr2Row === \"\") {\r\n                s += \" \" + options.attr2\r\n            } else {\r\n                if (options.attr2 !== \"\" && options.attr2Row === \"E\" && (j % 2)) {\r\n                    s += \" \" + options.attr2\r\n                } else {\r\n                    if (options.attr2 !== \"\" && options.attr2Row === \"O\" && !(j % 2)) { // jshint ignore:line\r\n                        s += \" \" + options.attr2\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        s += '>\\x0A';\r\n        if (addLineNumbers) {\r\n            s += \"<td>\" + (j + 1) + \"</td>\\x0A\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \" \"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                s += \"<td align=\\\"right\\\">\" + v + \"</td>\\x0A\";\r\n                sumFields[k] += 1 * v\r\n            } else {\r\n                if (v !== \"\" && 'dateOutFormat' in options && options.dateOutFormat !== \"\" && CSV.statsCnt[k] && CSV.statsCnt[k].fieldType == \"D\") {\r\n                    try {\r\n                        var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                    } catch (e) { }\r\n                    s += \"<td>\" + v.toHtml().replace(/\\r\\n|\\n|\\r/g, \"<br/>\");\r\n                    s += \"</td>\\x0A\";\r\n                } else {\r\n                    if (v === \"\") {\r\n                        v = \" \"\r\n                    }\r\n                    s += \"<td>\" + v.toHtml().replace(/\\r\\n|\\n|\\r/g, \"<br/>\");\r\n                    s += \"</td>\\x0A\";\r\n                }\r\n            }\r\n        }\r\n        s += \"</tr>\\x0A\";\r\n    }\r\n    s += \"</tbody>\";\r\n    if (addSummary) {\r\n        s += \"<tfoot><tr>\";\r\n        if (addLineNumbers) {\r\n            s += \"<th>Sum</th>\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                s += \"<th align=\\\"right\\\">\" + sumFields[k].toFixed(CSV.statsCnt[k].fieldDecs) + \"</th>\\x0A\"\r\n            } else {\r\n                s += \"<th>&nbsp;</th>\"\r\n            }\r\n        }\r\n        s += \"</tr></tfoot>\\x0A\";\r\n    }\r\n    s += \"</table>\";\r\n    return s;\r\n}\r\n\r\nfunction csvToTableHeaderValue(CSV, addHeaderIfMissing, addLineNumbers, addSummary, options) {\r\n    var j, k, coltag;\r\n    var s = \"<table class=\\\"table table-bordered table-hover table-condensed\\\">\\x0A\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (CSV.isFirstRowHeader || addHeaderIfMissing) {\r\n        s += \"<thead><tr><th>Field</th><th>Value</th></tr></thead>\"\r\n    }\r\n    s += \"<tbody>\";\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        for (x = 0; x < a.length; x += 1) {\r\n            s += \"<tr>\";\r\n            if (x === 0 && addLineNumbers) {\r\n                s += \"<th>Record #</th><th>\" + (j + 1) + \"</th></tr><tr>\\x0A\"\r\n            }\r\n            k = a[x] - 1;\r\n            if (k > CSV.arHeaderRow.length) {\r\n                v = \"FIELD\" + k\r\n            } else {\r\n                v = CSV.arHeaderRow[k]\r\n            }\r\n            s += '<th title=\\\"Field #' + (k + 1) + '\\\">' + v.toHtml().replace(/\\r\\n|\\r|\\n/g, \"<br/>\") + \"</th>\\x0A\";\r\n            k = a[x] - 1;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \" \"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                s += \"<td align=\\\"right\\\">\" + v.toFixed(CSV.statsCnt[k].fieldDecs) + \"</td>\\x0A\"\r\n            } else {\r\n                if (v !== \"\" && 'dateOutFormat' in options && options.dateOutFormat !== \"\" && CSV.statsCnt[k] && CSV.statsCnt[k].fieldType == \"D\") {\r\n                    try {\r\n                        var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                    } catch (e) { }\r\n                    s += \"<td>\" + v.toHtml().replace(/\\r\\n|\\n|\\r/g, \"<br/>\");\r\n                    s += \"</td>\\x0A\";\r\n                } else {\r\n                    if (v === \"\") {\r\n                        v = \" \"\r\n                    }\r\n                    s += \"<td>\" + v.toHtml().replace(/\\r\\n|\\n|\\r/g, \"<br/>\") + \"</td>\\x0A\";\r\n                }\r\n            }\r\n            s += \"</tr>\\x0A\";\r\n        }\r\n        s += \"\";\r\n    }\r\n    s += \"</tbody>\";\r\n    s += \"</table>\";\r\n    return s;\r\n}\r\n\r\nfunction csvToWikiTable(CSV, addHeaderIfMissing, addLineNumbers, addSummary) {\r\n    var j, k, coltag;\r\n    var s = '{| class=\\\"wikitable sortable\\\"\\x0A';\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var sumFields = [];\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    for (k = 0; k < CSV.maxColumnsFound; k += 1) {\r\n        sumFields.push(0)\r\n    }\r\n    if (CSV.isFirstRowHeader || addHeaderIfMissing) {\r\n        s += \"|-\\x0A\";\r\n        if (addLineNumbers) {\r\n            s += \"! #\\x0A\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k > CSV.arHeaderRow.length) {\r\n                v = \"FIELD\" + k\r\n            } else {\r\n                v = CSV.arHeaderRow[k]\r\n            }\r\n            s += '! ' + v.toHtml().replace(/\\r\\n|\\r|\\n/g, \"<br/>\") + \"\\x0A\";\r\n        }\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        s += \"|-\\x0A\";\r\n        if (addLineNumbers) {\r\n            s += \"! \" + (j + 1) + \"\\x0A\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \" \"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (x > 0) {\r\n                s += \" |\"\r\n            }\r\n            if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                s += '| ' + v.toFixed(CSV.statsCnt[k].fieldDecs);\r\n                sumFields[k] += 1 * v\r\n            } else {\r\n                if (v === \"\") {\r\n                    v = \" \"\r\n                }\r\n                s += \"| \" + v.toHtml().replace(/\\r\\n|\\n|\\r/g, \"<br/>\").replace(/\\|/g, \"<nowiki>|</nowiki>\");\r\n            }\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    s += \"\";\r\n    if (addSummary) {\r\n        s += \"|-\\x0A\";\r\n        if (addLineNumbers) {\r\n            s += \"! Sum\\x0A\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                s += \"! \" + sumFields[k].toFixed(CSV.statsCnt[k].fieldDecs) + \"\\x0A\"\r\n            } else {\r\n                s += \"! \\x0A\"\r\n            }\r\n        }\r\n    }\r\n    s += \"|}\";\r\n    return s;\r\n}\r\n\r\nfunction csvToXml(CSV, topName, rowName) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var topLevel = topName || \"ROWSET\";\r\n    var rowLevel = rowName || \"ROW\";\r\n    var s = \"<?xml version=\\\"1.0\\\"?>\\x0A<\" + topLevel + \">\\x0A\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var h = \"\";\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (CSV.table.length === 0) {\r\n        return s + \"</\" + topLevel + \">\"\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        s += \"<\" + rowLevel + \">\\x0A\";\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k] + \"\"\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (k >= hdr.length) {\r\n                h = \"FIELD\" + k\r\n            } else {\r\n                h = hdr[k].replace(/[:~\\/\\\\;?$@%=\\[\\]+='\"`|()*\\^&<>]/, \"-\")\r\n            }\r\n            s += \"<\" + h.replace(/\\s+/g, '_') + \">\" + v.toXml() + \"</\" + h.replace(/\\s+/g, '_') + \">\\x0A\";\r\n        }\r\n        s += \"</\" + rowLevel + \">\\x0A\";\r\n    }\r\n    s += \"</\" + topLevel + \">\";\r\n    return s;\r\n}\r\n\r\nfunction csvToXmlProperties(CSV, topName, rowName, options) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var topLevel = topName || \"ROWSET\";\r\n    var rowLevel = rowName || \"ROW\";\r\n    option = options || {};\r\n    var s = \"<?xml version=\\\"1.0\\\"?>\\x0A<\" + topLevel + \">\\x0A\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var h = \"\";\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (CSV.table.length === 0) {\r\n        return s + \"</\" + topLevel + \">\"\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        s += \"<\" + rowLevel;\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            if (options.skipEmpty && (v === null || v === undefined || v === \"\")) {\r\n                continue\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (k >= hdr.length) {\r\n                h = \"FIELD\" + k\r\n            } else {\r\n                h = hdr[k].replace(/[:~\\/\\\\;?$@%=\\[\\]+='\"`|()*\\^&<>]/, \"-\")\r\n            }\r\n            s += \" \" + h.replace(/\\s+/g, '_') + '=\\\"' + (v + \"\").toXml() + '\\\"';\r\n        }\r\n        s += \"></\" + rowLevel + \">\\x0A\";\r\n    }\r\n    s += \"</\" + topLevel + \">\";\r\n    return s;\r\n}\r\n\r\nfunction csvToJSON(CSV, options) {\r\n    var j = 0,\r\n        k, kp, col;\r\n    var hdr;\r\n    var s = \"\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var h = \"\";\r\n    var emptyIsNull = false;\r\n    var fldcnt = 0;\r\n    if (!options) {\r\n        options = {}\r\n    }\r\n    if (!('lineMode' in options)) {\r\n        options.lineMode = false\r\n    }\r\n    if (options.isKeyed) {\r\n        options.mongoDbMode = false\r\n    }\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    hdr = getCsvHeader(CSV);\r\n    var yep = false;\r\n    var firstArray = true;\r\n    if (CSV.table.length === 0) {\r\n        if (options.mongoDbMode) {\r\n            return \"\"\r\n        }\r\n        if (options.isKeyed) {\r\n            return \"{}\"\r\n        }\r\n        return \"[]\";\r\n    }\r\n    if (options.tryToObject) {\r\n        for (j = 0; j < hdr.length; j += 1) {\r\n            if (hdr[j].indexOf(\"/\") >= 0) {\r\n                yep = true;\r\n                break\r\n            }\r\n            if (isNaN(hdr[j].split(\"/\")[0]) || !Number.isInteger(hdr[j].split(\"/\")[0] * 1)) {\r\n                firstArray = false\r\n            }\r\n        }\r\n        if (firstArray) {\r\n            yep = true\r\n        }\r\n        if (yep) {\r\n            return csvToJSONSpecial(CSV, options)\r\n        }\r\n    }\r\n    if (!options.mongoDbMode) {\r\n        s = \"[\" + \"\\x0A\"\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        if (!options.mongoDbMode) {\r\n            s += \" \"\r\n        }\r\n        s += \"{\";\r\n        if (!options.mongoDbMode && !options.lineMode) {\r\n            s += \"\\x0A\"\r\n        }\r\n        fldcnt = 0;\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            emptyIsNull = document.getElementById(\"chknull\" + (k + 1)) && document.getElementById(\"chknull\" + (k + 1)).checked;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            if (v === \"\" && options.skipEmpty) {\r\n                continue\r\n            }\r\n            s += (fldcnt > 0 ? ',' + ((options.mongoDbMode || options.lineMode) ? '' : '\\x0A') : '');\r\n            if (k >= hdr.length || !hdr[k] || hdr[k] === \"\") {\r\n                h = \"FIELD\" + (x + 1)\r\n            } else {\r\n                h = hdr[k]\r\n            }\r\n            if (!options.mongoDbMode) {\r\n                s += \"  \"\r\n            }\r\n            s += ' \\\"' + h.toJson() + '\\\": ';\r\n            v = doTransformations(v, k, CSV);\r\n            if (!options.forceWrap && (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\" || CSV.statsCnt[k].fieldType == \"B\") || (options.autoNum && v.isNumeric()))) {\r\n                if (v.trim() !== \"\") {\r\n                    v = v.toNumber() + \"\";\r\n                    if (v.left(1) == getDecimalChar()) {\r\n                        v = \"0\" + v\r\n                    }\r\n                    if (v.left(2) == \"-\" + getDecimalChar()) {\r\n                        v = \"-0\" + v.substr(1)\r\n                    }\r\n                    s += v;\r\n                } else {\r\n                    s += 'null'\r\n                }\r\n            } else {\r\n                if (!options.forceWrap && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"L\")) {\r\n                    if (v.trim() !== \"\") {\r\n                        s += v.toLocaleLowerCase()\r\n                    } else {\r\n                        s += 'null'\r\n                    }\r\n                } else {\r\n                    if ((emptyIsNull && v === \"\") || (options.nullIsNull && (v.toUpperCase() == \"NULL\" || v === \"\\\\N\"))) {\r\n                        s += \"null\"\r\n                    } else {\r\n                        s += '\\\"' + v.toJson() + '\\\"'\r\n                    }\r\n                }\r\n            }\r\n            fldcnt += 1;\r\n        }\r\n        if (!options.mongoDbMode && !options.lineMode) {\r\n            s += \"\\x0A\"\r\n        }\r\n        s += \" }\";\r\n        if (j < CSV.table.length - 1 && !options.mongoDbMode) {\r\n            s += \",\"\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    if (!options.mongoDbMode) {\r\n        s += \"]\"\r\n    }\r\n    if (!options.mongoDbMode && options.isKeyed) {\r\n        kp = 1;\r\n        if (document.getElementById(\"txtKeyNum\")) {\r\n            kp = document.getElementById(\"txtKeyNum\").value || \"1\";\r\n            if (isNaN(kp)) {\r\n                kp = 1\r\n            } else {\r\n                kp = +kp\r\n            }\r\n            if (kp < 1) {\r\n                kp = 1\r\n            }\r\n        }\r\n        kp = kp - 1;\r\n        a = JSON.parse(s);\r\n        s = \"\";\r\n        var newa = {};\r\n        var kn = hdr[kp];\r\n        var dups = false;\r\n        for (i = 0; i < 2; i += 1) {\r\n            newa = {};\r\n            for (j = 0; j < a.length; j += 1) {\r\n                if (kp >= CSV.table[j].length) {\r\n                    keyvalue = \"\"\r\n                } else {\r\n                    keyvalue = CSV.table[j][kp]\r\n                }\r\n                keyvalue = doTransformations(keyvalue, kp, CSV);\r\n                if (kn in a[j]) {\r\n                    delete a[j][kn]\r\n                }\r\n                if (keyvalue in newa) {\r\n                    if (i === 0) {\r\n                        dups = true;\r\n                        break\r\n                    }\r\n                    newa[keyvalue].push(a[j]);\r\n                } else {\r\n                    switch (dups) {\r\n                        case false:\r\n                            newa[keyvalue] = a[j];\r\n                            break;\r\n                        case true:\r\n                            newa[keyvalue] = [a[j]];\r\n                            break\r\n                    }\r\n                }\r\n            }\r\n            if (i === 0 && !dups) {\r\n                break\r\n            }\r\n        }\r\n        if (options.lineMode) {\r\n            a = [];\r\n            newaa = Object.keys(newa);\r\n            for (j = 0; j < newaa.length; j += 1) {\r\n                k = newaa[j];\r\n                a.push('\\\"' + k.toJson() + '\\\"' + ':' + JSON.stringify(newa[k]))\r\n            }\r\n            return '{\\x0A' + a.join(',\\x0A') + '\\x0A}';\r\n        }\r\n        return JSON.stringify(newa, null, 3);\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction csv2jsonObj(hdr, v, options) {\r\n    var t = [];\r\n    var p = [];\r\n    var o = {};\r\n    var firstArray = true;\r\n\r\n    function delete_null_properties(test, recurse) {\r\n        var i;\r\n        for (var i in test) {\r\n            if (test[i] === null || test[i] === \"\") {\r\n                delete test[i]\r\n            } else {\r\n                if (recurse && typeof test[i] === 'object') {\r\n                    delete_null_properties(test[i], recurse)\r\n                }\r\n            }\r\n        }\r\n        if (_.isArray(test)) {\r\n            for (i = 0; i < test.length; i += 1) {\r\n                if (test[i] === undefined) {\r\n                    test.splice(i, 1);\r\n                    i -= 1\r\n                }\r\n            }\r\n        }\r\n    }\r\n    for (j = 0; j < hdr.length; j += 1) {\r\n        if (isNaN(hdr[j].split(\"/\")[0]) || !Number.isInteger(hdr[j].split(\"/\")[0] * 1)) {\r\n            firstArray = false\r\n        }\r\n    }\r\n    if (firstArray) {\r\n        o = []\r\n    }\r\n    for (j = 0; j < hdr.length; j += 1) {\r\n        p = hdr[j].split(\"/\");\r\n        s = \"o\";\r\n        for (k = 0; k < p.length; k += 1) {\r\n            t = [];\r\n            s = s + '[\\\"' + p[k].replace(\"\\\\\", \"\\\\\\\\\").replace('\\\"', '\\\\\\\"') + '\\\"]';\r\n            if ((k < p.length - 1) && !isNaN(p[k + 1]) && Number.isInteger(p[k + 1] * 1)) {\r\n                eval(\"if (typeof \" + s + \"==\\\"undefined\\\")\" + s + \"=[]\")\r\n            } else {\r\n                if (k < p.length - 1) {\r\n                    eval(\"if (typeof \" + s + \"==\\\"undefined\\\")\" + s + \"={}\")\r\n                }\r\n            }\r\n            if (k == p.length - 1) {\r\n                eval(s + \"=v[j]\")\r\n            }\r\n        }\r\n    }\r\n    if (options.skipEmpty) {\r\n        delete_null_properties(o, true)\r\n    }\r\n    var spacing = (options.mongoDbMode || options.lineMode) ? 0 : 3;\r\n    return JSON.stringify(o, null, spacing);\r\n}\r\n\r\nfunction csvToJSONSpecial(CSV, options) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var s = \"[\\x0A\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var h = \"\";\r\n    var t = \"{\\x0A\";\r\n    var cur = \"\";\r\n    var emptyIsNull = false;\r\n    var kp;\r\n    var keyvalue;\r\n    if (options.mongoDbMode) {\r\n        s = \"\"\r\n    }\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (CSV.table.length === 0) {\r\n        if (options.mongoDbMode) {\r\n            return \"\"\r\n        }\r\n        return s + \"]\";\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    var newhdr = [];\r\n    for (j = 0; j < a.length; j += 1) {\r\n        newhdr.push(hdr[a[j] - 1])\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        s += \" \";\r\n        cur = \"[\";\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            emptyIsNull = document.getElementById(\"chknull\" + (k + 1)) && document.getElementById(\"chknull\" + (k + 1)).checked;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (!options.forceWrap && (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\" || CSV.statsCnt[k].fieldType == \"B\") || (options.autoNum && v.isNumeric()))) {\r\n                if (v.rtrim() !== \"\") {\r\n                    v = v.toNumber() + \"\";\r\n                    if (v.left(1) == getDecimalChar()) {\r\n                        v = \"0\" + v\r\n                    }\r\n                    if (v.left(2) == \"-\" + getDecimalChar()) {\r\n                        v = \"-0\" + v.substr(1)\r\n                    }\r\n                    cur += v;\r\n                } else {\r\n                    cur += 'null'\r\n                }\r\n            } else {\r\n                if (!options.forceWrap && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"L\")) {\r\n                    if (v !== \"\") {\r\n                        cur += v.toLocaleLowerCase()\r\n                    } else {\r\n                        cur += 'null'\r\n                    }\r\n                } else {\r\n                    if ((emptyIsNull && v === \"\") || (options.nullIsNull && (v.toUpperCase() == \"NULL\" || v === \"\\\\N\"))) {\r\n                        cur += \"null\"\r\n                    } else {\r\n                        cur += '\\\"' + v.toJson() + '\\\"'\r\n                    }\r\n                }\r\n            }\r\n            cur += (x < a.length - 1 ? ',' : '');\r\n        }\r\n        cur += \"]\";\r\n        s += csv2jsonObj(newhdr, JSON.parse(cur), options);\r\n        if (j < CSV.table.length - 1 && !options.mongoDbMode) {\r\n            s += \",\"\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    if (!options.mongoDbMode) {\r\n        s += \"]\"\r\n    }\r\n    if (!options.mongoDbMode && options.isKeyed) {\r\n        kp = 1;\r\n        if (document.getElementById(\"txtKeyNum\")) {\r\n            kp = document.getElementById(\"txtKeyNum\").value || \"1\";\r\n            if (isNaN(kp)) {\r\n                kp = 1\r\n            } else {\r\n                kp = +kp\r\n            }\r\n            if (kp < 1) {\r\n                kp = 1\r\n            }\r\n        }\r\n        kp = kp - 1;\r\n        a = JSON.parse(s);\r\n        s = \"\";\r\n        var newa = {};\r\n        var kn = hdr[kp];\r\n        var dups = false;\r\n        for (i = 0; i < 2; i += 1) {\r\n            newa = {};\r\n            for (j = 0; j < a.length; j += 1) {\r\n                if (kp >= CSV.table[j].length) {\r\n                    keyvalue = \"\"\r\n                } else {\r\n                    keyvalue = CSV.table[j][kp]\r\n                }\r\n                keyvalue = doTransformations(keyvalue, kp, CSV);\r\n                if (kn in a[j]) {\r\n                    delete a[j][kn]\r\n                }\r\n                if (keyvalue in newa) {\r\n                    if (i === 0) {\r\n                        dups = true;\r\n                        break\r\n                    }\r\n                    newa[keyvalue].push(a[j]);\r\n                } else {\r\n                    switch (dups) {\r\n                        case false:\r\n                            newa[keyvalue] = a[j];\r\n                            break;\r\n                        case true:\r\n                            newa[keyvalue] = [a[j]];\r\n                            break\r\n                    }\r\n                }\r\n            }\r\n            if (i === 0 && !dups) {\r\n                break\r\n            }\r\n        }\r\n        if (options.lineMode) {\r\n            a = [];\r\n            var newaa = Object.keys(newa);\r\n            for (j = 0; j < newaa.length; j += 1) {\r\n                k = newaa[j];\r\n                a.push('\\\"' + k.toJson() + '\\\"' + ':' + JSON.stringify(newa[k]))\r\n            }\r\n            return '{\\x0A' + a.join(',\\x0A') + '\\x0A}';\r\n        }\r\n        return JSON.stringify(newa, null, 3);\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction csvToJSONArray(CSV, options) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var s = \"[\\x0A\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var h = \"\";\r\n    var t = \"{\\x0A\";\r\n    var emptyIsNull = false;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (CSV.table.length === 0) {\r\n        return s + \"]\"\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    if (options.useFieldsData) {\r\n        t += \"  \\\"\" + (options.fldPropName || \"fields\") + \"\\\": [\";\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (k >= hdr.length) {\r\n                h = \"FIELD\" + k\r\n            } else {\r\n                h = hdr[k]\r\n            }\r\n            if (x > 0) {\r\n                t += \", \"\r\n            }\r\n            t += h.enclose('\\\"');\r\n        }\r\n        t += \"],\\x0A\";\r\n        t += \"  \\\"\" + (options.dataPropName || \"data\") + \"\\\": \";\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        if (a.length > 1) {\r\n            s += \"  [\"\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            emptyIsNull = document.getElementById(\"chknull\" + (k + 1)) && document.getElementById(\"chknull\" + (k + 1)).checked;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (!options.forceWrap && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\" || CSV.statsCnt[k].fieldType == \"B\")) {\r\n                if (v.trim() !== \"\") {\r\n                    v = v.toNumber() + \"\";\r\n                    if (v.left(1) == getDecimalChar()) {\r\n                        v = \"0\" + v\r\n                    }\r\n                    if (v.left(2) == \"-\" + getDecimalChar()) {\r\n                        v = \"-0\" + v.substr(1)\r\n                    }\r\n                    s += v;\r\n                } else {\r\n                    s += 'null'\r\n                }\r\n            } else {\r\n                if (!options.forceWrap && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"L\")) {\r\n                    if (v.trim() !== \"\") {\r\n                        s += v.toLocaleLowerCase()\r\n                    } else {\r\n                        s += 'null'\r\n                    }\r\n                } else {\r\n                    if ((emptyIsNull && v === \"\") || (options.nullIsNull && (v.toUpperCase() == \"NULL\" || v === \"\\\\N\"))) {\r\n                        s += \"null\"\r\n                    } else {\r\n                        s += '\\\"' + v.toJson() + '\\\"'\r\n                    }\r\n                }\r\n            }\r\n            s += (x < a.length - 1 ? ',' : '');\r\n        }\r\n        if (a.length > 1) {\r\n            s += \"  ]\"\r\n        }\r\n        if (j < CSV.table.length - 1) {\r\n            s += \",\"\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    s += \"]\";\r\n    if (options.useFieldsData) {\r\n        s = t + s + \"\\x0A}\"\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction csvToJSONColumnArray(CSV, options) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var s = \"{\\x0A\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var h = \"\";\r\n    var emptyIsNull = false;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (CSV.table.length === 0) {\r\n        return s + \"]\"\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    for (x = 0; x < a.length; x += 1) {\r\n        k = a[x] - 1;\r\n        emptyIsNull = document.getElementById(\"chknull\" + (k + 1)) && document.getElementById(\"chknull\" + (k + 1)).checked;\r\n        if (x >= hdr.length) {\r\n            h = \"FIELD\" + k\r\n        } else {\r\n            h = hdr[k]\r\n        }\r\n        s += '   \\\"' + h + '\\\":[';\r\n        var crow = 0;\r\n        for (j = 0; j < CSV.table.length; j += 1) {\r\n            crow += 1;\r\n            s += (crow > 1 ? ',' : '');\r\n            if (x >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (!options.forceWrap && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\" || CSV.statsCnt[k].fieldType == \"B\")) {\r\n                if (v.trim() !== \"\") {\r\n                    v = v.toNumber() + \"\";\r\n                    if (v.left(1) == getDecimalChar()) {\r\n                        v = \"0\" + v\r\n                    }\r\n                    if (v.left(2) == \"-\" + getDecimalChar()) {\r\n                        v = \"-0\" + v.substr(1)\r\n                    }\r\n                    s += v;\r\n                } else {\r\n                    s += 'null'\r\n                }\r\n            } else {\r\n                if (!options.forceWrap && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"L\")) {\r\n                    if (v.trim() !== \"\") {\r\n                        s += v.toLocaleLowerCase()\r\n                    } else {\r\n                        s += 'null'\r\n                    }\r\n                } else {\r\n                    if ((emptyIsNull && v === \"\") || (options.nullIsNull && (v.toUpperCase() == \"NULL\" || v === \"\\\\N\"))) {\r\n                        s += \"null\"\r\n                    } else {\r\n                        s += '\\\"' + v.toJson() + '\\\"'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        s += \"]\";\r\n        if (x < a.length - 1) {\r\n            s += \",\"\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    s += \"}\";\r\n    return s;\r\n}\r\n\r\nfunction jsonToCsv(objArray, delimiter, bIncludeHeaders, bQuotes, noMultiLines) {\r\n    var array;\r\n    var str = '';\r\n    var line = '';\r\n    var i, j;\r\n    var index;\r\n    var value;\r\n    var columns = [];\r\n    try {\r\n        array = typeof objArray != 'object' ? JSON.parse(objArray) : objArray\r\n    } catch (e) {\r\n        if (objArray.charAt(0) === \"[\" || objArray.charAt(0) === \"{\") {\r\n            array = eval(\"array=\" + objArray)\r\n        } else {\r\n            throw e\r\n        }\r\n    }\r\n    if (!_.isObject(array) || array === null || _.isEmpty(array)) {\r\n        line = \"\";\r\n        str = \"\";\r\n        if (bIncludeHeaders) {\r\n            value = 'Field1';\r\n            if (bQuotes) {\r\n                line = '\\\"' + value.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n            } else {\r\n                line = value.toCsv(delimiter, '\\\"')\r\n            }\r\n            str += line + '\\x0A';\r\n        }\r\n        if (!(array && _.isObject(array) && _.isEmpty(array))) {\r\n            if (array === null) {\r\n                value = \"\"\r\n            } else {\r\n                value = array + \"\"\r\n            }\r\n            if (noMultiLines) {\r\n                value = value.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n            }\r\n            str += (bQuotes ? '\\\"' : \"\") + (\"\" + value).toCsv(delimiter, '\\\"') + (bQuotes ? '\\\"' : \"\") + '\\x0A';\r\n        }\r\n        return str;\r\n    }\r\n    var depth = getJsonLevel(array);\r\n    if ((depth == 2) && (_.isArray(array))) {\r\n        if (bIncludeHeaders) {\r\n            value = 'Field1';\r\n            if (bQuotes) {\r\n                line += '\\\"' + value.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n            } else {\r\n                line += value.toCsv(delimiter, '\\\"')\r\n            }\r\n            str += line + '\\x0A';\r\n        }\r\n        for (i = 0; i < array.length; i += 1) {\r\n            var line = '';\r\n            value = array[i];\r\n            if (value === null) {\r\n                value = \"\"\r\n            } else {\r\n                value += \"\"\r\n            }\r\n            if (noMultiLines) {\r\n                value = value.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n            }\r\n            line += (bQuotes ? '\\\"' : \"\") + (\"\" + value).toCsv(delimiter, '\\\"') + (bQuotes ? '\\\"' : \"\");\r\n            str += line + '\\x0A';\r\n        }\r\n        return str;\r\n    }\r\n    if ((depth == 3) && (!_.isArray(array)) && (_.every(_.values(array), _.isArray))) {\r\n        array = objTransform(array)\r\n    }\r\n    if ((depth == 3) && (_.isArray(array)) && (_.every(_.values(array), _.isArray))) {\r\n        if (bIncludeHeaders) {\r\n            var head = array[0];\r\n            for (index in array[0]) {\r\n                value = 'Field' + (index * 1 + 1);\r\n                columns.push(value);\r\n                if (bQuotes) {\r\n                    line += '\\\"' + value.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n                } else {\r\n                    line += value.toCsv(delimiter, '\\\"') + delimiter\r\n                }\r\n            }\r\n            line = line.slice(0, -1);\r\n            str += line + '\\x0A';\r\n        } else {\r\n            for (index in array[0]) {\r\n                columns.push(index)\r\n            }\r\n        }\r\n        for (i = 0; i < array.length; i += 1) {\r\n            var line = '';\r\n            for (j = 0; j < columns.length; j += 1) {\r\n                value = array[i][j];\r\n                if (value === null) {\r\n                    value = \"\"\r\n                } else {\r\n                    value += \"\"\r\n                }\r\n                if (noMultiLines) {\r\n                    value = value.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n                line += (\"\" + value).toCsv(delimiter, '\\\"', '\\\"', bQuotes) + delimiter;\r\n            }\r\n            line = line.slice(0, -1 * delimiter.length);\r\n            str += line + '\\x0A';\r\n        }\r\n        return str;\r\n    }\r\n    for (; ;) {\r\n        if (_.isObject(array) && !(_.isArray(array)) && _.keys(array).length == 1 && (_.isObject(_.values(array)[0]) || (_.isArray(_.values(array)[0]) && _.isObject(_.values(array)[0][0])))) {\r\n            array = _.values(array)[0]\r\n        } else {\r\n            break\r\n        }\r\n    }\r\n    if (_.isArray(array) === false && _.isObject(array) === true) {\r\n        array = JSON.flatten(array);\r\n        array = JSON.parse('[' + JSON.stringify(array) + ']')\r\n    }\r\n    for (i = 0; i < array.length; i += 1) {\r\n        for (j = 0; j < columns.length; j += 1) {\r\n            value = array[i][columns[j]];\r\n            if (_.isArray(value) === false && _.isObject(value) === true) {\r\n                if (columns[j] in array[i]) {\r\n                    array[i][columns[j]] = JSON.flatten(value)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (_.isObject(array[0]) && _.every(_.values(array), _.isObject)) {\r\n        if (bIncludeHeaders) {\r\n            var head = array[0];\r\n            if (bQuotes) {\r\n                for (index in array[0]) {\r\n                    value = index + \"\";\r\n                    columns.push(value);\r\n                    line += '\\\"' + value.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n                }\r\n            } else {\r\n                for (index in array[0]) {\r\n                    value = index + \"\";\r\n                    columns.push(value);\r\n                    line += value.toCsv(delimiter, '\\\"') + delimiter\r\n                }\r\n            }\r\n            line = line.slice(0, -1);\r\n            str += line + '\\x0A';\r\n        } else {\r\n            for (index in array[0]) {\r\n                columns.push(index)\r\n            }\r\n        }\r\n    }\r\n    if (columns.length === 0 && _.isArray(array) === true) {\r\n        str = \"\";\r\n        if (bIncludeHeaders) {\r\n            value = 'Field1';\r\n            if (bQuotes) {\r\n                line += '\\\"' + value.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n            } else {\r\n                line += value.toCsv(delimiter, '\\\"')\r\n            }\r\n            str += line + '\\x0A';\r\n        }\r\n        for (i = 0; i < array.length; i += 1) {\r\n            var line = '';\r\n            value = array[i];\r\n            if (value === null) {\r\n                value = \"\"\r\n            } else {\r\n                value += \"\"\r\n            }\r\n            if ((value + \"\").substring(0, 15) == \"[object Object]\") {\r\n                value = JSON.valueArray(array[i]).slice(0, -1)\r\n            }\r\n            if (noMultiLines) {\r\n                value = value.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n            }\r\n            line += (bQuotes ? '\\\"' : \"\") + (\"\" + value).toCsv(delimiter, '\\\"') + (bQuotes ? '\\\"' : \"\");\r\n            str += line + '\\x0A';\r\n        }\r\n        return str;\r\n    }\r\n    for (i = 0; i < array.length; i += 1) {\r\n        var line = '';\r\n        if (bQuotes) {\r\n            for (j = 0; j < columns.length; j += 1) {\r\n                value = array[i][columns[j]];\r\n                if ((value + \"\").substring(0, 15) == \"[object Object]\") {\r\n                    value = JSON.valueArray(array[i][columns[j]]).slice(0, -1)\r\n                }\r\n                if (value === null) {\r\n                    value = \"\"\r\n                } else {\r\n                    value += \"\"\r\n                }\r\n                if (noMultiLines) {\r\n                    value = value.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n                line += '\\\"' + value.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter;\r\n            }\r\n        } else {\r\n            for (j = 0; j < columns.length; j += 1) {\r\n                value = array[i][columns[j]];\r\n                if ((value + \"\").substring(0, 15) == \"[object Object]\") {\r\n                    value = JSON.valueArray(array[i][columns[j]]).slice(0, -1)\r\n                }\r\n                if (value === null) {\r\n                    value = \"\"\r\n                } else {\r\n                    value += \"\"\r\n                }\r\n                if (noMultiLines) {\r\n                    value = value.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n                line += (\"\" + value).toCsv(delimiter, '\\\"') + delimiter;\r\n            }\r\n        }\r\n        line = line.slice(0, -1 * delimiter.length);\r\n        str += line + '\\x0A';\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction csvToMarkdown(CSV, options) {\r\n    var j = 0;\r\n    var k;\r\n    var col;\r\n    var d;\r\n    var s = \"\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var ruler = \"\";\r\n    var ruler10 = \"\";\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    var centerAdjust = false;\r\n    var rightAdjust = false;\r\n    if (!options) {\r\n        options = {}\r\n    }\r\n    if (typeof options.addsep === 'undefined' || options.addsep === null) {\r\n        options.addsep = \" \"\r\n    }\r\n    if (options.addTable && (options.addsep === \"\" || options.addsep === \" \")) {\r\n        options.addsep = \"|\"\r\n    }\r\n    options.addsep = \"|\";\r\n    var hdr = getCsvHeader(CSV) || [];\r\n    var stats = getCsvColLength(CSV) || [];\r\n    var linewidth = 0;\r\n    var rulerSize = 0;\r\n    var rulerdash = \"\";\r\n    var ladj = 0;\r\n    var t = \"\";\r\n    for (x = 0; x < a.length; x += 1) {\r\n        k = a[x] - 1;\r\n        if (CSV.isFirstRowHeader && hdr[k] && hdr[k].length > stats[k]) {\r\n            stats[k] = hdr[k].length\r\n        }\r\n        linewidth += stats[k] + 1;\r\n    }\r\n    if (options.addLineNumbers) {\r\n        linewidth += (\"\" + CSV.table.length).length + 3\r\n    }\r\n    s += options.addsep;\r\n    if (options.addLineNumbers) {\r\n        s += \" # \".rpad((\"\" + CSV.table.length).length, ' ', false) + options.addsep\r\n    }\r\n    for (x = 0; x < a.length; x += 1) {\r\n        ladj = 0;\r\n        k = a[x] - 1;\r\n        if (x > 0) {\r\n            s += options.addsep\r\n        }\r\n        if (k >= hdr.length || !CSV.isFirstRowHeader) {\r\n            v = \"\"\r\n        } else {\r\n            v = hdr[k].replace(/\\r\\n|\\r|\\n/g, ' ')\r\n        }\r\n        if (v.indexOf('|') > -1) {\r\n            v = v.replace(/\\|/g, '&#124;');\r\n            ladj += (v.split('&#124;').length - 1) * 5\r\n        }\r\n        if (((stats[k] + ladj) < 3)) {\r\n            ladj += (3 - (stats[k] + ladj))\r\n        }\r\n        s += v.rpad(stats[k] + ladj);\r\n    }\r\n    s += options.addsep + \"\\x0A\";\r\n    if (options.addLineNumbers) {\r\n        s += options.addsep + \"---\".rpad((\"\" + CSV.table.length).length, ' ', false)\r\n    }\r\n    s += options.addsep;\r\n    for (x = 0; x < a.length; x += 1) {\r\n        k = a[x] - 1;\r\n        rightAdjust = false;\r\n        centerAdjust = false;\r\n        if (document.getElementById(\"chkrjust\" + (k + 1))) {\r\n            if (document.getElementById(\"chkrjust\" + (k + 1)).checked) {\r\n                rightAdjust = true\r\n            }\r\n        }\r\n        if (document.getElementById(\"chkcjust\" + (k + 1))) {\r\n            if (document.getElementById(\"chkcjust\" + (k + 1)).checked) {\r\n                centerAdjust = true\r\n            }\r\n        }\r\n        if (x > 0) {\r\n            s += options.addsep\r\n        }\r\n        t = \"---\".rpad(k < stats.length ? stats[k] : hdr[k].length, '-', false);\r\n        if (centerAdjust) {\r\n            t = ':' + t.substr(0, t.length - 2) + ':'\r\n        } else {\r\n            if (rightAdjust) {\r\n                t = t.substr(0, t.length - 1) + ':'\r\n            }\r\n        }\r\n        s += t;\r\n    }\r\n    s += options.addsep + \"\\x0A\";\r\n    var crow = 0;\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        crow += 1;\r\n        s += options.addsep;\r\n        if (options.addLineNumbers) {\r\n            s += (\"\" + crow).rpad(Math.max(3, (\"\" + CSV.table.length).length), ' ', false) + options.addsep\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            ladj = 0;\r\n            k = a[x] - 1;\r\n            if (x > 0) {\r\n                s += options.addsep\r\n            }\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            if (options.nullIsEmpty && (v.toUpperCase() == \"NULL\" || v === \"\\\\N\")) {\r\n                v = \"\"\r\n            }\r\n            rightAdjust = false;\r\n            centerAdjust = false;\r\n            v = doTransformations(v, k, CSV);\r\n            if (v.indexOf('|') > -1) {\r\n                v = v.replace(/\\|/g, '&#124;');\r\n                ladj += (v.split('&#124;').length - 1) * 5\r\n            }\r\n            if (document.getElementById(\"chkrjust\" + (k + 1))) {\r\n                if (document.getElementById(\"chkrjust\" + (k + 1)).checked) {\r\n                    rightAdjust = true\r\n                }\r\n            }\r\n            if (document.getElementById(\"chkcjust\" + (k + 1))) {\r\n                if (document.getElementById(\"chkcjust\" + (k + 1)).checked) {\r\n                    centerAdjust = true\r\n                }\r\n            }\r\n            if (centerAdjust) {\r\n                v = v.replace(/\\r\\n|\\r|\\n/g, ' ').cjust(stats[k])\r\n            } else {\r\n                if (rightAdjust) {\r\n                    v = v.replace(/\\r\\n|\\r|\\n/g, ' ').rjust(stats[k])\r\n                } else {\r\n                    v = v.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n            }\r\n            if (((stats[k] + ladj) < 3)) {\r\n                ladj += (3 - (stats[k] + ladj))\r\n            }\r\n            s += v.rpad(stats[k] + ladj, ' ', false);\r\n        }\r\n        var z;\r\n        if (options.addTable || options.addMarkdown) {\r\n            s += options.addsep\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction csvToFixed(CSV, options) {\r\n    var j = 0;\r\n    var k;\r\n    var col;\r\n    var d;\r\n    var s = \"\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var ruler = \"\";\r\n    var ruler10 = \"\";\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    var centerAdjust = false;\r\n    var rightAdjust = false;\r\n    if (!options) {\r\n        options = {}\r\n    }\r\n    if (typeof options.addsep === 'undefined' || options.addsep === null) {\r\n        options.addsep = \" \"\r\n    }\r\n    if (options.addTable && (options.addsep === \"\" || options.addsep === \" \")) {\r\n        options.addsep = \"|\"\r\n    }\r\n    if (CSV.table.length === 0) {\r\n        return s\r\n    }\r\n    var hdr = getCsvHeader(CSV) || [];\r\n    var stats = getCsvColLength(CSV) || [];\r\n    var linewidth = 0;\r\n    var rulerSize = 0;\r\n    var rulerdash = \"\";\r\n    var ladj = 0;\r\n    if (!('pad' in options) || !options.pad) {\r\n        options.pad = ' '\r\n    }\r\n    if (options.addTable) {\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            if (CSV.isFirstRowHeader && hdr[k] && hdr[k].length > stats[k]) {\r\n                stats[k] = hdr[k].length\r\n            }\r\n            linewidth += stats[k] + 1;\r\n        }\r\n        if (options.addLineNumbers) {\r\n            linewidth += (\"\" + CSV.table.length).length + 1\r\n        }\r\n        s += \"+\".rpad(linewidth, \"-\") + \"+\\x0A\";\r\n        if (CSV.isFirstRowHeader) {\r\n            s += options.addsep;\r\n            if (options.addLineNumbers) {\r\n                s += \"#\".rpad((\"\" + CSV.table.length).length) + options.addsep\r\n            }\r\n            for (x = 0; x < a.length; x += 1) {\r\n                ladj = 0;\r\n                k = a[x] - 1;\r\n                if (x > 0) {\r\n                    s += options.addsep\r\n                }\r\n                if (k >= hdr.length || !CSV.isFirstRowHeader) {\r\n                    v = \"\"\r\n                } else {\r\n                    v = hdr[k].replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n                s += v.rpad(stats[k] + ladj, options.pad);\r\n            }\r\n            s += options.addsep + \"\\x0A\";\r\n            s += \"+\".rpad(linewidth, \"-\") + \"+\\x0A\";\r\n        }\r\n    }\r\n    var crow = 0;\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        crow += 1;\r\n        if (options.addTable) {\r\n            s += options.addsep\r\n        }\r\n        if (options.addLineNumbers) {\r\n            s += (\"\" + crow).rpad((\"\" + CSV.table.length).length) + options.addsep\r\n        }\r\n        for (x = 0; x < a.length; x += 1) {\r\n            ladj = 0;\r\n            k = a[x] - 1;\r\n            if (x > 0) {\r\n                s += options.addsep\r\n            }\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k]\r\n            }\r\n            if (options.nullIsEmpty && (v.toUpperCase() == \"NULL\" || v === \"\\\\N\")) {\r\n                v = \"\"\r\n            }\r\n            rightAdjust = false;\r\n            centerAdjust = false;\r\n            v = doTransformations(v, k, CSV);\r\n            if (document.getElementById(\"chkrjust\" + (k + 1))) {\r\n                if (document.getElementById(\"chkrjust\" + (k + 1)).checked) {\r\n                    rightAdjust = true\r\n                }\r\n            }\r\n            if (document.getElementById(\"chkcjust\" + (k + 1))) {\r\n                if (document.getElementById(\"chkcjust\" + (k + 1)).checked) {\r\n                    centerAdjust = true\r\n                }\r\n            }\r\n            if (centerAdjust) {\r\n                v = v.replace(/\\r\\n|\\r|\\n/g, ' ').cjust(stats[k])\r\n            } else {\r\n                if (rightAdjust) {\r\n                    v = v.replace(/\\r\\n|\\r|\\n/g, ' ').rjust(stats[k])\r\n                } else {\r\n                    v = v.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n            }\r\n            s += v.rpad(stats[k] + ladj, options.pad);\r\n        }\r\n        var z;\r\n        if (!options.addTable && options.addRuler && crow == 1) {\r\n            for (z = 1; z <= s.length; z += 1) {\r\n                ruler += (\"\" + z).right(1)\r\n            }\r\n            if (s.length >= 10) {\r\n                for (z = 1, x = 10; x <= s.length; x += 10, z += 1) {\r\n                    ruler10 += \"         \" + (\"\" + z).right(1)\r\n                }\r\n                ruler10 = ruler10.rpad(ruler.length);\r\n                ruler = ruler10 + \"\\x0A\" + ruler;\r\n            }\r\n        }\r\n        if (options.addTable) {\r\n            s += options.addsep\r\n        }\r\n        s += \"\\x0A\";\r\n        if (options.addTable && options.addLineSep && !options.addMardown) {\r\n            s += \"+\".rpad(linewidth, \"-\") + \"+\\x0A\"\r\n        }\r\n    }\r\n    if (options.addTable && !options.addLineSep && !options.addMardown) {\r\n        s += \"+\".rpad(linewidth, \"-\") + \"+\\x0A\"\r\n    }\r\n    if (options.addRuler && !options.addTable) {\r\n        a = ruler.split(\"\\x0A\");\r\n        rulerdash = a[a.length - 1].replace(/[12346789]/g, \"-\").replace(/0/g, '|').replace(/5/g, '+');\r\n        s = ruler + \"\\x0A\" + rulerdash + \"\\x0A\" + s\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction fixedToCsv(input, fieldDef, delimiter, bIncludeHeaders, bQuotes, nowrap, notrim) {\r\n    var fa = fieldDef.split('|') || [];\r\n    var str = '';\r\n    var line = '';\r\n    var fld = [];\r\n    var header = \"\";\r\n    var array = input.split(/\\n|\\r|\\r\\n/gmi);\r\n    var i, j;\r\n    if (array[array.length - 1] === \"\") {\r\n        array.pop()\r\n    }\r\n    if (bIncludeHeaders) {\r\n        for (i = 0; i < fa.length; i += 1) {\r\n            fld = fa[i].split(',');\r\n            if (fld.length > 2) {\r\n                header = fld[2]\r\n            } else {\r\n                header = \"F\" + (i + 1)\r\n            }\r\n            if (bQuotes) {\r\n                str += '\\\"' + header.replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n            } else {\r\n                str += header.toCsv(delimiter, '\\\"') + delimiter\r\n            }\r\n        }\r\n        str = str.slice(0, -1 * delimiter.length) + \"\\x0A\";\r\n    }\r\n    var p = 0;\r\n    var len = 0;\r\n    var head = \"\";\r\n    for (i = 0; i < array.length; i += 1) {\r\n        line = \"\";\r\n        if (array[i] === \"\") {\r\n            continue\r\n        }\r\n        for (j = 0; j < fa.length; j += 1) {\r\n            fld = fa[j].split(',') || [];\r\n            if (fld.length > 0) {\r\n                p = fld[0] - 1\r\n            } else {\r\n                p = 0\r\n            }\r\n            if (fld.length > 1) {\r\n                len = fld[1]\r\n            } else {\r\n                len = 0\r\n            }\r\n            if (fld.length > 2) {\r\n                head = fld[2]\r\n            } else {\r\n                head = \"f\" + (j + 1)\r\n            }\r\n            if (notrim) {\r\n                value = array[i].substr(p, len)\r\n            } else {\r\n                value = array[i].substr(p, len).trim()\r\n            }\r\n            if (value === null) {\r\n                value = \"\"\r\n            } else {\r\n                value += \"\"\r\n            }\r\n            if (bQuotes) {\r\n                line += '\\\"' + (\"\" + value).replace(/\"/g, '\\\"\\\"') + '\\\"' + delimiter\r\n            } else {\r\n                if (nowrap) {\r\n                    line += (\"\" + value) + delimiter\r\n                } else {\r\n                    line += (\"\" + value).toCsv(delimiter, '\\\"') + delimiter\r\n                }\r\n            }\r\n        }\r\n        line = line.slice(0, -1 * delimiter.length);\r\n        str += line + '\\x0A';\r\n    }\r\n    return str;\r\n}\r\n\r\nfunction csvToMulti(CSV, sep, addFieldName, addFieldNameSep, addLineAfterField, addXSpaces, noMultiLines, bQuotes, csvFormat, nullIsNull) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var s = \"\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v = \"\";\r\n    var fheader = \"\";\r\n    addXSpaces = addXSpaces || \"0\";\r\n    if (isNaN(\"0\" + addXSpaces)) {\r\n        addXSpaces = \"0\"\r\n    }\r\n    a = getFldPosArr(CSV);\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    addFieldNameSep = addFieldNameSep || '';\r\n    if (CSV.table.length === 0) {\r\n        return s\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        for (x = 0; x < a.length; x += 1) {\r\n            fheader = \"\";\r\n            k = a[x] - 1;\r\n            if (k >= CSV.table[j].length) {\r\n                v = \"\"\r\n            } else {\r\n                v = CSV.table[j][k] + \"\";\r\n                if (v && noMultiLines) {\r\n                    v = v.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                }\r\n            }\r\n            if (v && nullIsNull) {\r\n                v = v.replace(/^null$/gmi, '')\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (csvFormat) {\r\n                v = v.toCsv(sep, CSV.outputQuote, CSV.outputQuote, bQuotes)\r\n            }\r\n            if (addFieldName) {\r\n                if (csvFormat) {\r\n                    if (k >= CSV.arHeaderRow.length) {\r\n                        fheader = (\"\".rpad(addXSpaces) + \"Field-\" + (k + 1)).toCsv(sep, CSV.outputQuote, CSV.outputQuote, bQuotes) + addFieldNameSep\r\n                    } else {\r\n                        fheader = (\"\".rpad(addXSpaces) + CSV.arHeaderRow[k].replace(/\\r\\n|\\r|\\n/g, ' ')).toCsv(sep, CSV.outputQuote, CSV.outputQuote, bQuotes) + addFieldNameSep\r\n                    }\r\n                } else {\r\n                    if (k >= CSV.arHeaderRow.length) {\r\n                        fheader = \"\".rpad(addXSpaces) + \"Field-\" + (k + 1) + addFieldNameSep\r\n                    } else {\r\n                        fheader = \"\".rpad(addXSpaces) + CSV.arHeaderRow[k].replace(/\\r\\n|\\r|\\n/g, ' ') + addFieldNameSep\r\n                    }\r\n                }\r\n            }\r\n            s += fheader + v + \"\\x0A\";\r\n            if (addLineAfterField) {\r\n                s += \"\\x0A\"\r\n            }\r\n        }\r\n        if (!csvFormat) {\r\n            s += sep + \"\\x0A\"\r\n        }\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction csvToKml(CSV, nameCol, descCol, latCol, longCol, altCol, descCol2) {\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var desc2 = \"\";\r\n    var altitude = \"\";\r\n    var s = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\x0A\";\r\n    s += \"<kml xmlns=\\\"http://earth.google.com/kml/2.0\\\">\\x0A\";\r\n    s += \"<Document>\\x0A\";\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (CSV.table.length === 0) {\r\n        return s + \"</Document></kml>\"\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    if (descCol2.trim() === \"\" || isNaN(descCol2) || (descCol2 * 1 < 1 || descCol2 * 1 > CSV.table[0].length)) {\r\n        descCol2 = \"\"\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        s += \"<Placemark>\\x0A\";\r\n        desc2 = \"\";\r\n        for (k = 0; k < CSV.table[j].length; k += 1) {\r\n            if (k >= hdr.length) {\r\n                break\r\n            }\r\n            if (!isNaN(latCol) && k == (latCol - 1)) {\r\n                continue\r\n            }\r\n            if (!isNaN(longCol) && k == (longCol - 1)) {\r\n                continue\r\n            }\r\n            if (!isNaN(altCol) && k == (altCol - 1)) {\r\n                continue\r\n            }\r\n            if (!isNaN(nameCol) && k == (nameCol - 1)) {\r\n                hdr[k] = \"name\"\r\n            } else {\r\n                if (!isNaN(descCol) && k == (descCol - 1)) {\r\n                    hdr[k] = \"description\";\r\n                    if (descCol2 !== \"\") {\r\n                        desc2 = \" \" + CSV.table[j][descCol2 - 1]\r\n                    }\r\n                } else {\r\n                    continue\r\n                }\r\n            }\r\n            v = CSV.table[j][k] ? CSV.table[j][k] : \"\";\r\n            v = doTransformations(v, k, CSV);\r\n            s += \"<\" + hdr[k] + \">\" + v.toHtml() + desc2.toHtml() + \"</\" + hdr[k] + \">\\x0A\";\r\n        }\r\n        if (!isNaN(latCol) && !isNaN(longCol) && latCol.length > 0 && longCol.length > 0 && latCol * 1 <= CSV.table[j].length && longCol * 1 <= CSV.table[j].length && CSV.table[j][latCol * 1 - 1] && CSV.table[j][longCol * 1 - 1]) {\r\n            if (altCol !== \"\" && !isNaN(altCol) && altCol * 1 <= CSV.table[j].length && CSV.table[j][altCol * 1 - 1]) {\r\n                altitude = doTransformations(CSV.table[j][altCol * 1 - 1], altCol * 1 - 1, CSV)\r\n            } else {\r\n                altitude = \"0\"\r\n            }\r\n            s += \"<Point><coordinates>\";\r\n            s += doTransformations(CSV.table[j][longCol - 1], longCol - 1, CSV) + \",\" + doTransformations(CSV.table[j][latCol - 1], latCol - 1, CSV) + \",\" + altitude;\r\n            s += \"</coordinates></Point>\\x0A\";\r\n        }\r\n        s += \"</Placemark>\\x0A\";\r\n    }\r\n    s += \"</Document>\\x0A</kml>\";\r\n    return s;\r\n}\r\n\r\nfunction csvToCsv(CSV, options) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (CSV.table.length === 0) {\r\n        return \"\"\r\n    }\r\n    if (!options) {\r\n        options = {}\r\n    }\r\n    var delimiter = options.delimiter;\r\n    var headingSpecified = options.headingSpecified;\r\n    var excelForceMode = options.excelForceMode;\r\n    var defaultHeader = options.defaultHeader;\r\n    var noMultiLines = options.noMultiLines;\r\n    var bQuotes = options.bQuotes;\r\n    var nullIsNull = options.nullIsNull;\r\n    var neverEnclose = options.neverEnclose;\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var s = \"\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v;\r\n    a = getFldPosArr(CSV);\r\n    if (headingSpecified || defaultHeader) {\r\n        hdr = getCsvHeader(CSV);\r\n        for (x = 0; x < a.length; x += 1) {\r\n            j = a[x] - 1;\r\n            if (x > 0) {\r\n                s += delimiter\r\n            }\r\n            s += ((j >= hdr.length ? \"\" : hdr[j])).toCsv(delimiter, CSV.outputQuote, CSV.outputQuote);\r\n        }\r\n        if (s !== \"\") {\r\n            s += \"\\x0A\"\r\n        }\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        for (x = 0; x < a.length; x += 1) {\r\n            k = a[x] - 1;\r\n            v = CSV.table[j][k] ? CSV.table[j][k] : \"\";\r\n            if (v && nullIsNull) {\r\n                v = v.replace(/^null$/gmi, '')\r\n            }\r\n            if (v && noMultiLines) {\r\n                v = v.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (v !== \"\" && 'dateOutFormat' in options && options.dateOutFormat !== \"\" && CSV.statsCnt[k] && CSV.statsCnt[k].fieldType == \"D\") {\r\n                var vv = v;\r\n                try {\r\n                    var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                } catch (e) {\r\n                    v = vv\r\n                }\r\n            }\r\n            if (excelForceMode && v !== \"\") {\r\n                if (v.indexOf(',') < 0 && v.indexOf('\\x0A') < 0 && v.indexOf('\\x0D') < 0) {\r\n                    s += \"=\" + v.toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, true)\r\n                } else {\r\n                    s += ('=' + v.toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, true)).toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, true)\r\n                }\r\n            } else {\r\n                if (!bQuotes && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                    if (v) {\r\n                        s += v\r\n                    } else {\r\n                        s += ''\r\n                    }\r\n                } else {\r\n                    if (neverEnclose) {\r\n                        s += v.toCsv(delimiter, \"\", \"\", false)\r\n                    } else {\r\n                        s += v.toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, bQuotes)\r\n                    }\r\n                }\r\n            }\r\n            s += (x < a.length - 1 ? delimiter : '');\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction transposeCsv(CSV, delimiter, headingSpecified, excelForceMode, defaultHeader, noMultiLines, bQuotes) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (CSV.table.length === 0) {\r\n        return \"\"\r\n    }\r\n    var j = 0,\r\n        k, col;\r\n    var hdr;\r\n    var s = \"\";\r\n    var a = [];\r\n    var x = 0;\r\n    var v;\r\n    a = getFldPosArr(CSV);\r\n    for (x = 0; x < a.length; x += 1) {\r\n        if (headingSpecified || defaultHeader) {\r\n            hdr = getCsvHeader(CSV);\r\n            j = a[x] - 1;\r\n            s += hdr[j].toCsv(delimiter, CSV.outputQuote);\r\n            if (CSV.table.length > 0) {\r\n                s += delimiter\r\n            }\r\n        }\r\n        for (j = 0; j < CSV.table.length; j += 1) {\r\n            k = a[x] - 1;\r\n            v = CSV.table[j][k] ? CSV.table[j][k] : \"\";\r\n            if (v && noMultiLines) {\r\n                v = v.replace(/\\r\\n|\\r|\\n/g, ' ')\r\n            }\r\n            v = doTransformations(v, k, CSV);\r\n            if (excelForceMode && v !== \"\") {\r\n                if (v.indexOf(',') < 0) {\r\n                    s += \"=\" + v.toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, excelForceMode)\r\n                } else {\r\n                    s += '\\\"=\\\"' + v.toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, excelForceMode) + '\\\"\\\"'\r\n                }\r\n            } else {\r\n                if (!bQuotes && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\")) {\r\n                    if (v) {\r\n                        s += v\r\n                    } else {\r\n                        s += ''\r\n                    }\r\n                } else {\r\n                    s += v.toCsv(delimiter, CSV.outputQuote, CSV.outputQuote, bQuotes)\r\n                }\r\n            }\r\n            s += (j < CSV.table.length - 1 ? delimiter : '');\r\n        }\r\n        s += \"\\x0A\";\r\n    }\r\n    return s;\r\n}\r\n\r\nfunction getCsvColLength(CSV) {\r\n    var j = 0,\r\n        k = 0;\r\n    var n = 0;\r\n    var d = 0;\r\n    var stats = [];\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (CSV.table.length === 0) {\r\n        return stats\r\n    }\r\n    for (k = 0; k < CSV.maxColumnsFound; k += 1) {\r\n        stats.push(0)\r\n    }\r\n    for (j = 0; j < CSV.table.length; j += 1) {\r\n        for (k = 0; k < stats.length; k += 1) {\r\n            if (k >= CSV.table[j].length) {\r\n                continue\r\n            }\r\n            if (CSV.table[j][k].length > stats[k]) {\r\n                stats[k] = CSV.table[j][k].length\r\n            }\r\n            if (document.getElementById('fdecimals' + (k + 1))) {\r\n                d = document.getElementById('fdecimals' + (k + 1)).value;\r\n                if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\" || CSV.statsCnt[k].fieldType == \"B\")) {\r\n                    if (isNaN(d)) {\r\n                        d = 0\r\n                    } else {\r\n                        d = d * 1\r\n                    }\r\n                    if (CSV.table[j][k].trim() !== \"\") {\r\n                        n = (CSV.table[j][k].toNumber().toFixed(d) + \"\").length;\r\n                        if (n > stats[k]) {\r\n                            stats[k] = n\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (d.trim() !== \"\" && CSV.statsCnt[k] && CSV.table[j][k].trim() !== \"\" && (CSV.statsCnt[k].fieldType == \"D\" || (CSV.statsCnt[k].dateCnt - CSV.statsCnt[k].emptyCnt) / CSV.dataRowsFound >= 0.9)) {\r\n                        try {\r\n                            var vv = (moment(CSV.table[j][k], CSV.dateformat[k]).format(d));\r\n                            var n = vv.length;\r\n                            if (n > stats[k]) {\r\n                                stats[k] = n\r\n                            }\r\n                        } catch (e) { }\r\n                    }\r\n                }\r\n            }\r\n            if (document.getElementById('fpadsize' + (k + 1))) {\r\n                n = document.getElementById('fpadsize' + (k + 1)).value;\r\n                if (isNaN(n)) {\r\n                    n = 0\r\n                } else {\r\n                    n = n * 1\r\n                }\r\n                if (n > 0) {\r\n                    stats[k] = n\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return stats;\r\n}\r\n\r\nfunction isSqlKeywords() {\r\n    return [\"ACTION\", \"ADD\", \"AFTER\", \"ALL\", \"ALTER\", \"ANALYZE\", \"AND\", \"AS\", \"ASC\", \"ATTACH\", \"AUTOINCREMENT\", \"BEFORE\", \"BEGIN\", \"BETWEEN\", \"BY\", \"CASCADE\", \"CASE\", \"CAST\", \"CHECK\", \"COLLATE\", \"COLUMN\", \"COMMIT\", \"CONFLICT\", \"CONSTRAINT\", \"CREATE\", \"CROSS\", \"CURRENT_DATE\", \"CURRENT_TIME\", \"CURRENT_TIMESTAMP\", \"DATABASE\", \"DEFAULT\", \"DEFERRABLE\", \"DEFERRED\", \"DELETE\", \"DESC\", \"DETACH\", \"DISTINCT\", \"DROP\", \"EACH\", \"ELSE\", \"END\", \"ESCAPE\", \"EXCEPT\", \"EXCLUSIVE\", \"EXISTS\", \"EXPLAIN\", \"FAIL\", \"FOR\", \"FOREIGN\", \"FROM\", \"FULL\", \"GLOB\", \"GROUP\", \"HAVING\", \"IF\", \"IGNORE\", \"IMMEDIATE\", \"IN\", \"INDEX\", \"INDEXED\", \"INITIALLY\", \"INNER\", \"INSERT\", \"INSTEAD\", \"INTERSECT\", \"INTO\", \"IS\", \"ISNULL\", \"JOIN\", \"KEY\", \"LEFT\", \"LIKE\", \"LIMIT\", \"MATCH\", \"NATURAL\", \"NO\", \"NOT\", \"NOTNULL\", \"NULL\", \"OF\", \"OFFSET\", \"ON\", \"OR\", \"ORDER\", \"OUTER\", \"PLAN\", \"PRAGMA\", \"PRIMARY\", \"QUERY\", \"RAISE\", \"RECURSIVE\", \"REFERENCES\", \"REGEXP\", \"REINDEX\", \"RELEASE\", \"RENAME\", \"REPLACE\", \"RESTRICT\", \"RIGHT\", \"ROLLBACK\", \"ROW\", \"SAVEPOINT\", \"SELECT\", \"SET\", \"SUM\", \"SYSDATE\", \"TABLE\", \"TEMP\", \"TEMPORARY\", \"THEN\", \"TO\", \"TRANSACTION\", \"TRIGGER\", \"UNION\", \"UNIQUE\", \"UPDATE\", \"USING\", \"VACUUM\", \"VALUES\", \"VIEW\", \"VIRTUAL\", \"WHEN\", \"WHERE\", \"WITH\", \"WITHOUT\"]\r\n}\r\n\r\nfunction csvToSql(CSV, operation, options) {\r\n    var j = 0,\r\n        k, i, col, n, m, d, row, cnt = 0;\r\n    var hdr;\r\n    var s = \"\";\r\n    var tp = \"\";\r\n    var seqtype = \"\";\r\n    var v = \"\";\r\n    var tem = \"\";\r\n    var cv = \"\";\r\n    var incl = [];\r\n    var usrhdr = [];\r\n    var fsize = [];\r\n    var fdec = [];\r\n    var freq = [];\r\n    var temValuesSet = false;\r\n    var where = \"\";\r\n    var keys = [];\r\n    var keycnt = 0;\r\n    var fldpad = 0;\r\n    var useNullForEmpty = false;\r\n    var batch = 0;\r\n    var includeCnt = 0;\r\n    var includeNotKeyCnt = 0;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    operation = operation || \"I\";\r\n    options.newlines = options.newlines || false;\r\n    if (!(\"dualNeeded\" in options)) {\r\n        options.dualNeeded = false\r\n    }\r\n    if (!(\"batchSize\" in options) || options.batchSize.trim() === \"\" || isNaN(options.batchSize)) {\r\n        options.batchSize = Number.MAX_VALUE\r\n    }\r\n    if (!(\"useTerseValuesSize\" in options) || options.useTerseValuesSize.trim() === \"\" || isNaN(options.useTerseValuesSize)) {\r\n        options.useTerseValuesSize = Number.MAX_VALUE\r\n    }\r\n    if (!options.useTerseValues) {\r\n        options.useTerseValuesSize = \"\"\r\n    }\r\n    hdr = getCsvHeader(CSV);\r\n    for (k = 0; k < hdr.length; k += 1) {\r\n        usrhdr[k] = hdr[k].replace(/\\s+/g, '_');\r\n        if (usrhdr[k].length > fldpad) {\r\n            fldpad = usrhdr[k].length\r\n        }\r\n        keys[k] = false;\r\n        fsize[k] = fdec[k] = \"\";\r\n        if (document.getElementById(\"fkey\" + (k + 1))) {\r\n            if (document.getElementById(\"fkey\" + (k + 1)).checked) {\r\n                keycnt += 1;\r\n                keys[k] = true\r\n            }\r\n        }\r\n        if (document.getElementById(\"fname\" + (k + 1))) {\r\n            usrhdr[k] = document.getElementById(\"fname\" + (k + 1)).value.replace(/\\s+/g, '_')\r\n        }\r\n        if (document.getElementById(\"freq\" + (k + 1))) {\r\n            freq[k] = document.getElementById(\"freq\" + (k + 1)).checked\r\n        }\r\n        if (document.getElementById(\"fsize\" + (k + 1))) {\r\n            fsize[k] = document.getElementById(\"fsize\" + (k + 1)).value.trim();\r\n            if (!isNaN(fsize[k])) {\r\n                fsize[k] *= 1\r\n            } else {\r\n                fsize[k] = 30\r\n            }\r\n            if (fsize[k] < 1) {\r\n                fsize[k] = \"\"\r\n            }\r\n        } else {\r\n            fsize[k] = 30\r\n        }\r\n        if (document.getElementById(\"fdec\" + (k + 1))) {\r\n            fdec[k] = document.getElementById(\"fdec\" + (k + 1)).value.trim();\r\n            if (!isNaN(fdec[k])) {\r\n                fdec[k] *= 1;\r\n                if (fdec[k] < 0) {\r\n                    fdec[k] = \"\"\r\n                }\r\n            } else {\r\n                fdec[k] = \"\"\r\n            }\r\n        }\r\n        if (document.getElementById(\"finc\" + (k + 1))) {\r\n            if (document.getElementById(\"finc\" + (k + 1)).checked) {\r\n                incl[k] = true;\r\n                includeCnt += 1\r\n            } else {\r\n                incl[k] = false\r\n            }\r\n        } else {\r\n            incl[k] = true;\r\n            includeCnt += 1\r\n        }\r\n    }\r\n    if (hdr.length === 0) {\r\n        return \"\"\r\n    }\r\n    if (includeCnt === 0 && operation == \"S\") {\r\n        return \"\"\r\n    }\r\n    if (options.tableName.indexOf(' ') > 0 && options.tableName.charAt(0) != \"[\" && options.tableName.charAt(0) != \"`\") {\r\n        options.tableName = '\\\"' + options.tableName + '\\\"'\r\n    }\r\n    if (options.dropTable) {\r\n        s += \"DROP \" + (operation === \"S\" ? \"VIEW \" : \"TABLE \") + (options.dropExists ? \"IF EXISTS \" : \"\") + options.tableName + \";\\x0A\"\r\n    }\r\n    if (options.createTable && operation != \"S\") {\r\n        var savnewlines = options.newlines;\r\n        options.newlines = true;\r\n        s += \"CREATE TABLE \" + (options.createNotExists ? \"IF NOT EXISTS \" : \"\") + options.tableName + \"(\";\r\n        if (options.newlines) {\r\n            s += \"\\x0A\"\r\n        }\r\n        for (n = k = 0; k < hdr.length; k += 1, n += 1) {\r\n            if (options.newlines && n > 0) {\r\n                s += \"\\x0A\"\r\n            }\r\n            if (n > 0) {\r\n                s += \"  ,\"\r\n            } else {\r\n                s += \"   \"\r\n            }\r\n            s += usrhdr[k].rpad(fldpad);\r\n            tp = \"VC\";\r\n            if (k < CSV.statsCnt.length) {\r\n                tp = CSV.statsCnt[k].fieldType\r\n            }\r\n            if (document.getElementById(\"ftype\" + (k + 1))) {\r\n                tp = document.getElementById(\"ftype\" + (k + 1)).value\r\n            }\r\n            switch (tp) {\r\n                case \"B\":\r\n                    s += \" BIT \";\r\n                    break;\r\n                case \"L\":\r\n                    s += \" BOOLEAN \";\r\n                    break;\r\n                case \"NR\":\r\n                case \"N\":\r\n                    if (tp == \"N\") {\r\n                        s += \" NUMERIC\"\r\n                    } else {\r\n                        s += \" NUMBER\"\r\n                    }\r\n                    if (CSV.statsCnt.length > 0) {\r\n                        m = CSV.statsCnt[k].fieldPrec + CSV.statsCnt[k].fieldDecs;\r\n                        d = CSV.statsCnt[k].fieldDecs\r\n                    } else {\r\n                        m = 0;\r\n                        d = fdec[k] ? fdec[k] : 0\r\n                    }\r\n                    if (fsize[k] && fsize[k] > m) {\r\n                        m = fsize[k]\r\n                    }\r\n                    if (m !== \"\") {\r\n                        s += \"(\" + m + \",\" + d + \")\"\r\n                    } else {\r\n                        s += \" \"\r\n                    }\r\n                    break;\r\n                case \"BI\":\r\n                    s += \" BIGINT \";\r\n                    break;\r\n                case \"IT\":\r\n                    s += \" INT \";\r\n                    break;\r\n                case \"I\":\r\n                    s += \" INTEGER \";\r\n                    break;\r\n                case \"M\":\r\n                    s += \"MONEY\";\r\n                    break;\r\n                case \"S\":\r\n                    s += \" SERIAL \";\r\n                    break;\r\n                case \"D\":\r\n                    s += \" DATE \";\r\n                    break;\r\n                case \"DT\":\r\n                    s += \" DATETIME \";\r\n                    break;\r\n                case \"TX\":\r\n                    s += \" TEXT \";\r\n                    break;\r\n                case \"NVC\":\r\n                    s += \" NVARCHAR\" + (fsize[k] ? (\"(\" + fsize[k] + \")\") : \"\");\r\n                    break;\r\n                case \"VC\":\r\n                    s += \" VARCHAR\" + (fsize[k] ? (\"(\" + fsize[k] + \")\") : \"\");\r\n                    break;\r\n                case \"VCC\":\r\n                    s += \" VARCHAR2\" + (fsize[k] ? (\"(\" + fsize[k] + \")\") : \"\");\r\n                    break;\r\n                case \"NC\":\r\n                    s += \" NCHAR\" + (fsize[k] ? (\"(\" + fsize[k] + \")\") : \"\");\r\n                    break;\r\n                default:\r\n                    s += \" CHAR\" + (fsize[k] ? (\"(\" + fsize[k] + \")\") : \"\");\r\n                    break\r\n            }\r\n            if (freq[k]) {\r\n                s += \" NOT NULL\"\r\n            }\r\n            if (keys[k] && keycnt == 1) {\r\n                s += \" PRIMARY KEY\";\r\n                if (tp == \"N\" || tp == \"NR\" || tp == \"I\" || tp == \"IT\" || tp == \"BI\") {\r\n                    if (document.getElementById('selAutoIncrement')) {\r\n                        s += \" \" + document.getElementById('selAutoIncrement').value\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (keycnt > 1) {\r\n            if (options.newlines) {\r\n                s += \"\\x0A\"\r\n            }\r\n            s += \"  ,PRIMARY KEY(\";\r\n            for (x = 0; x < keys.length; x += 1) {\r\n                if (keys[x]) {\r\n                    s += ((x > 0) ? \",\" : \"\") + usrhdr[x]\r\n                }\r\n            }\r\n            s += \")\";\r\n        }\r\n        if (options.newlines) {\r\n            s += \"\\x0A\"\r\n        }\r\n        s += \");\\x0A\";\r\n        options.newlines = savnewlines;\r\n    } else {\r\n        if (options.createTable && operation === \"S\") {\r\n            s += \"CREATE \";\r\n            if (options.insertAfterText.trim() !== \"\") {\r\n                s += \" \" + options.insertAfterText.trim()\r\n            }\r\n            s += \"VIEW \" + (options.createNotExists ? \"IF NOT EXISTS \" : \"\") + options.tableName + \"(\";\r\n            if (options.newlines) {\r\n                s += \"\\x0A\"\r\n            }\r\n            for (n = k = 0; k < hdr.length; k += 1) {\r\n                if (!incl[k]) {\r\n                    continue\r\n                }\r\n                if (n > 0) {\r\n                    s += \",\"\r\n                }\r\n                s += usrhdr[k];\r\n                if (options.newlines) {\r\n                    s += \"\\x0A\"\r\n                }\r\n                n += 1;\r\n            }\r\n            s += \") AS\\x0A\";\r\n        }\r\n    }\r\n    if (includeCnt === 0) {\r\n        return s\r\n    }\r\n    switch (operation) {\r\n        case \"I\":\r\n            cnt = row = 0;\r\n            for (j = 0; j < (CSV.table.length ? CSV.table.length : 1); j += 1) {\r\n                row += 1;\r\n                cnt += 1;\r\n                if (row == 1 || !options.useTerseValues || cnt > options.useTerseValuesSize * 1) {\r\n                    cnt = 1;\r\n                    s += options.useReplace ? \"REPLACE\" : \"INSERT\";\r\n                    if (options.insertAfterText.trim() !== \"\") {\r\n                        s += \" \" + options.insertAfterText.trim()\r\n                    }\r\n                    s += \" INTO \" + options.tableName + \"(\";\r\n                    if (options.newlines) {\r\n                        s += \"\\x0A\"\r\n                    }\r\n                    for (n = k = 0; k < hdr.length; k += 1) {\r\n                        if (!incl[k]) {\r\n                            continue\r\n                        }\r\n                        if (n > 0) {\r\n                            s += \",\"\r\n                        }\r\n                        s += usrhdr[k];\r\n                        if (options.newlines) {\r\n                            s += \"\\x0A\"\r\n                        }\r\n                        n += 1;\r\n                    }\r\n                    s += \") VALUES\" + (!options.useTerseValues ? \"\" : \"\\x0A\") + \" (\";\r\n                    if (CSV.table.length === 0) {\r\n                        for (n = k = 0; k < hdr.length; k += 1) {\r\n                            if (!incl[k]) {\r\n                                continue\r\n                            }\r\n                            if (n > 0) {\r\n                                s += \",\"\r\n                            }\r\n                            s += \"?\";\r\n                            if (options.newlines) {\r\n                                s += \"\\x0A\"\r\n                            }\r\n                            n += 1;\r\n                        }\r\n                        return s + \");\";\r\n                    }\r\n                } else {\r\n                    s += \",(\"\r\n                }\r\n                if (options.newlines) {\r\n                    s += \"\\x0A\"\r\n                }\r\n                for (n = k = 0; k < hdr.length; k += 1) {\r\n                    if (!incl[k]) {\r\n                        continue\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        tp = \"VC\"\r\n                    } else {\r\n                        tp = CSV.statsCnt[k].fieldType\r\n                    }\r\n                    if (k >= CSV.table[j].length) {\r\n                        v = \"\"\r\n                    } else {\r\n                        v = CSV.table[j][k]\r\n                    }\r\n                    useNullForEmpty = false;\r\n                    if (document.getElementById(\"ftype\" + (k + 1))) {\r\n                        tp = document.getElementById(\"ftype\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftem\" + (k + 1))) {\r\n                        tem = document.getElementById(\"ftem\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftrim\" + (k + 1))) {\r\n                        if (document.getElementById(\"ftrim\" + (k + 1)).checked) {\r\n                            v = v.trim()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chkupper\" + (k + 1))) {\r\n                        if (document.getElementById(\"chkupper\" + (k + 1)).checked) {\r\n                            v = v.toUpperCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chklower\" + (k + 1))) {\r\n                        if (document.getElementById(\"chklower\" + (k + 1)).checked) {\r\n                            v = v.toLowerCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chknull\" + (k + 1))) {\r\n                        if (document.getElementById(\"chknull\" + (k + 1)).checked) {\r\n                            useNullForEmpty = true\r\n                        }\r\n                    }\r\n                    if (n > 0) {\r\n                        s += \",\"\r\n                    }\r\n                    if (tem !== \"\") {\r\n                        if (tp === 'N' || tp === \"NR\" || tp === 'I' || tp === \"IT\" || tp === \"S\" || tp === \"D\" || tp === \"DT\" || tp === \"BI\" || tp === \"M\" || tp === \"L\") {\r\n                            if (v === \"\") {\r\n                                s += tem.replace(\"{f}\", 'NULL')\r\n                            } else {\r\n                                if (tp == \"D\" || tp == \"DT\") {\r\n                                    s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                                } else {\r\n                                    s += tem.replace(\"{f}\", v.toSql())\r\n                                }\r\n                            }\r\n                        } else {\r\n                            s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                        }\r\n                    } else {\r\n                        switch (tp) {\r\n                            case \"B\":\r\n                            case \"L\":\r\n                            case \"NR\":\r\n                            case \"M\":\r\n                            case \"S\":\r\n                            case \"N\":\r\n                            case \"BI\":\r\n                            case \"IT\":\r\n                            case \"I\":\r\n                                if ((v.trim() === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    s += v.toSql()\r\n                                }\r\n                                break;\r\n                            case \"DT\":\r\n                            case \"D\":\r\n                                if ((v === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (options && options.dateOutFormat && options.dateOutFormat !== \"\") {\r\n                                        try {\r\n                                            var vv = v;\r\n                                            var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                                        } catch (e) {\r\n                                            v = vv //jshint ignore:line\r\n                                        }\r\n                                    }\r\n                                    s += \"\\'\" + v.toSql() + \"\\'\";\r\n                                }\r\n                                break;\r\n                            default:\r\n                                if ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (v === \"\" && useNullForEmpty) {\r\n                                        s += \"NULL\"\r\n                                    } else {\r\n                                        if (tp === 'NC' || tp === 'NVC') {\r\n                                            s += \"N\\'\" + v.toSql() + \"\\'\"\r\n                                        } else {\r\n                                            s += \"\\'\" + v.toSql() + \"\\'\"\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (options.newlines) {\r\n                        s += \"\\x0A\"\r\n                    }\r\n                    n += 1;\r\n                }\r\n                if (!options.useTerseValues || j == CSV.table.length - 1 || cnt >= options.useTerseValuesSize * 1) {\r\n                    s += \");\\x0A\"\r\n                } else {\r\n                    s += \")\\x0A\"\r\n                }\r\n            }\r\n            break;\r\n        case \"U\":\r\n            temValuesSet = false;\r\n            for (j = 0; j < (CSV.table.length ? CSV.table.length : 1); j += 1) {\r\n                where = \"\";\r\n                s += \"UPDATE\";\r\n                if (options.insertAfterText.trim() !== \"\") {\r\n                    s += \" \" + options.insertAfterText.trim()\r\n                }\r\n                s += \" \" + options.tableName + \" SET \";\r\n                if (options.newlines) {\r\n                    s += \"\\x0A\"\r\n                }\r\n                for (k = 0; k < hdr.length; k += 1) {\r\n                    if (keys[k]) {\r\n                        where += (where !== \"\" ? \" AND \" : \"\") + usrhdr[k] + \"= {f\" + k + \"}\"\r\n                    }\r\n                }\r\n                if (where === \"\") {\r\n                    where = usrhdr[0] + \"= {f0}\"\r\n                }\r\n                for (n = k = 0; k < hdr.length; k += 1) {\r\n                    if (incl[k]) {\r\n                        if (n > 0) {\r\n                            s += \",\"\r\n                        }\r\n                        s += usrhdr[k] + \" = \";\r\n                        n += 1;\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        tp = \"VC\"\r\n                    } else {\r\n                        tp = CSV.statsCnt[k].fieldType\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        v = \"?\"\r\n                    } else {\r\n                        if (k >= CSV.table[j].length) {\r\n                            v = \"\"\r\n                        } else {\r\n                            v = CSV.table[j][k]\r\n                        }\r\n                    }\r\n                    useNullForEmpty = false;\r\n                    if (document.getElementById(\"ftype\" + (k + 1))) {\r\n                        tp = document.getElementById(\"ftype\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftem\" + (k + 1))) {\r\n                        tem = document.getElementById(\"ftem\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftrim\" + (k + 1))) {\r\n                        if (document.getElementById(\"ftrim\" + (k + 1)).checked) {\r\n                            v = v.trim()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chkupper\" + (k + 1))) {\r\n                        if (document.getElementById(\"chkupper\" + (k + 1)).checked) {\r\n                            v = v.toUpperCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chklower\" + (k + 1))) {\r\n                        if (document.getElementById(\"chklower\" + (k + 1)).checked) {\r\n                            v = v.toLowerCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chknull\" + (k + 1))) {\r\n                        if (document.getElementById(\"chknull\" + (k + 1)).checked) {\r\n                            useNullForEmpty = true\r\n                        }\r\n                    }\r\n                    if (tem !== \"\") {\r\n                        if (tp === 'N' || tp === \"NR\" || tp === 'I' || tp === \"IT\" || tp === \"S\" || tp === \"D\" || tp === \"DT\" || tp === \"BI\" || tp === \"M\" || tp === \"L\") {\r\n                            if (v === \"\") {\r\n                                s += tem.replace(\"{f}\", 'NULL')\r\n                            } else {\r\n                                if (tp == \"D\" || tp == \"DT\") {\r\n                                    s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                                } else {\r\n                                    s += tem.replace(\"{f}\", v.toSql())\r\n                                }\r\n                            }\r\n                        } else {\r\n                            s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                        }\r\n                        temValuesSet = true;\r\n                    }\r\n                    switch (tp) {\r\n                        case \"B\":\r\n                        case \"L\":\r\n                        case \"NR\":\r\n                        case \"N\":\r\n                            if (!temValuesSet && incl[k]) {\r\n                                if ((v === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (CSV.table.length === 0) {\r\n                                        s += v\r\n                                    } else {\r\n                                        s += v.toSql()\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (CSV.table.length === 0) {\r\n                                where = where.replace(\"{f\" + k + \"}\", v)\r\n                            } else {\r\n                                where = where.replace(\"{f\" + k + \"}\", v.toSql())\r\n                            }\r\n                            break;\r\n                        case \"BI\":\r\n                        case \"IT\":\r\n                        case \"I\":\r\n                            if (!temValuesSet && incl[k]) {\r\n                                if ((v === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (CSV.table.length === 0) {\r\n                                        s += v\r\n                                    } else {\r\n                                        s += v.toSql()\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (CSV.table.length === 0) {\r\n                                where = where.replace(\"{f\" + k + \"}\", v)\r\n                            } else {\r\n                                where = where.replace(\"{f\" + k + \"}\", v.toSql())\r\n                            }\r\n                            break;\r\n                        case \"D\":\r\n                            if (!temValuesSet && incl[k]) {\r\n                                if ((v === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (CSV.table.length === 0) {\r\n                                        s += v\r\n                                    } else {\r\n                                        if (options && options.dateOutFormat && options.dateOutFormat !== \"\") {\r\n                                            try {\r\n                                                var vv = v;\r\n                                                var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                                            } catch (e) {\r\n                                                v = vv\r\n                                            }\r\n                                        }\r\n                                        s += \"\\'\" + v.toSql() + \"\\'\";\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (CSV.table.length === 0) {\r\n                                where = where.replace(\"{f\" + k + \"}\", v)\r\n                            } else {\r\n                                where = where.replace(\"{f\" + k + \"}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                            }\r\n                            break;\r\n                        default:\r\n                            if (!temValuesSet && incl[k]) {\r\n                                if ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (v === \"\" && useNullForEmpty) {\r\n                                        s += \"NULL\"\r\n                                    } else {\r\n                                        if (tp === 'NC' || tp === 'NVC') {\r\n                                            s += \"N\\'\" + v.toSql() + \"\\'\"\r\n                                        } else {\r\n                                            if (CSV.table.length === 0) {\r\n                                                s += v\r\n                                            } else {\r\n                                                s += \"\\'\" + v.toSql() + \"\\'\"\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                            if (tp === 'NC' || tp === 'NVC') {\r\n                                where = where.replace(\"{f\" + k + \"}\", \"N\\'\" + v.toSql() + \"\\'\")\r\n                            } else {\r\n                                if (CSV.table.length === 0) {\r\n                                    where = where.replace(\"{f\" + k + \"}\", v)\r\n                                } else {\r\n                                    where = where.replace(\"{f\" + k + \"}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                    if (incl[k]) {\r\n                        if (options.newlines) {\r\n                            s += \"\\x0A\"\r\n                        }\r\n                        n += 1;\r\n                    }\r\n                }\r\n                s += \" WHERE \" + where;\r\n                s += \";\\x0A\";\r\n            }\r\n            break;\r\n        case \"D\":\r\n            for (j = 0; j < (CSV.table.length ? CSV.table.length : 1); j += 1) {\r\n                where = \"\";\r\n                s += \"DELETE FROM \" + options.tableName;\r\n                if (options.newlines) {\r\n                    s += \"\\x0A\"\r\n                }\r\n                for (k = 0; k < usrhdr.length; k += 1) {\r\n                    if (keys[k]) {\r\n                        where += (where !== \"\" ? \" AND \" : \"\") + usrhdr[k] + \"= {f\" + k + \"}\"\r\n                    }\r\n                }\r\n                if (where === \"\") {\r\n                    where = usrhdr[0] + \"= {f0}\"\r\n                }\r\n                for (n = k = 0; k < hdr.length; k += 1) {\r\n                    n += 1;\r\n                    if (CSV.table.length === 0) {\r\n                        tp = \"VC\"\r\n                    } else {\r\n                        tp = CSV.statsCnt[k].fieldType\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        v = \"?\"\r\n                    } else {\r\n                        if (k >= CSV.table[j].length) {\r\n                            v = \"\"\r\n                        } else {\r\n                            v = CSV.table[j][k]\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"ftype\" + (k + 1))) {\r\n                        tp = document.getElementById(\"ftype\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftem\" + (k + 1))) {\r\n                        tem = document.getElementById(\"ftem\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftrim\" + (k + 1))) {\r\n                        if (document.getElementById(\"ftrim\" + (k + 1)).checked) {\r\n                            v = v.trim()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chkupper\" + (k + 1))) {\r\n                        if (document.getElementById(\"chkupper\" + (k + 1)).checked) {\r\n                            v = v.toUpperCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chklower\" + (k + 1))) {\r\n                        if (document.getElementById(\"chklower\" + (k + 1)).checked) {\r\n                            v = v.toLowerCase()\r\n                        }\r\n                    }\r\n                    switch (tp) {\r\n                        case \"B\":\r\n                        case \"L\":\r\n                        case \"NR\":\r\n                        case \"N\":\r\n                        case \"BI\":\r\n                        case \"IT\":\r\n                        case \"M\":\r\n                        case \"S\":\r\n                        case \"I\":\r\n                            if (CSV.table.length === 0) {\r\n                                where = where.replace(\"{f\" + k + \"}\", v)\r\n                            } else {\r\n                                where = where.replace(\"{f\" + k + \"}\", v.toSql())\r\n                            }\r\n                            break;\r\n                        default:\r\n                            if (tp === 'NC' || tp === 'NVC') {\r\n                                where = where.replace(\"{f\" + k + \"}\", \"N\\'\" + v.toSql() + \"\\'\")\r\n                            } else {\r\n                                if (CSV.table.length === 0) {\r\n                                    where = where.replace(\"{f\" + k + \"}\", v)\r\n                                } else {\r\n                                    where = where.replace(\"{f\" + k + \"}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                                }\r\n                            }\r\n                            break;\r\n                    }\r\n                    if (options.newlines) {\r\n                        s += \"\\x0A\"\r\n                    }\r\n                    n += 1;\r\n                }\r\n                s += \" WHERE \" + where;\r\n                s += \";\\x0A\";\r\n            }\r\n            break;\r\n        case \"M\":\r\n            row = batch = 0;\r\n            for (j = 0; j < (CSV.table.length ? CSV.table.length : 1); j += 1) {\r\n                batch += 1;\r\n                row += 1;\r\n                if (row === 1 || batch == options.batchSize) {\r\n                    s += \"MERGE INTO \" + options.tableName + \" t\\x0AUSING (\\x0A\";\r\n                    where = \"ON (\";\r\n                    for (i = k = 0; k < usrhdr.length; k += 1) {\r\n                        if (keys[k]) {\r\n                            where += (i > 0 ? \" AND \" : \" \") + \"t.\" + usrhdr[k] + \"= s.\" + usrhdr[k];\r\n                            i += 1\r\n                        }\r\n                    }\r\n                    if (where === \"ON (\") {\r\n                        where += \"t.\" + usrhdr[0] + \"= s.\" + usrhdr[0];\r\n                        keys.push(usrhdr[0])\r\n                    }\r\n                    where += \" )\";\r\n                } else {\r\n                    if (options.createTable || batch < options.batchSize) {\r\n                        s += \"UNION ALL\\x0A\"\r\n                    }\r\n                }\r\n                if (options.newlines) {\r\n                    s += \"\\x0A\"\r\n                }\r\n                s += \"SELECT \";\r\n                for (includeNotKeyCnt = k = 0; k < hdr.length; k += 1) {\r\n                    if (incl[k] && !keys[k]) {\r\n                        includeNotKeyCnt += 1\r\n                    }\r\n                }\r\n                for (n = k = 0; k < hdr.length; k += 1) {\r\n                    if (!incl[k] && !keys[k]) {\r\n                        continue\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        tp = \"VC\"\r\n                    } else {\r\n                        tp = CSV.statsCnt[k].fieldType\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        v = \"?\"\r\n                    } else {\r\n                        if (k >= CSV.table[j].length) {\r\n                            v = \"\"\r\n                        } else {\r\n                            v = CSV.table[j][k]\r\n                        }\r\n                    }\r\n                    useNullForEmpty = false;\r\n                    if (document.getElementById(\"ftype\" + (k + 1))) {\r\n                        tp = document.getElementById(\"ftype\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftem\" + (k + 1))) {\r\n                        tem = document.getElementById(\"ftem\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftrim\" + (k + 1))) {\r\n                        if (document.getElementById(\"ftrim\" + (k + 1)).checked) {\r\n                            v = v.trim()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chkupper\" + (k + 1))) {\r\n                        if (document.getElementById(\"chkupper\" + (k + 1)).checked) {\r\n                            v = v.toUpperCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chklower\" + (k + 1))) {\r\n                        if (document.getElementById(\"chklower\" + (k + 1)).checked) {\r\n                            v = v.toLowerCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chknull\" + (k + 1))) {\r\n                        if (document.getElementById(\"chknull\" + (k + 1)).checked) {\r\n                            useNullForEmpty = true\r\n                        }\r\n                    }\r\n                    if (n > 0) {\r\n                        s += \",\"\r\n                    }\r\n                    if (tem !== \"\") {\r\n                        if (tp == 'N' || tp == \"NR\" || tp == 'I' || tp == \"IT\" || tp == \"S\" || tp == \"D\" || tp == \"DT\" || tp == \"BI\" || tp == \"M\" || tp === \"L\") {\r\n                            if (v === \"\") {\r\n                                s += tem.replace(\"{f}\", 'NULL')\r\n                            } else {\r\n                                if (tp == \"D\" || tp == \"DT\") {\r\n                                    s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                                } else {\r\n                                    if (CSV.table.length === 0) {\r\n                                        s += tmp.replace(\"{f}\", v)\r\n                                    } else {\r\n                                        s += tem.replace(\"{f}\", v.toSql())\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (CSV.table.length === 0) {\r\n                                s += tmp.replace(\"{f}\", v)\r\n                            } else {\r\n                                s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                            }\r\n                        }\r\n                    } else {\r\n                        switch (tp) {\r\n                            case \"B\":\r\n                            case \"L\":\r\n                            case \"NR\":\r\n                            case \"M\":\r\n                            case \"S\":\r\n                            case \"N\":\r\n                            case \"BI\":\r\n                            case \"IT\":\r\n                            case \"I\":\r\n                                if ((v.trim() === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (CSV.table.length === 0) {\r\n                                        s += v\r\n                                    } else {\r\n                                        s += v.toSql()\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case \"DT\":\r\n                            case \"D\":\r\n                                if ((v === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (CSV.table.length === 0) {\r\n                                        s += v\r\n                                    } else {\r\n                                        if (options && options.dateOutFormat && options.dateOutFormat !== \"\") {\r\n                                            try {\r\n                                                var vv = v;\r\n                                                var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                                            } catch (e) {\r\n                                                v = vv\r\n                                            }\r\n                                        }\r\n                                        s += \"\\'\" + v.toSql() + \"\\'\";\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                if ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull) {\r\n                                    s += \"NULL\"\r\n                                } else {\r\n                                    if (v === \"\" && useNullForEmpty) {\r\n                                        s += \"NULL\"\r\n                                    } else {\r\n                                        if (tp === 'NC' || tp === 'NVC') {\r\n                                            s += \"N\\'\" + v.toSql() + \"\\'\"\r\n                                        } else {\r\n                                            if (CSV.table.length === 0) {\r\n                                                s += v\r\n                                            } else {\r\n                                                s += \"\\'\" + v.toSql() + \"\\'\"\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                        if (row === 1) {\r\n                            s += \" AS \" + usrhdr[k]\r\n                        }\r\n                    }\r\n                    if (options.newlines) {\r\n                        s += \"\\x0A\"\r\n                    }\r\n                    n += 1;\r\n                }\r\n                if (options.dualNeeded) {\r\n                    s += \" FROM \" + (options.dualTableName || \"myView\")\r\n                }\r\n                if (j == CSV.table.length - 1 || batch == options.batchSize || CSV.table.length === 0) {\r\n                    s += \"\\x0A) s\\x0A\";\r\n                    s += where;\r\n                    if (includeNotKeyCnt > 0) {\r\n                        s += \"\\x0A  WHEN MATCHED THEN \\x0A     UPDATE SET \";\r\n                        for (n = k = 0; k < usrhdr.length; k += 1) {\r\n                            if (!keys[k] && incl[k]) {\r\n                                s += (n > 0 ? \", \" : \" \") + \"t.\" + usrhdr[k] + \"=s.\" + usrhdr[k];\r\n                                n += 1\r\n                            }\r\n                        }\r\n                    }\r\n                    s += \"\\x0A  WHEN NOT MATCHED THEN\\x0A     INSERT(\";\r\n                    for (n = k = 0; k < usrhdr.length; k += 1) {\r\n                        if (keys[k] || incl[k]) {\r\n                            s += (n > 0 ? \", \" : \" \") + \"\" + usrhdr[k];\r\n                            n += 1\r\n                        }\r\n                    }\r\n                    s += \")\\x0A     VALUES(\";\r\n                    for (n = k = 0; k < usrhdr.length; k += 1) {\r\n                        if (keys[k] || incl[k]) {\r\n                            s += (n > 0 ? \", \" : \" \") + \"s.\" + usrhdr[k];\r\n                            n += 1\r\n                        }\r\n                    }\r\n                    s += \")\\x0A;\\x0A\";\r\n                } else {\r\n                    s += \"\\x0A\"\r\n                }\r\n                if (batch == options.batchSize) {\r\n                    batch = 0\r\n                }\r\n                if (CSV.table.length === 0) {\r\n                    break\r\n                }\r\n            }\r\n            break;\r\n        case \"S\":\r\n            row = batch = 0;\r\n            if (options.createTable) {\r\n                options.batchSize = Number.MAX_VALUE\r\n            }\r\n            for (j = 0; j < (CSV.table.length ? CSV.table.length : 1); j += 1) {\r\n                batch += 1;\r\n                row += 1;\r\n                if (row > 1) {\r\n                    if (options.createTable || batch < options.batchSize) {\r\n                        s += \"UNION ALL\\x0A\"\r\n                    }\r\n                }\r\n                if (options.newlines) {\r\n                    s += \"\\x0A\"\r\n                }\r\n                s += \"SELECT \";\r\n                for (n = k = 0; k < hdr.length; k += 1) {\r\n                    if (!incl[k]) {\r\n                        continue\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        tp = \"VC\"\r\n                    } else {\r\n                        tp = CSV.statsCnt[k].fieldType\r\n                    }\r\n                    if (CSV.table.length === 0) {\r\n                        v = \"\"\r\n                    } else {\r\n                        if (k >= CSV.table[j].length) {\r\n                            v = \"\"\r\n                        } else {\r\n                            v = CSV.table[j][k]\r\n                        }\r\n                    }\r\n                    useNullForEmpty = false;\r\n                    if (document.getElementById(\"ftype\" + (k + 1))) {\r\n                        tp = document.getElementById(\"ftype\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftem\" + (k + 1))) {\r\n                        tem = document.getElementById(\"ftem\" + (k + 1)).value\r\n                    }\r\n                    if (document.getElementById(\"ftrim\" + (k + 1))) {\r\n                        if (document.getElementById(\"ftrim\" + (k + 1)).checked) {\r\n                            v = v.trim()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chkupper\" + (k + 1))) {\r\n                        if (document.getElementById(\"chkupper\" + (k + 1)).checked) {\r\n                            v = v.toUpperCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chklower\" + (k + 1))) {\r\n                        if (document.getElementById(\"chklower\" + (k + 1)).checked) {\r\n                            v = v.toLowerCase()\r\n                        }\r\n                    }\r\n                    if (document.getElementById(\"chknull\" + (k + 1))) {\r\n                        if (document.getElementById(\"chknull\" + (k + 1)).checked) {\r\n                            useNullForEmpty = true\r\n                        }\r\n                    }\r\n                    if (n > 0) {\r\n                        s += \",\"\r\n                    }\r\n                    if (tem !== \"\") {\r\n                        if (CSV.table.length === 0) {\r\n                            s += tem.replace(\"{f}\", '?')\r\n                        } else {\r\n                            if (tp === 'N' || tp === \"NR\" || tp === 'I' || tp === \"IT\" || tp === \"S\" || tp === \"D\" || tp === \"DT\" || tp === \"BI\" || tp === \"M\" || tp === \"L\") {\r\n                                if (v === \"\") {\r\n                                    s += tem.replace(\"{f}\", 'NULL')\r\n                                } else {\r\n                                    if (tp == \"D\" || tp == \"DT\") {\r\n                                        s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                                    } else {\r\n                                        s += tem.replace(\"{f}\", v.toSql())\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                s += tem.replace(\"{f}\", \"\\'\" + v.toSql() + \"\\'\")\r\n                            }\r\n                        }\r\n                    } else {\r\n                        switch (tp) {\r\n                            case \"B\":\r\n                            case \"L\":\r\n                            case \"NR\":\r\n                            case \"M\":\r\n                            case \"S\":\r\n                            case \"N\":\r\n                            case \"BI\":\r\n                            case \"IT\":\r\n                            case \"I\":\r\n                                if (CSV.table.length === 0) {\r\n                                    s += \"?\"\r\n                                } else {\r\n                                    if ((v.trim() === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                        s += \"NULL\"\r\n                                    } else {\r\n                                        s += v.toSql()\r\n                                    }\r\n                                }\r\n                                break;\r\n                            case \"DT\":\r\n                            case \"D\":\r\n                                if (CSV.table.length === 0) {\r\n                                    s += \"?\"\r\n                                } else {\r\n                                    if ((v === \"\") || ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull)) {\r\n                                        s += \"NULL\"\r\n                                    } else {\r\n                                        if (options && options.dateOutFormat && options.dateOutFormat !== \"\") {\r\n                                            try {\r\n                                                var vv = v;\r\n                                                var v = moment(v, CSV.dateformat[k]).format(options.dateOutFormat)\r\n                                            } catch (e) {\r\n                                                v = vv\r\n                                            }\r\n                                        }\r\n                                        s += \"\\'\" + v.toSql() + \"\\'\";\r\n                                    }\r\n                                }\r\n                                break;\r\n                            default:\r\n                                if (CSV.table.length === 0) {\r\n                                    s += \"?\"\r\n                                } else {\r\n                                    if ((v.toUpperCase() == \"NULL\" || v === \"\\\\N\") && options.useNullAsNull) {\r\n                                        s += \"NULL\"\r\n                                    } else {\r\n                                        if (v === \"\" && useNullForEmpty) {\r\n                                            s += \"NULL\"\r\n                                        } else {\r\n                                            if (tp === 'NC' || tp === 'NVC') {\r\n                                                s += \"N\\'\" + v.toSql() + \"\\'\"\r\n                                            } else {\r\n                                                s += \"\\'\" + v.toSql() + \"\\'\"\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                                break;\r\n                        }\r\n                    }\r\n                    if (options.newlines) {\r\n                        s += \"\\x0A\"\r\n                    }\r\n                    n += 1;\r\n                    if (row === 1) {\r\n                        s += \" AS \" + usrhdr[k]\r\n                    }\r\n                }\r\n                if (options.dualNeeded && !(CSV.table.length === 0 && !options.createTable)) {\r\n                    s += \" FROM \" + (options.dualTableName || \"myView\")\r\n                }\r\n                if (j == CSV.table.length - 1 || batch == options.batchSize || CSV.table.length === 0) {\r\n                    s += \";\\x0A\"\r\n                } else {\r\n                    s += \"\\x0A\"\r\n                }\r\n                if (batch == options.batchSize) {\r\n                    batch = 0\r\n                }\r\n            }\r\n            if (CSV.table.length === 0 && !options.createTable) {\r\n                s = s.replace(/\\?\\sAS\\s/mgi, \" \").rtrim();\r\n                if (s.endsWith(\";\")) {\r\n                    s = s.slice(0, -1)\r\n                }\r\n                s += \"\\x0AFROM \" + (options.tableName || \"mytable\") + \";\";\r\n            }\r\n            break;\r\n    }\r\n    if (CSV.table.length === 0) { }\r\n    return s;\r\n}\r\n\r\nfunction geoJsonToCsv(geo, delimiter, bIncludeHeaders, bQuotes, noMultiLines) {\r\n    var j, k, p;\r\n    var s = \"\";\r\n    var value = \"\";\r\n    var cols = {};\r\n    var colArray = [\"latitude\", \"longitude\", \"altitude\", \"geometry\"];\r\n    var obj = {};\r\n    var t = \"\";\r\n    if (typeof geo === \"string\") {\r\n        try {\r\n            geo = JSON.parse(geo)\r\n        } catch (e) {\r\n            geo = eval(\"geo=\" + geo)\r\n        }\r\n    }\r\n    var colnum = 0;\r\n    if (geo.type === \"Feature\") {\r\n        geo = {\r\n            \"type\": \"FeatureCollection\",\r\n            \"features\": [geo]\r\n        }\r\n    }\r\n    if (geo.type === \"FeatureCollection\") {\r\n        for (j = 0; j < geo.features.length; j += 1) {\r\n            if (geo.features[j].geometry.type === \"Point\") {\r\n                if (!(\"latitude\" in cols)) {\r\n                    cols.latitude = colnum += 1\r\n                }\r\n                if (!(\"longitude\" in cols)) {\r\n                    cols.longitude = colnum += 1\r\n                }\r\n                if (!(\"altitude\" in cols)) {\r\n                    cols.altitude = colnum += 1\r\n                }\r\n            } else {\r\n                if (!(\"coordinates\" in cols)) {\r\n                    cols.coordinates = colnum += 1;\r\n                    colArray.push(\"coordinates\")\r\n                }\r\n            }\r\n        }\r\n        for (j = 0; j < geo.features.length; j += 1) {\r\n            for (p in geo.features[j].properties) {\r\n                if (!(p in cols)) {\r\n                    cols[p] = colnum += 1;\r\n                    colArray.push(p)\r\n                }\r\n            }\r\n        }\r\n        if (bIncludeHeaders) {\r\n            for (j = 0; j < colArray.length; j += 1) {\r\n                t += colArray[j].toCsv(delimiter, '\\\"', '\\\"', bQuotes) + delimiter\r\n            }\r\n            t = t.slice(0, -1 * delimiter.length) + \"\\x0A\";\r\n        }\r\n        for (j = 0; j < geo.features.length; j += 1) {\r\n            if (\"latitude\" in cols) {\r\n                if (geo.features[j].geometry && geo.features[j].geometry.type && geo.features[j].geometry.coordinates && geo.features[j].geometry.coordinates.length >= 2 && geo.features[j].geometry.type === \"Point\") {\r\n                    s += (bQuotes ? '\\\"' : \"\") + geo.features[j].geometry.coordinates[1] + (bQuotes ? '\\\"' : \"\") + delimiter;\r\n                    s += (bQuotes ? '\\\"' : \"\") + geo.features[j].geometry.coordinates[0] + (bQuotes ? '\\\"' : \"\") + delimiter;\r\n                    if (geo.features[j].geometry.coordinates.length > 2) {\r\n                        s += (bQuotes ? '\\\"' : \"\") + geo.features[j].geometry.coordinates[2] + (bQuotes ? '\\\"' : \"\") + delimiter\r\n                    } else {\r\n                        s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter\r\n                    }\r\n                } else {\r\n                    s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter;\r\n                    s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter;\r\n                    s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter\r\n                }\r\n            } else {\r\n                s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter;\r\n                s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter;\r\n                s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter\r\n            }\r\n            if (geo.features[j].geometry.type) {\r\n                value = geo.features[j].geometry.type;\r\n                s += (\"\" + value).toCsv(delimiter, '\\\"', '\\\"', bQuotes) + delimiter\r\n            } else {\r\n                s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter\r\n            }\r\n            if (\"coordinates\" in cols) {\r\n                if (geo.features[j].geometry.type != \"Point\") {\r\n                    value = geo.features[j].geometry.coordinates;\r\n                    if ((value + \"\").substring(0, 15) == \"[object Object]\") {\r\n                        value = JSON.valueArray(value).slice(0, -1)\r\n                    }\r\n                    s += (\"\" + value).toCsv(delimiter, '\\\"', '\\\"', bQuotes) + delimiter;\r\n                } else {\r\n                    s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter\r\n                }\r\n            }\r\n            for (k = 0; k < colArray.length; k += 1) {\r\n                p = colArray[k];\r\n                if (p == \"latitude\" || p === \"longitude\" || p === \"altitude\" || p === \"coordinates\" || p == \"geometry\") {\r\n                    continue\r\n                }\r\n                if (p in geo.features[j].properties) {\r\n                    value = geo.features[j].properties[p];\r\n                    if (value === null) {\r\n                        value = \"\"\r\n                    }\r\n                    if ((value + \"\").substring(0, 15) == \"[object Object]\") {\r\n                        value = JSON.valueArray(value).slice(0, -1)\r\n                    }\r\n                    if (noMultiLines) {\r\n                        value = (value + \"\").replace(/\\r\\n|\\r|\\n/g, ' ')\r\n                    }\r\n                    s += (value + \"\").toCsv(delimiter, '\\\"', '\\\"', bQuotes) + delimiter;\r\n                } else {\r\n                    s += (bQuotes ? '\\\"\\\"' : \"\") + delimiter\r\n                }\r\n            }\r\n            s = s.slice(0, -1 * delimiter.length) + \"\\x0A\";\r\n        }\r\n    }\r\n    return t + s;\r\n}\r\n\r\nfunction htmlEscape(str) {\r\n    return String(str).replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&#39;').replace(/</g, '&lt;').replace(/>/g, '&gt;')\r\n}\r\n\r\nfunction getCsvHeader(CSV) {\r\n    var k;\r\n    var hdr = [];\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (!CSV) {\r\n        alert('Missing CSV')\r\n    }\r\n    if (!CSV.arHeaderRow) {\r\n        alert('Missing arHeaderRow')\r\n    }\r\n    var big = CSV.arHeaderRow.length;\r\n    if (big < CSV.maxColumnsFound) {\r\n        big = CSV.maxColumnsFound\r\n    }\r\n    for (k = 0; k < big; k += 1) {\r\n        if (!CSV.arHeaderRow[k]) {\r\n            CSV.arHeaderRow.push(\"FIELD\" + (k + 1))\r\n        }\r\n        hdr.push(CSV.arHeaderRow[k]);\r\n        if (CSV.headerToUpper) {\r\n            CSV.arHeaderRow[k] = CSV.arHeaderRow[k].toUpperCase();\r\n            hdr[hdr.length - 1] = hdr[hdr.length - 1].toUpperCase()\r\n        } else {\r\n            if (CSV.headerToLower) {\r\n                CSV.arHeaderRow[k] = CSV.arHeaderRow[k].toLowerCase();\r\n                hdr[hdr.length - 1] = hdr[hdr.length - 1].toLowerCase()\r\n            }\r\n        }\r\n    }\r\n    return hdr;\r\n}\r\n\r\nfunction sqlOptions(CSV) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var stats = getCsvColLength(CSV);\r\n    var hdr = getCsvHeader(CSV);\r\n    var s = '<table class=\\\"table table-bordered table-hover table-condensed\\\">\\x0A<tr>\\x0A<th>Col #</th>';\r\n    s += \"<th>Field Name</th>\";\r\n    s += \"<th>Data Type</th><th>Max Size</th>\";\r\n    s += \"<th title=\\'# of decimals\\'>#<br/>Dec</th>\";\r\n    s += \"<th>Key</th><th>Include<br/><input type=\\\"checkbox\\\" checked onclick=\\\"setCheckboxes(\\'finc\\',this.checked)\\\"/></th>\";\r\n    s += \"<th>Required<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'freq\\',this.checked)\\\"/></th>\";\r\n    s += \"<th>Trim<br/><input type=\\\"checkbox\\\" checked onclick=\\\"setCheckboxes(\\'ftrim\\',this.checked)\\\"/></th>\";\r\n    s += \"<th>Upper<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkupper\\',this.checked);if(this.checked)setCheckboxes(\\'chklower\\',false)\\\"/></th>\";\r\n    s += \"<th>Lower<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chklower\\',this.checked);if(this.checked)setCheckboxes(\\'chkupper\\',false)\\\"/></th>\";\r\n    s += \"<th title=\\\"Use keyword NULL\\\">Use NULL for Empty Field<br/><input type=\\\"checkbox\\\" checked onclick=\\\"setCheckboxes(\\'chknull\\',this.checked)\\\"/></th>\";\r\n    s += \"<th title=\\\"Modify output by using {f} for field value. Ex: {f}+100\\\">Template<br/>({f}=field)<br/>Ex: {f}+100</th></tr>\";\r\n    var template = \"<tr><td>{#}</td>\";\r\n    template += \"<td><input type=text id=\\\"fname{#}\\\" size=\\\"15\\\" value=\\\"{FIELDNAME{#}}\\\" title=\\\"{FTITLE{#}}\\\"></td>\\x0A\";\r\n    template += \"<td><select id=\\\"ftype{#}\\\" title=\\\"Choose data type of column\\\" >\";\r\n    template += \"<option value=\\\"VC\\\" {VC{#}}>VarChar</option>\";\r\n    template += \"<option value=\\\"NVC\\\" {VC{#}}>NVarChar</option>\";\r\n    template += \"<option value=\\\"VCC\\\" {VCC{#}}>VarChar2</option>\";\r\n    template += \"<option value=\\\"C\\\" {C{#}}>Char</option>\";\r\n    template += \"<option value=\\\"NC\\\" {C{#}}>NChar</option>\";\r\n    template += \"<option value=\\\"NR\\\" {NR{#}}>Number</option>\";\r\n    template += \"<option value=\\\"N\\\" {N{#}}>Numeric</option>\";\r\n    template += \"<option value=\\\"IT\\\" {IT{#}}>Int</option>\";\r\n    template += \"<option value=\\\"I\\\" {I{#}}>Integer</option>\";\r\n    template += \"<option value=\\\"BI\\\" {I{#}}>BigInt</option>\";\r\n    template += \"<option value=\\\"D\\\" {D{#}}>Date</option>\";\r\n    template += \"<option value=\\\"DT\\\" {DT{#}}>Date Time</option>\";\r\n    template += \"<option value=\\\"B\\\" {B{#}}>Bit(0,1)</option>\";\r\n    template += \"<option value=\\\"L\\\" {L{#}}>Boolean</option>\";\r\n    template += \"<option value=\\\"M\\\" {M{#}}>Money</option>\";\r\n    template += \"<option value=\\\"S\\\" {S{#}}>Serial</option>\";\r\n    template += \"</select>\\x0A</td><td><input id=\\\"fsize{#}\\\"size=4 maxlength=4 value=\\\"{FIELDSIZE{#}}\\\"></td>\\x0A\";\r\n    template += \"<td><input id=\\\"fdec{#}\\\"size=2 maxlength=2 value=\\\"{DECSIZE{#}}\\\" readonly></td>\";\r\n    template += \"<td><input type=checkbox id=\\\"fkey{#}\\\"  value=\\\"Y\\\" ></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"finc{#}\\\"  value=\\\"Y\\\" checked></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"freq{#}\\\"  value=\\\"Y\\\" ></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"ftrim{#}\\\" value=\\\"Y\\\" checked></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkupper{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked)document.getElementById(\\'chklower{#}\\').checked=false\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chklower{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked)document.getElementById(\\'chkupper{#}\\').checked=false\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chknull{#}\\\" value=\\\"Y\\\" checked></td>\\x0A\";\r\n    template += \"<td><input type=\\\"text\\\" id=\\\"ftem{#}\\\" value=\\\"\\\" size=\\\"15\\\" maxlength=\\\"200\\\"></td>\";\r\n    template += \"</tr>\";\r\n    var j;\r\n    for (j = 0; j < hdr.length; j += 1) {\r\n        s += template.replace(/\\{#\\}/g, \"\" + (j + 1)).replace(\"{FIELDNAME\" + (j + 1) + \"}\", hdr[j].replace(/[@+<>\"'?.,-\\/#!$%\\^&*;:{}=\\-`~()\\[\\]\\\\|]/g, \"\").replace(/\\s+/g, \"_\").replace(/_+/g, \"_\")).replace(\"{FIELDSIZE\" + (j + 1) + \"}\", (stats.length > 0 && stats[j]) !== 0 ? stats[j] : 30);\r\n        if (CSV.statsCnt.length === 0) {\r\n            s = s.replace(\"{VC\" + (j + 1) + \"}\", \"selected\");\r\n            s = s.replace(\"{FTITLE\" + (j + 1) + \"}\", \"Type: Varchar,Counts: Total Records: \" + CSV.table.length + \",Empty Records: 0\");\r\n            s = s.replace(\"{DECSIZE\" + (j + 1) + \"}\", \"\");\r\n            continue\r\n        }\r\n        if (CSV.statsCnt[j].fieldType === \"N\") {\r\n            s = s.replace(\"{DECSIZE\" + (j + 1) + \"}\", CSV.statsCnt[j].fieldDecs)\r\n        } else {\r\n            s = s.replace(\"{DECSIZE\" + (j + 1) + \"}\", \"\")\r\n        }\r\n        s = s.replace(\"{FTITLE\" + (j + 1) + \"}\", \"Type:\" + CSV.statsCnt[j].fieldType + \",Counts: Total Records: \" + CSV.table.length + \",Empty Records:\" + CSV.statsCnt[j].emptyCnt);\r\n        if (CSV.statsCnt[j].fieldType === \"VC\") {\r\n            s = s.replace(\"{VC\" + (j + 1) + \"}\", \"selected\")\r\n        } else {\r\n            if (CSV.statsCnt[j].fieldType === \"VCC\") {\r\n                s = s.replace(\"{VCC\" + (j + 1) + \"}\", \"selected\")\r\n            } else {\r\n                if (CSV.statsCnt[j].fieldType === \"C\") {\r\n                    s = s.replace(\"{C\" + (j + 1) + \"}\", \"selected\")\r\n                } else {\r\n                    if (CSV.statsCnt[j].fieldType === \"N\") {\r\n                        s = s.replace(\"{N\" + (j + 1) + \"}\", \"selected\")\r\n                    } else {\r\n                        if (CSV.statsCnt[j].fieldType === \"I\") {\r\n                            s = s.replace(\"{I\" + (j + 1) + \"}\", \"selected\")\r\n                        } else {\r\n                            if (CSV.statsCnt[j].fieldType === \"B\") {\r\n                                s = s.replace(\"{B\" + (j + 1) + \"}\", \"selected\")\r\n                            } else {\r\n                                if (CSV.statsCnt[j].fieldType === \"D\") {\r\n                                    s = s.replace(\"{D\" + (j + 1) + \"}\", \"selected\")\r\n                                } else {\r\n                                    if (CSV.statsCnt[j].fieldType === \"S\") {\r\n                                        s = s.replace(\"{S\" + (j + 1) + \"}\", \"selected\")\r\n                                    } else {\r\n                                        if (CSV.statsCnt[j].fieldType === \"M\") {\r\n                                            s = s.replace(\"{M\" + (j + 1) + \"}\", \"selected\")\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    s += \"</table>\";\r\n    return s;\r\n}\r\n\r\nfunction setOptions(CSV) {\r\n    var j;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var hdr = getCsvHeader(CSV);\r\n    if (document.getElementById('fkey1')) {\r\n        document.getElementById('fkey1').checked = true\r\n    }\r\n    if (document.getElementById('freq1')) {\r\n        document.getElementById('freq1').checked = true\r\n    }\r\n    for (j = 0; j < hdr.length; j += 1) {\r\n        if (!document.getElementById('fname' + (j + 1))) {\r\n            continue\r\n        }\r\n        document.getElementById('fname' + (j + 1)).value = hdr[j].replace(/[@+<>\"'?.,-\\/#!$%\\^&*;:{}=\\-`~()\\[\\]\\\\|]/g, \"\").replace(/\\s+/g, \"_\").replace(/_+/g, \"_\");\r\n        if (!document.getElementById('ftype' + (j + 1))) {\r\n            continue\r\n        }\r\n        if (!CSV.statsCnt[j]) {\r\n            continue\r\n        }\r\n        if (CSV.statsCnt[j].emptyCnt === 0) {\r\n            document.getElementById('freq' + (j + 1)).checked = true\r\n        }\r\n    }\r\n}\r\n\r\nfunction minOptions(CSV) {\r\n    var inJsonForm = (document && document.getElementById(\"chkNullJson\"));\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var hdr = getCsvHeader(CSV);\r\n    var s = '<table class=\\\"table table-bordered table-hover table-condensed\\\">\\x0A<tr>\\x0A<th>Col #</th><th>Field</th>';\r\n    s += \"<th>Trim Left<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'ftriml\\',this.checked)\\\"/></th>\";\r\n    s += \"<th>Trim Right<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'ftrimr\\',this.checked)\\\"/></th>\";\r\n    s += \"<th>Upper<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkupper\\',this.checked);if(this.checked){setCheckboxes(\\'chklower\\',false);setCheckboxes(\\'chkProper\\',false);}\\\"/></th>\";\r\n    s += \"<th>Lower<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chklower\\',this.checked);if(this.checked){setCheckboxes(\\'chkupper\\',false);setCheckboxes(\\'chkProper\\',false);}\\\"/></th>\";\r\n    s += \"<th title=\\\"1st letter of word capitalized the rest not\\\">Proper Case<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkProper\\',this.checked);if(this.checked){setCheckboxes(\\'chkupper\\',false);setCheckboxes(\\'chklower\\',false);}\\\"/></th>\";\r\n    s += \"<th>Remove Punctuation<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkpunct\\',this.checked)\\\"/></th>\";\r\n    s += \"<th>Crunch Spaces<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkcrunch\\',this.checked)\\\"/></th>\";\r\n    if (inJsonForm) {\r\n        s += \"<th>Use null for Empty Field<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chknull\\',this.checked)\\\"/></th>\\x0A\"\r\n    }\r\n    s += \"<th># Decimals or Date Format</th>\\x0A\";\r\n    s += \"</tr>\";\r\n    var template = \"<tr><td>{#}</td>\";\r\n    template += \"<td>{FIELDNAME{#}}</td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"ftriml{#}\\\" value=\\\"Y\\\" title=\\\"Trim Left\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"ftrimr{#}\\\" value=\\\"Y\\\" title=\\\"Trim Right\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkupper{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked){document.getElementById(\\'chkProper{#}\\').checked=document.getElementById(\\'chklower{#}\\').checked=false}\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chklower{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked){document.getElementById(\\'chkProper{#}\\').checked=document.getElementById(\\'chkupper{#}\\').checked=false}\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkProper{#}\\\" value=\\\"Y\\\" onclick=\\\"if(this.checked){document.getElementById(\\'chklower{#}\\').checked=document.getElementById(\\'chkupper{#}\\').checked=false}\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkpunct{#}\\\"  value=\\\"Y\\\" title=\\\"Remove punctuation\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkcrunch{#}\\\" value=\\\"Y\\\" title=\\\"Replace 2 or more spaces with 1\\\"></td>\\x0A\";\r\n    if (inJsonForm) {\r\n        template += \"<td><input type=checkbox id=\\\"chknull{#}\\\" value=\\\"Y\\\" title=\\\"Use null instead of empty string\\\"></td>\\x0A\"\r\n    }\r\n    template += \"<td><input type=\\\"text\\\" size=\\\"10\\\" id=\\\"fdecimals{#}\\\"  value=\\\"\\\"  title=\\\"Specify # of decimal places or output date format\\\"></td>\\x0A\";\r\n    template += \"</tr>\";\r\n    var j;\r\n    for (j = 0; j < hdr.length; j += 1) {\r\n        s += template.replace(/\\{#\\}/g, \"\" + (j + 1)).replace(\"{FIELDNAME\" + (j + 1) + \"}\", hdr[j].replace(/\\s+/g, \"_\"))\r\n    }\r\n    s += \"</table>\";\r\n    return s;\r\n}\r\n\r\nfunction flatOptions(CSV) {\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    var stats = getCsvColLength(CSV);\r\n    var hdr = getCsvHeader(CSV);\r\n    var s = '<table class=\\\"table table-bordered table-hover table-condensed\\\">\\x0A<tr>\\x0A<th>Col #</th><th>Field Name</th>';\r\n    s += \"<th>Trim<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'ftrim\\',this.checked)\\\"/></th><th>Pad Size</th><th># Decimals or Date Format</th>\";\r\n    s += \"<th>Upper<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkupper\\',this.checked);if(this.checked){setCheckboxes(\\'chklower\\',false);}\\\"/></th>\";\r\n    s += \"<th>Lower<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chklower\\',this.checked);if(this.checked){setCheckboxes(\\'chkupper\\',false);}\\\"/></th>\";\r\n    s += \"<th>Right<br/>Justify<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkrjust\\',this.checked);if(this.checked){setCheckboxes(\\'chkcjust\\',false);}\\\"/></th>\";\r\n    s += \"<th>Center<br/>Justify<br/><input type=\\\"checkbox\\\" onclick=\\\"setCheckboxes(\\'chkcjust\\',this.checked);if(this.checked){setCheckboxes(\\'chkrjust\\',false);}\\\"/></th></tr>\";\r\n    var template = \"<tr><td>{#}</td>\";\r\n    template += \"<td>{FIELDNAME{#}}</td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"ftrim{#}\\\" value=\\\"Y\\\" ></td>\\x0A\";\r\n    template += \"<td><input type=text id=\\\"fpadsize{#}\\\" size=3 maxlength=3 value=\\\"{FIELDSIZE{#}}\\\" ></td>\\x0A\";\r\n    template += \"<td><input type=text id=\\\"fdecimals{#}\\\" size=10 value=\\\"\\\" ></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkupper{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked)document.getElementById(\\'chklower{#}\\').checked=false\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chklower{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked)document.getElementById(\\'chkupper{#}\\').checked=false\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkrjust{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked)document.getElementById(\\'chkcjust{#}\\').checked=false\\\"></td>\\x0A\";\r\n    template += \"<td><input type=checkbox id=\\\"chkcjust{#}\\\"  value=\\\"Y\\\" onclick=\\\"if(this.checked)document.getElementById(\\'chkrjust{#}\\').checked=false\\\"></td>\\x0A\";\r\n    template += \"</tr>\";\r\n    var j;\r\n    for (j = 0; j < hdr.length; j += 1) {\r\n        s += template.replace(/\\{#\\}/g, \"\" + (j + 1)).replace(\"{FIELDNAME\" + (j + 1) + \"}\", hdr[j].replace(/\\s+/g, \"_\")).replace(\"{FIELDSIZE\" + (j + 1) + \"}\", (stats.length > 0 && stats[j]) !== 0 ? stats[j] : \"\")\r\n    }\r\n    s += \"</table>\";\r\n    return s;\r\n}\r\n\r\nfunction parseAndOptions(CSV, forceOptions) {\r\n    var s;\r\n    var j;\r\n    var datefound = 0;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (document.getElementById('txtRowLimit')) {\r\n        CSV.limit = document.getElementById('txtRowLimit').value\r\n    }\r\n    if (document.getElementById('txtSkipLimit')) {\r\n        CSV.skip = document.getElementById('txtSkipLimit').value\r\n    }\r\n    if (document.getElementById('chkHeader')) {\r\n        CSV.isFirstRowHeader = document.getElementById('chkHeader').checked\r\n    }\r\n    if (document.getElementById('chkHeaderUpper')) {\r\n        CSV.headerToUpper = document.getElementById('chkHeaderUpper').checked\r\n    }\r\n    if (document.getElementById('chkHeaderLower')) {\r\n        CSV.headerToLower = document.getElementById('chkHeaderLower').checked\r\n    }\r\n    if (document.getElementById('txt1')) {\r\n        CSV.parse(document.getElementById('txt1').value);\r\n        if (false && CSV.detectedQuote != CSV.quote) {\r\n            CSV.quote = CSV.detectedQuote;\r\n            CSV.parse(document.getElementById('txt1').value);\r\n            if (document.getElementById(\"chkInputQuote\")) {\r\n                document.getElementById(\"chkInputQuote\").checked = CSV.detectedQuote === \"\\'\"\r\n            }\r\n            forceOptions = true;\r\n        }\r\n        for (j = 0; j < CSV.maxColumnsFound; j += 1) {\r\n            if (CSV.statsCnt[j] && CSV.statsCnt[j].fieldType === \"D\") {\r\n                datefound += 1\r\n            }\r\n        }\r\n        if (detCsvDateFormat && datefound > 0) {\r\n            detCsvDateFormat(CSV)\r\n        } else {\r\n            CSV.dateformat = undefined\r\n        }\r\n    }\r\n    if (document.getElementById('divOptions') && (CSV.prevColumnsFound != CSV.maxColumnsFound || forceOptions)) {\r\n        document.getElementById('divOptions').innerHTML = sqlOptions(CSV);\r\n        setOptions(CSV);\r\n        CSV.prevColumnsFound = CSV.maxColumnsFound\r\n    }\r\n    if (document.getElementById('divFlatOptions') && (CSV.prevColumnsFound != CSV.maxColumnsFound || forceOptions)) {\r\n        document.getElementById('divFlatOptions').innerHTML = flatOptions(CSV);\r\n        CSV.prevColumnsFound = CSV.maxColumnsFound\r\n    }\r\n    if (document.getElementById('divMinOptions') && (CSV.prevColumnsFound != CSV.maxColumnsFound || forceOptions)) {\r\n        document.getElementById('divMinOptions').innerHTML = minOptions(CSV);\r\n        CSV.prevColumnsFound = CSV.maxColumnsFound\r\n    }\r\n    if (document.getElementById(\"divInputCounts\")) {\r\n        document.getElementById(\"divInputCounts\").innerHTML = \"Input Records- Header: \" + (((CSV.arHeaderRow.length === 0) && (CSV.isFirstRowHeader)) ? \"missing\" : CSV.isFirstRowHeader + (CSV.isFirstRowHeader ? \" &nbsp; Header Fields: \" + CSV.headerColumns : \"\")) + \"\\x0A<br/>Data: \" + \" Separator: \" + (CSV.delimiter == \"\\x09\" ? \"Tab\" : CSV.delimiter == \" \" ? \"Space\" : CSV.delimiter || \" \") + \" &nbsp; &nbsp; \" + \" Fields: \" + CSV.maxColumnsFound + \" &nbsp; &nbsp; \" + \" Records: \" + (CSV.dataRowsFound <= 0 ? \"0\" : CSV.dataRowsFound);\r\n        if (CSV.isFirstRowHeader) {\r\n            for (j = 0; j < CSV.arHeaderRow.length; j += 1) {\r\n                if (CSV.arHeaderRow[j].isNumeric() || CSV.arHeaderRow[j] === \"\") {\r\n                    document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Are you sure your First row is column names?\";\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        for (j = 0; j < CSV.headerErrors.length; j += 1) {\r\n            document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Heading column # \" + CSV.headerErrors[j].field + \" is empty.\"\r\n        }\r\n        if (CSV.skipEmptyRowCnt > 0) {\r\n            document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Empty lines skipped: \" + CSV.skipEmptyRowCnt\r\n        }\r\n        if (CSV.isFirstRowHeader && CSV.headerImbalance && CSV.dataRowsFound > 0) {\r\n            document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Your column header has \" + CSV.headerColumns + \" columns but these lines do not: \" + CSV.headerImbalanceRows\r\n        } else {\r\n            if (CSV.fieldImbalance) {\r\n                document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Your first line has \" + CSV.maxColumnsFound + \" columns but these lines do not: \" + CSV.fieldImbalanceRows\r\n            }\r\n        }\r\n        if (CSV.quote != CSV.detectedQuote) {\r\n            document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Are you sure your Quoting Character setting is correct? <small>(See Input Options)</small>\"\r\n        }\r\n        for (j = 0; j < CSV.statsCnt.length; j += 1) {\r\n            if (CSV.statsCnt[j] && (CSV.statsCnt[j].fieldType != \"D\" && (CSV.statsCnt[j].dateCnt - CSV.statsCnt[j].emptyCnt) / CSV.dataRowsFound >= 0.9)) {\r\n                document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - Field: \" + (CSV.arHeaderRow[j] || (j + 1)) + \" appears to be a DATE yet it has non-date values\"\r\n            }\r\n        }\r\n        var bad;\r\n        var cnt = 0;\r\n        var msg = [\"\", \"Spaces before quoting character\", \"Data after quoting character\", \"Missing end Quoting character\"];\r\n        for (bad in CSV.relaxedInfo) {\r\n            cnt += 1;\r\n            if (cnt > 5) {\r\n                document.getElementById(\"divInputCounts\").innerHTML += \"<br/>...\";\r\n                break\r\n            }\r\n            document.getElementById(\"divInputCounts\").innerHTML += \"<br/><b>WARNING</b> - \" + msg[CSV.relaxedInfo[bad].error] + \" at line: \" + bad + \", Column:\" + CSV.relaxedInfo[bad].column;\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearAll() {\r\n    var appendMode = false;\r\n    if (document.getElementById('chkAppend')) {\r\n        appendMode = document.getElementById('chkAppend').checked\r\n    }\r\n    if (document.getElementById('sepAuto')) {\r\n        document.getElementById('sepAuto').checked = true\r\n    }\r\n    if (CSV) {\r\n        CSV.delimiter = \",\";\r\n        CSV.autodetect = true;\r\n        CSV.quote = '\\\"';\r\n        CSV.outputQuote = '\\\"';\r\n        CSV.maxColumnsFound = 0\r\n    }\r\n    if (document.getElementById('txt1')) {\r\n        document.getElementById('txt1').value = \"\"\r\n    }\r\n    if (!appendMode) {\r\n        if (document.getElementById('txta')) {\r\n            document.getElementById('txta').value = \"\"\r\n        }\r\n    }\r\n    if (document.getElementById('txtCols')) {\r\n        document.getElementById('txtCols').value = \"\"\r\n    }\r\n    if (document.getElementById('chkHeader')) {\r\n        document.getElementById('chkHeader').checked = true\r\n    }\r\n    if (document.getElementById('chkHeaderUpper')) {\r\n        document.getElementById('chkHeaderUpper').checked = false\r\n    }\r\n    if (document.getElementById('chkHeaderLower')) {\r\n        document.getElementById('chkHeaderLower').checked = false\r\n    }\r\n    if (!appendMode) {\r\n        if (document.getElementById('diva')) {\r\n            document.getElementById('diva').innerHTML = \"\"\r\n        }\r\n    }\r\n    if (document.getElementById('divOptions')) {\r\n        document.getElementById('divOptions').innerHTML = \"\"\r\n    }\r\n    if (document.getElementById('divFlatOptions')) {\r\n        document.getElementById('divFlatOptions').innerHTML = \"\"\r\n    }\r\n    if (document.getElementById('divMinOptions')) {\r\n        document.getElementById('divMinOptions').innerHTML = \"\"\r\n    }\r\n    if (document.getElementById('chkInputQuote')) {\r\n        document.getElementById('chkInputQuote').checked = false\r\n    }\r\n    if (document.getElementById('chkOutputQuote')) {\r\n        document.getElementById('chkOutputQuote').checked = false\r\n    }\r\n    if (document.getElementById('chkIgnoreDoubleQuote')) {\r\n        document.getElementById('chkIgnoreDoubleQuote').checked = false\r\n    }\r\n    if (document.getElementById('chkDecodeLiterals')) {\r\n        document.getElementById('chkDecodeLiterals').checked = false\r\n    }\r\n    parseAndOptions();\r\n    setupSortDD();\r\n}\r\n\r\nfunction getUserOptions(colpos) { }\r\n\r\nfunction radiovalue(radioObj) {\r\n    var j;\r\n    if (!radioObj) {\r\n        return \"\"\r\n    }\r\n    var radioLength = radioObj.length;\r\n    if (radioLength === void 0) {\r\n        if (radioObj.checked) {\r\n            return radioObj.value\r\n        } else {\r\n            return \"\"\r\n        }\r\n    }\r\n    for (var i = 0; i < radioLength; i += 1) {\r\n        if (radioObj[i].checked) {\r\n            return radioObj[i].value\r\n        }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nfunction setRadioValue(radioObj, newValue) {\r\n    if (!radioObj) {\r\n        return\r\n    }\r\n    var radioLength = radioObj.length;\r\n    if (radioLength === void 0) {\r\n        radioObj.checked = (radioObj.value == newValue.toString());\r\n        return\r\n    }\r\n    newValue = (newValue || \"\") + \"\";\r\n    if (newValue === \"\\x09\") {\r\n        newValue = \"\\\\t\"\r\n    }\r\n    for (var i = 0; i < radioLength; i += 1) {\r\n        radioObj[i].checked = false;\r\n        if (radioObj[i].value == newValue) {\r\n            radioObj[i].checked = true\r\n        }\r\n    }\r\n}\r\n\r\nfunction sortStr() {\r\n    var ddFld;\r\n    var a, d, j, s, t;\r\n    s = \"\";\r\n    for (j = 1; j <= 4; j += 1) {\r\n        ddFld = document.getElementById('selSortFld' + j);\r\n        if (!ddFld) {\r\n            continue\r\n        }\r\n        d = document.getElementById('selSortFld' + j).value;\r\n        if (d === \"\") {\r\n            continue\r\n        }\r\n        t = document.getElementById('selSortType' + j).value;\r\n        a = document.getElementById('selSortAsc' + j).value;\r\n        if (j > 1) {\r\n            s += \",\"\r\n        }\r\n        s += t + d + a;\r\n    }\r\n    CSV.setSortFlds(s);\r\n    CSV.mySortNeeded = true;\r\n    return s;\r\n}\r\n\r\nfunction setupSortDD() {\r\n    var dd;\r\n    var j, k, o;\r\n    for (j = 1; j <= 4; j += 1) {\r\n        dd = document.getElementById('selSortFld' + j);\r\n        if (!dd) {\r\n            continue\r\n        }\r\n        if (dd.options.length - 1 == CSV.maxColumnsFound) {\r\n            break\r\n        }\r\n        dd.options.length = 1;\r\n        dd.selectedIndex = 0;\r\n        for (k = 1; k <= CSV.maxColumnsFound; k += 1) {\r\n            o = document.createElement(\"option\");\r\n            o.text = o.value = \"\" + k;\r\n            dd.options.add(o)\r\n        }\r\n    }\r\n    sortStr();\r\n    if (typeof (csvCreateQueryUI) == typeof (Function)) {\r\n        csvCreateQueryUI()\r\n    }\r\n    if (document.getElementById(\"btnColsReset\")) {\r\n        document.getElementById(\"btnColsReset\").click()\r\n    }\r\n}\r\n\r\nfunction getFldPosArr(CSV) {\r\n    var a = [];\r\n    var i, j;\r\n    if (!CSV) {\r\n        return\r\n    }\r\n    if (CSV.displayPoss !== \"\") {\r\n        a = CSV.displayPoss.split(\",\");\r\n        for (i = 0; i < a.length; i += 1) {\r\n            a[i] = (a[i] + \"\").trim();\r\n            if (isNaN(a[i]) && a[i] > \" \") {\r\n                for (j = 0; j < CSV.arHeaderRow.length; j += 1) {\r\n                    if ((a[i] + \"\").toUpperCase() == CSV.arHeaderRow[j].toUpperCase()) {\r\n                        a[i] = j + 1\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (i = a.length - 1; i >= 0; i -= 1) {\r\n            if (isNaN(a[i]) || a[i] < 1 || a[i] > CSV.maxColumnsFound) {\r\n                a.splice(i, 1)\r\n            }\r\n        }\r\n        for (i = 0; i < a.length; i += 1) {\r\n            a[i] *= 1\r\n        }\r\n    }\r\n    if (a.length === 0) {\r\n        for (i = 0; i < CSV.maxColumnsFound; i += 1) {\r\n            a[a.length] = i + 1\r\n        }\r\n    }\r\n    if (a.length === 0) {\r\n        for (i = 0; i < CSV.arHeaderRow.length; i += 1) {\r\n            a[a.length] = i + 1\r\n        }\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction flattenSqlJson(data) {\r\n    var j;\r\n    var newo = [];\r\n    for (j = 0; j < data.length; j += 1) {\r\n        var rec = {};\r\n        for (k = 0; k < data[j].length; k += 1) {\r\n            rec[data[j][k].column] = data[j][k].value\r\n        }\r\n        newo[j] = rec;\r\n    }\r\n    return newo;\r\n}\r\n\r\nfunction getExampleCsv() {\r\n    var s = \"id,name,amount,Remark\\x0A\" + \"1,\\\"Johnson, Smith, and Jones Co.\\\",345.33,Pays on time\\x0A\" + \"2,\\\"Sam \\\"\\\"Mad Dog\\\"\\\" Smith\\\",993.44,\\x0A\" + \"3,\\\"Barney & Company\\\",0,\\\"Great to work with\\x0A\" + \"and always pays with cash.\\\"\\x0A\" + \"4,Johnson\\'s Automotive,2344,\\x0A\";\r\n    return s\r\n}\r\n\r\nfunction getExampleCsvJson() {\r\n    var s = \"id,name/first,name/last,rating/0,rating/1,rating/2\\x0A\" + \"1,Dan,Jones,8,7,9\\x0A\" + \"2,Bill,Barner,7,6,5\\x0A\" + \"3,Joe,Smoe,4,3,\\x0A\";\r\n    return s\r\n}\r\n\r\nfunction getExampleXml(n) {\r\n    n = (n || 1) - 1;\r\n    var s = \"<?xml version=\\\"1.0\\\"?>\\x0A\" + \"<ROWSET>\\x0A\" + \"<ROW>\\x0A\" + \"<id>1</id>\\x0A\" + \"<name>Johnson, Smith, and Jones Co.</name>\\x0A\" + \"<amount>345.33</amount>\\x0A\" + \"<Remark>Pays on time</Remark>\\x0A\" + \"</ROW>\\x0A\" + \"<ROW>\\x0A\" + \"<id>2</id>\\x0A\" + \"<name>Sam &quot;Mad Dog&quot; Smith</name>\\x0A\" + \"<amount>993.44</amount>\\x0A\" + \"<Remark></Remark>\\x0A\" + \"</ROW>\\x0A\" + \"<ROW>\\x0A\" + \"<id>3</id>\\x0A\" + \"<name>Barney &amp; Company</name>\\x0A\" + \"<amount>0</amount>\\x0A\" + \"<Remark>Great to work with\\x0A\" + \"and always pays with cash.</Remark>\\x0A\" + \"</ROW>\\x0A\" + \"<ROW>\\x0A\" + \"<id>4</id>\\x0A\" + \"<name>Johnson&apos;s Automotive</name>\\x0A\" + \"<amount>2344</amount>\\x0A\" + \"<Remark></Remark>\\x0A\" + \"</ROW>\\x0A\" + \"</ROWSET>\";\r\n    return s\r\n}\r\n\r\nfunction getExampleJson(n) {\r\n    n = (n || 1) - 1;\r\n    var s = [\"[\\x0A\" + \"  {\\x0A\" + \"    \\\"id\\\":1,\" + \"    \\\"name\\\":\\\"Johnson, Smith, and Jones Co.\\\",\\x0A\" + \"    \\\"amount\\\":345.33,\" + \"    \\\"Remark\\\":\\\"Pays on time\\\"\\x0A\" + \"  },\\x0A\" + \"  {\\x0A\" + \"    \\\"id\\\":2,\" + \"    \\\"name\\\":\\\"Sam \\\\\\\"Mad Dog\\\\\\\" Smith\\\",\\x0A\" + \"    \\\"amount\\\":993.44,\" + \"    \\\"Remark\\\":\\\"\\\"\\x0A\" + \"  },\\x0A\" + \"  {\\x0A\" + \"    \\\"id\\\":3,\" + \"    \\\"name\\\":\\\"Barney & Company\\\",\\x0A\" + \"    \\\"amount\\\":0,\" + \"    \\\"Remark\\\":\\\"Great to work with\\\\nand always pays with cash.\\\"\\x0A\" + \"  },\\x0A\" + \"  {\\x0A\" + \"    \\\"id\\\":4,\" + \"    \\\"name\\\":\\\"Johnson\\'s Automotive\\\",\\x0A\" + \"    \\\"amount\\\":2344,\" + \"    \\\"Remark\\\":\\\"\\\"\\x0A\" + \"  }\\x0A\" + \"]\\x0A\", \"{ \\\"data\\\" : [\\x0A\" + \"  {\" + \"    \\\"id\\\":1,\" + \"    \\\"name\\\":\\\"Johnson, Smith, and Jones Co.\\\"\" + \"  },\\x0A\" + \"  {\" + \"    \\\"id\\\":2,\" + \"    \\\"name\\\":\\\"Sam \\\\\\\"Mad Dog\\\\\\\" Smith\\\"\" + \"  },\\x0A\" + \"  {\" + \"    \\\"id\\\":3,\" + \"    \\\"name\\\":\\\"Barney & Company\\\"\" + \"  },\\x0A\" + \"  {\" + \"    \\\"id\\\":4,\" + \"    \\\"name\\\":\\\"Johnson\\'s Automotive\\\"\" + \"  }\\x0A\" + \"] }\\x0A\", \"{ \\\"race\\\" : \\x0A\" + \" { \\\"entries\\\" : [\\x0A\" + \"  {\" + \"    \\\"id\\\":11,\" + \"    \\\"name\\\":\\\"Johnson, Smith, and Jones Co.\\\"\" + \"  },\\x0A\" + \"  {\" + \"    \\\"id\\\":22,\" + \"    \\\"name\\\":\\\"Sam \\\\\\\"Mad Dog\\\\\\\" Smith\\\"\" + \"  },\\x0A\" + \"  {\" + \"    \\\"id\\\":33,\" + \"    \\\"name\\\":\\\"Barney & Company\\\"\" + \"  },\\x0A\" + \"  {\" + \"    \\\"id\\\":44,\" + \"    \\\"name\\\":\\\"Johnson\\'s Automotive\\\"\" + \"  }\\x0A\" + \"] }\\x0A}\\x0A\", \"{\\x0A\" + \"    \\\"id\\\":1,\" + \"    \\\"name\\\":\\\"Johnson, Smith, and Jones Co.\\\",\" + \"    \\\"amount\\\":345.33,\" + \"    \\\"Remark\\\":\\\"Pays on time\\\"\\x0A\" + \"}\\x0A\", \"[\\x0A\" + \"    [\" + \"      1,\" + \"      \\\"Johnson, Smith, and Jones Co.\\\",\" + \"      345.33\" + \"    ],\\x0A\" + \"    [\" + \"      99,\" + \"      \\\"Acme Food Inc.\\\",\" + \"      2993.55\" + \"    ]\\x0A\" + \"]\"];\r\n    return s[n]\r\n}\r\n\r\nfunction getExampleKml() {\r\n    var s = \"National Park,$ Obligated,State,Latitude,Longitude\\x0A\" + \"Abraham Lincoln Birthplace NHS,\\\"$34,584\\\",KY,37.6116333423,-85.6442940021\\x0A\" + \"Acadia,\\\"$102,631\\\",ME,44.3593807753,-68.2397319808\\x0A\" + \"Andersonville,\\\"$65,133\\\",GA,32.197905290823,-84.1302615685733\\x0A\" + \"Andrew Johnson ,\\\"$17,949\\\",TN,36.1562449930463,-82.8370902853041\\x0A\" + \"Antietam,\\\"$54,743\\\",MD,39.462381614,-77.7359854016\\x0A\" + \"Appomattox Court House,\\\"$12,651\\\",VA,37.3826448073,-78.8027430409\\x0A\" + \"Assateague Island,\\\"$51,921\\\",MD,38.0556022623662,-75.2453836072023\\x0A\" + \"Big Bend,\\\"$535,983\\\",TX,29.0103562389,-103.311115521\\x0A\" + \"Big South Fork National River and Recreation Area,\\\"$3,009\\\",\\\"TN, KY\\\",36.3837375235,-84.6743069824\\x0A\";\r\n    return s\r\n}\r\n\r\nfunction getExampleFlat() {\r\n    var s = \"1     Johnson, Smith, and Jones Co.  345.33     Pays on time                  \\x0A\" + \"2     Sam \\\"Mad Dog\\\" Smith            993.44              \\x0A\" + \"3     Barney & Company               0          Great to work with and always pays with cash.      \\x0A\" + \"4     Johnson\\'s Automotive           2344        \\x0A\";\r\n    return s\r\n}\r\n\r\nfunction getExampleGeoJson(n) {\r\n    var s = \"{ \\x0A    \\\"type\\\": \\\"FeatureCollection\\\",\\x0A    \\\"features\\\": [\\x0A      { \\\"type\\\": \\\"Feature\\\",\\x0A        \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [-75.343, 39.984]},\\x0A        \\\"properties\\\": { \\x0A          \\\"name\\\": \\\"Location A\\\",\\x0A          \\\"category\\\": \\\"Store\\\"\\x0A        }\\x0A      },\\x0A      { \\\"type\\\": \\\"Feature\\\",\\x0A        \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [-80.24, 40.12]},\\x0A        \\\"properties\\\": { \\x0A          \\\"name\\\": \\\"Location B\\\",\\x0A          \\\"category\\\": \\\"House\\\"\\x0A        }\\x0A      },\\x0A      { \\\"type\\\": \\\"Feature\\\",\\x0A        \\\"geometry\\\": {\\\"type\\\": \\\"Point\\\", \\\"coordinates\\\": [ -77.2, 41.427]},\\x0A        \\\"properties\\\": { \\x0A          \\\"name\\\": \\\"Location C\\\",\\x0A          \\\"category\\\": \\\"Office\\\"\\x0A        }\\x0A      }\\x0A    ]\\x0A  }\";\r\n    return s\r\n}\r\n\r\nfunction loadScript(url) {\r\n    var s = document.createElement(\"script\");\r\n    s.type = \"text/javascript\";\r\n    s.id = \"dynScriptTemp\";\r\n    s.src = url;\r\n    document.getElementsByTagName(\"head\")[0].appendChild(s)\r\n}\r\n\r\nfunction loadScriptAndRun(url) {\r\n    if (!url.startsWith('?')) {\r\n        url = '?' + url\r\n    }\r\n    loadScript(\"https://www.convertcsv.com/cgi-bin/url-to-json.php\" + url);\r\n}\r\n\r\nfunction loadDataAndRun(data) {\r\n    document.getElementById('txt1').value = data.html.join(\"\\x0A\");\r\n    document.getElementById('btnRun').click()\r\n}\r\n\r\nfunction loadURL(url) {\r\n    if (url.trim() === \"\") {\r\n        alert(\"Missing URL\");\r\n        return false\r\n    }\r\n    loadScriptAndRun(\"?callback=loadDataAndRun&url=\" + encodeURIComponent(url));\r\n}\r\n\r\nfunction prettyJSON(text, step) {\r\n    var step = step ? step : 3;\r\n    if (typeof JSON === 'undefined') {\r\n        return text\r\n    }\r\n    try {\r\n        if (typeof text === \"string\") {\r\n            return JSON.stringify(JSON.parse(text), null, step)\r\n        }\r\n        if (typeof text === \"object\") {\r\n            return JSON.stringify(text, null, step)\r\n        }\r\n    } catch (e) {\r\n        try {\r\n            A = eval('(' + text + ')');\r\n            return JSON.stringify(A, null, step)\r\n        } catch (e) { } // jshint ignore:line\r\n    }\r\n    return text;\r\n}\r\n\r\nfunction getJsonLevel(o) {\r\n    if (typeof o === \"string\") {\r\n        o = JSON.parse(o)\r\n    }\r\n    var s = JSON.stringify(o, null, \"\\x09\").split(/\\r\\n|\\n|\\r/gm);\r\n    var level = 0;\r\n    var j, a;\r\n    for (j = 0; j < s.length; j += 1) {\r\n        if (s[j].charAt(0) != \"\\x09\") {\r\n            continue\r\n        }\r\n        a = s[j].match(/\\t+/gm);\r\n        if (a[0].length > level) {\r\n            level = a[0].length\r\n        }\r\n    }\r\n    return level + 1;\r\n}\r\n\r\nfunction saveOutput(text, fn, doctype) {\r\n    var blob = new Blob([text], {\r\n        type: \"text/plain;charset=utf-8\"\r\n    });\r\n    saveAs(blob, fn, true)\r\n}\r\n\r\nfunction saveExcel(id, resetCsv) {\r\n    var fn = \"convertcsv\";\r\n    var old = {};\r\n    if (resetCsv) {\r\n        old.autodetect = CSV.autodetect;\r\n        old.isFirstRowHeader = CSV.isFirstRowHeader;\r\n        old.quote = CSV.quote;\r\n        old.delimiter = CSV.delimiter;\r\n        old.table = CSV.table.slice(0)\r\n    }\r\n    if (document.getElementById(\"fn\")) {\r\n        fn = document.getElementById(\"fn\").value\r\n    }\r\n    CSV.autodetect = true;\r\n    CSV.isFirstRowHeader = false;\r\n    CSV.quote = '\\\"';\r\n    if (document.getElementById(\"frm1\") && document.getElementById(\"outSepComma\")) {\r\n        CSV.delimiter = radiovalue(document.frm1.outsep) || \",\";\r\n        if (CSV.delimiter === \"o\") {\r\n            CSV.delimiter = document.getElementById(\"outSepOtherVal\").value\r\n        }\r\n        CSV.autodetect = false;\r\n    }\r\n    if (document.getElementById(\"chkOutputQuote\")) {\r\n        if (document.getElementById(\"chkOutputQuote\").checked) {\r\n            CSV.quote = \"\\'\"\r\n        }\r\n    }\r\n    if (document.getElementById(id)) {\r\n        CSV.parse(document.getElementById(id).value)\r\n    } else {\r\n        CSV.parse(id)\r\n    }\r\n    alasql('SELECT * INTO XLSX(\\\"' + fn + '.xlsx\\\",{headers:false}) FROM ?', [CSV.table]);\r\n    if (resetCsv) {\r\n        CSV.autodetect = old.autodetect;\r\n        CSV.isFirstRowHeader = old.isFirstRowHeader;\r\n        CSV.quote = old.quote;\r\n        CSV.delimiter = old.delimiter;\r\n        CSV.table = old.table.slice(0);\r\n        CSV.parse(CSV.stringify())\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction saveFile(text, ext) {\r\n    var eol = \"\\x0D\\x0A\";\r\n    if (ext === null || ext === undefined) {\r\n        ext = \"\"\r\n    }\r\n    if (ext !== \"\") {\r\n        ext = \".\" + ext\r\n    }\r\n    var fn = document.getElementById('fn').value.trim();\r\n    if (fn === \"\") {\r\n        fn = document.getElementById('fn').value = \"convertcsv\"\r\n    }\r\n    if (document.getElementById(\"eol\")) {\r\n        eol = document.getElementById(\"eol\").value || eol\r\n    }\r\n    if (eol == \"LF\") {\r\n        eol = \"\\x0A\"\r\n    }\r\n    if (eol == \"CRLF\") {\r\n        eol = \"\\x0D\\x0A\"\r\n    }\r\n    var v = text.replace(/\\r\\n|\\r|\\n/gm, eol);\r\n    saveOutput(v, fn + ext, null);\r\n}\r\n\r\nfunction loadCsv() {\r\n    var delimiter = \"\";\r\n    var q = \"\";\r\n    var bs = 0;\r\n    var acc = \"\";\r\n    var idq = \"\";\r\n    if (!storageSup.has_html5_storage()) {\r\n        return\r\n    }\r\n    if (storageSup.getCacheCsv() === null) {\r\n        storageSup.setCacheCsv(\"N\")\r\n    }\r\n    if (storageSup.getCacheCsv() != \"Y\") {\r\n        return\r\n    }\r\n    if (document.getElementById('txt1') && sessionStorage.getItem(\"clearPressed\") != \"Y\") {\r\n        if (document.getElementById(\"chkHeader\")) {\r\n            document.getElementById(\"chkHeader\").checked = localStorage.getItem(\"csvChkHeader\") == \"Y\";\r\n            delimiter = localStorage.getItem(\"csvDelimiter\");\r\n            setRadioValue(document.forms.frm1.sep, delimiter);\r\n            q = localStorage.getItem(\"csvQuote\");\r\n            bs = localStorage.getItem(\"csvBackslash\");\r\n            acc = localStorage.getItem(\"chkReplaceAccents\");\r\n            idq = localStorage.getItem(\"chkIgnoreDoubleQuote\");\r\n            CSV.autodetect = true;\r\n            if (delimiter && delimiter !== \"\") {\r\n                CSV.autodetect = false;\r\n                CSV.delimiter = delimiter\r\n            }\r\n            if (q && q !== \"\") {\r\n                CSV.quote = q;\r\n                if (document.getElementById(\"chkInputQuote\")) {\r\n                    document.getElementById(\"chkInputQuote\").checked = (q === \"\\'\")\r\n                }\r\n            }\r\n            if (idq && idq !== \"\") {\r\n                if (document.getElementById(\"chkIgnoreDoubleQuote\")) {\r\n                    CSV.ignoreQuote = (idq == \"Y\");\r\n                    document.getElementById(\"chkIgnoreDoubleQuote\").checked = CSV.ignoreQuote\r\n                }\r\n            }\r\n            if (acc && acc !== \"\") {\r\n                if (document.getElementById(\"chkReplaceAccents\")) {\r\n                    document.getElementById(\"chkReplaceAccents\").checked = (acc === \"Y\")\r\n                }\r\n            }\r\n            CSV.decodeBackslashLiterals = false;\r\n            if (bs !== \"\") {\r\n                CSV.decodeBackslashLiterals = (bs === \"Y\");\r\n                if (document.getElementById(\"chkDecodeLiterals\")) {\r\n                    document.getElementById(\"chkDecodeLiterals\").checked = CSV.decodeBackslashLiterals\r\n                }\r\n            }\r\n        }\r\n        assignText(storageSup.getCsv());\r\n    }\r\n    sessionStorage.setItem(\"clearPressed\", \"\");\r\n}\r\n\r\nfunction saveCsv() {\r\n    var q = CSV.quote || '\\\"';\r\n    var bs = \"N\";\r\n    if (!storageSup.has_html5_storage()) {\r\n        return\r\n    }\r\n    if (document.getElementById(\"chkReplaceAccents\")) {\r\n        localStorage.setItem(\"chkReplaceAccents\", (document.getElementById(\"chkReplaceAccents\").checked) ? \"Y\" : \"\")\r\n    }\r\n    if (document.getElementById(\"chkIgnoreDoubleQuote\")) {\r\n        localStorage.setItem(\"chkIgnoreDoubleQuote\", (document.getElementById(\"chkIgnoreDoubleQuote\").checked) ? \"Y\" : \"\")\r\n    }\r\n    if (document.getElementById(\"chkDecodeLiterals\")) {\r\n        bs = document.getElementById(\"chkDecodeLiterals\").checked\r\n    }\r\n    if (document.getElementById('txt1')) {\r\n        if (document.getElementById('txt1').value != getExampleCsv() && document.getElementById('txt1').value.length > 0) {\r\n            storageSup.putCsv(document.getElementById('txt1').value, document.getElementById(\"chkHeader\").checked ? \"Y\" : \"N\", radiovalue(document.forms.frm1.sep), q, bs ? \"Y\" : \"N\")\r\n        }\r\n    }\r\n}\r\n\r\nfunction clearPage() {\r\n    if (storageSup && storageSup.has_html5_storage()) {\r\n        sessionStorage.setItem(\"clearPressed\", \"Y\")\r\n    }\r\n    window.location.reload(true);\r\n}\r\n\r\nfunction doTransformations(v, k, CSV) {\r\n    var d;\r\n    if (document.getElementById(\"ftrim\" + (k + 1))) {\r\n        if (document.getElementById(\"ftrim\" + (k + 1)).checked) {\r\n            v = v.trim()\r\n        }\r\n    }\r\n    if (document.getElementById(\"ftriml\" + (k + 1))) {\r\n        if (document.getElementById(\"ftriml\" + (k + 1)).checked) {\r\n            v = v.ltrim()\r\n        }\r\n    }\r\n    if (document.getElementById(\"ftrimr\" + (k + 1))) {\r\n        if (document.getElementById(\"ftrimr\" + (k + 1)).checked) {\r\n            v = v.rtrim()\r\n        }\r\n    }\r\n    if (document.getElementById(\"chkupper\" + (k + 1))) {\r\n        if (document.getElementById(\"chkupper\" + (k + 1)).checked) {\r\n            v = v.toUpperCase()\r\n        }\r\n    }\r\n    if (document.getElementById(\"chklower\" + (k + 1))) {\r\n        if (document.getElementById(\"chklower\" + (k + 1)).checked) {\r\n            v = v.toLowerCase()\r\n        }\r\n    }\r\n    if (document.getElementById(\"chkProper\" + (k + 1))) {\r\n        if (document.getElementById(\"chkProper\" + (k + 1)).checked) {\r\n            v = v.toProperCase()\r\n        }\r\n    }\r\n    if (document.getElementById(\"chkpunct\" + (k + 1))) {\r\n        if (document.getElementById(\"chkpunct\" + (k + 1)).checked) {\r\n            if (CSV.statsCnt[k]) {\r\n                if (CSV.statsCnt[k].fieldType != \"N\" && CSV.statsCnt[k].fieldType != \"I\") {\r\n                    v = v.removePunctuation()\r\n                }\r\n            } else {\r\n                v = v.removePunctuation()\r\n            }\r\n        }\r\n    }\r\n    if (document.getElementById(\"chkcrunch\" + (k + 1))) {\r\n        if (document.getElementById(\"chkcrunch\" + (k + 1)).checked) {\r\n            v = v.crunch()\r\n        }\r\n    }\r\n    if (document.getElementById(\"fdecimals\" + (k + 1))) {\r\n        if (document.getElementById(\"fdecimals\" + (k + 1)).value !== \"\") {\r\n            d = document.getElementById('fdecimals' + (k + 1)).value;\r\n            if (CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"N\" || CSV.statsCnt[k].fieldType == \"I\" || CSV.statsCnt[k].fieldType == \"B\")) {\r\n                if (isNaN(d)) {\r\n                    d = 0\r\n                } else {\r\n                    d = d * 1\r\n                }\r\n                if (v.trim() !== \"\") {\r\n                    v = (v.toNumber().toFixed(d) + \"\")\r\n                }\r\n            } else {\r\n                if (v.trim() !== \"\" && CSV.statsCnt[k] && (CSV.statsCnt[k].fieldType == \"D\" || (CSV.statsCnt[k].dateCnt - CSV.statsCnt[k].emptyCnt) / CSV.dataRowsFound >= 0.9)) {\r\n                    var vv = v;\r\n                    try {\r\n                        d = d.toUpperCase();\r\n                        var v = moment(v, CSV.dateformat[k]).format(d)\r\n                    } catch (e) {\r\n                        v = vv\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return v;\r\n}\r\n\r\nfunction setOutputSingleQuote(on) {\r\n    CSV.outputQuote = (on ? \"\\'\" : '\\\"')\r\n}\r\n\r\nfunction setInputSingleQuote(on) {\r\n    CSV.quote = (on ? \"\\'\" : '\\\"');\r\n    parseAndOptions(CSV, true)\r\n}\r\n\r\nfunction setCheckboxes(name, tf) {\r\n    var j;\r\n    var fld;\r\n    for (j = 0; j < CSV.maxColumnsFound; j += 1) {\r\n        fld = document.getElementById(name + (j + 1));\r\n        if (!fld) {\r\n            continue\r\n        }\r\n        fld.checked = tf;\r\n    }\r\n}\n// jshint esversion: 10\r\nvar res = {\r\n    \"url\": /((?:https?|ftp):\\/\\/[\\-A-Z0-9+\\u0026\\u2019@#\\/%?=()~_|!:,.;]*[\\-A-Z0-9+\\u0026@#\\/%=~()_|])/gmi\r\n};\r\nvar opt = {};\r\nvar listcnt = 0;\r\nvar toExcel = 0;\r\n\r\nfunction initOpt() {\r\n    opt.delimiter = radiovalue(document.forms[0].outsep);\r\n    if (opt.delimiter == \"o\") {\r\n        opt.delimiter = $(\"#outSepOtherVal\")[0].value\r\n    }\r\n    if (!opt.delimiter) {\r\n        opt.delimiter = \",\"\r\n    }\r\n    opt.limit = $(\"#chkLimit\")[0].checked;\r\n    opt.isRegex = $(\"#chkIsRegex\")[0] ? $(\"#chkIsRegex\")[0].checked :\r\n        false;\r\n    opt.social = $(\"#chkSocial\")[0].checked;\r\n    opt.socialReverse = $(\"#radShow\")[0].checked;\r\n    opt.anchor = $(\"#chkAnchor\")[0].checked;\r\n    opt.limitstr = $(\"#txtLimit\")[0].value;\r\n    opt.append = $(\"#chkAppend\")[0].checked;\r\n    opt.hdr = $(\"#chkCsvHeader\")[0].checked;\r\n    opt.forceCsv = $(\"#chkForceCsv\")[0].checked;\r\n    opt.dup = $(\"#chkDup\")[0].checked;\r\n    opt.sorted = $(\"#chkSort\")[0].checked;\r\n    opt.isList = $(\"#chkList\")[0].checked;\r\n    opt.includeFromUrl = $(\"#chkIncludeFromUrl\")[0] ? $(\"#chkIncludeFromUrl\")[0].checked : true;\r\n    opt.heading = \"URL\";\r\n}\r\n\r\nfunction assignText(inputString) {\r\n    $(\"#txt1\")[0].value = inputString\r\n}\r\n\r\nfunction loadScriptAndRunRepeat(inputURL) {\r\n    if (!inputURL.startsWith(\"?\")) {\r\n        inputURL = \"?\" + inputURL\r\n    }\r\n    loadScript(\"https://www.convertcsv.com/cgi-bin/url-to-json.php\" + inputURL);\r\n}\r\n\r\nfunction loadDataAndRunRepeat(input) {\r\n    opt.url = (input.url || \"\");\r\n    runit(input.html.join(\"\\x0A\"), opt)\r\n}\r\n\r\nfunction loadURLRepeat(inputURL) {\r\n    if (inputURL.trim() == \"\") {\r\n        return false\r\n    }\r\n    loadScriptAndRunRepeat(\"https://www.convertcsv.com?callback=loadDataAndRunRepeat&url=\" + encodeURIComponent(inputURL));\r\n}\r\n\r\nfunction runitonce(inputString, trueOrFalse) {\r\n    var index = 0;\r\n    var tempArray1 = [];\r\n    initOpt();\r\n    listcnt = 0;\r\n    toExcel = trueOrFalse;\r\n    if (!opt.append) {\r\n        $(\"#txta\")[0].value = \"\"\r\n    }\r\n    if (opt.isList) {\r\n        tempArray1 = inputString.split((/\\r\\n|\\r|\\n/));\r\n        if (tempArray1.length > 0 && tempArray1[tempArray1.length - 1].trim() === \"\") {\r\n            tempArray1.splice(-1, 1)\r\n        }\r\n        for (index = 0; index < tempArray1.length; index += 1) {\r\n            if (tempArray1[index] == \"\") {\r\n                continue\r\n            }\r\n            if (tempArray1[index].startsWith(\"http\")) {\r\n                continue\r\n            }\r\n            if (tempArray1[index].startsWith(\"ftp\")) {\r\n                continue\r\n            }\r\n            if (tempArray1[index].startsWith(\"//\")) {\r\n                tempArray1[index] = \"http:\" + tempArray1[index]\r\n            } else {\r\n                tempArray1[index] = tempArray1[index] = \"http://\" + tempArray1[index]\r\n            }\r\n        }\r\n    }\r\n    opt.cnt = tempArray1.length;\r\n    if (opt.isList && tempArray1.length > 0) {\r\n        loadURLRepeat(tempArray1[0]);\r\n        opt.append = true;\r\n        for (index = 1; index < tempArray1.length; index += 1) {\r\n            if (tempArray1[index].trim() === \"\") {\r\n                continue\r\n            }\r\n            loadURLRepeat(tempArray1[index]);\r\n        }\r\n    } else {\r\n        runit(inputString, opt)\r\n    }\r\n}\r\n\r\nfunction runit(inputString, opt) {\r\n    var index, index2, URLwithLinkTag;\r\n    var tempArray2 = [];\r\n    var optHeading = opt.heading;\r\n    var numberOfCols = $(\"#txtNumCols\")[0].value * 1 || 1;\r\n    if (numberOfCols < 1) {\r\n        numberOfCols = 1\r\n    }\r\n    var URLRegexCheck = res.url;\r\n    var tempArray2 = inputString.match(URLRegexCheck) || [];\r\n    var listingURL = $(\"#txtSocial\")[0].value.split(/[ ,]/);\r\n    listingURL = _.filter(listingURL, function (a) {\r\n        return a.trim().length > 0\r\n    });\r\n    if (opt.limit && opt.limitstr.length > 0) {\r\n        if (!opt.isRegex) {\r\n            tempArray2 = _.reject(tempArray2, function (inputURL) {\r\n                return inputURL.toLowerCase().indexOf(opt.limitstr.trim().toLowerCase()) == -1\r\n            })\r\n        } else {\r\n            URLRegexCheck = null;\r\n            try {\r\n                URLRegexCheck = new RegExp(opt.limitstr, \"i\")\r\n            } catch (e) { }\r\n            if (URLRegexCheck) {\r\n                tempArray2 = _.reject(tempArray2, function (inputURL) {\r\n                    return !URLRegexCheck.test(inputURL)\r\n                })\r\n            } else {\r\n                tempArray2 = _.reject(tempArray2, function (inputURL) {\r\n                    return inputURL.toLowerCase().indexOf(opt.limitstr.trim().toLowerCase()) == -1\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if (opt.social) {\r\n        {\r\n            tempArray2 = _.reject(tempArray2, function (inputURL) {\r\n                if (opt.socialReverse) {\r\n                    return _.every(listingURL, function (input) {\r\n                        return inputURL.toLowerCase().indexOf(input.trim().toLowerCase()) == -1\r\n                    })\r\n                } else {\r\n                    return _.any(listingURL, function (input) {\r\n                        return inputURL.toLowerCase().indexOf(input.trim().toLowerCase()) >= 0\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    if (opt.sorted) {\r\n        tempArray2 = tempArray2.sort()\r\n    }\r\n    if (opt.dup) {\r\n        tempArray2 = _.uniq(tempArray2, true)\r\n    }\r\n    var tempArray3 = [];\r\n    if (opt.hdr && numberOfCols > 1 && $(\"#txta\")[0].value === \"\") {\r\n        tempArray3.push(optHeading + \"1\");\r\n        for (index = 2; index <= numberOfCols; index += 1) {\r\n            tempArray3.push(optHeading + index)\r\n        }\r\n        optHeading = tempArray3.join(opt.delimiter);\r\n    }\r\n    if (opt.hdr && $(\"#txta\")[0].value === \"\") {\r\n        $(\"#txta\")[0].value = optHeading;\r\n        if (opt.isList && numberOfCols == 1) {\r\n            $(\"#txta\")[0].value += opt.delimiter + \"FROMURL\"\r\n        }\r\n        $(\"#txta\")[0].value += \"\\x0A\";\r\n    }\r\n    for (index = 0; index < tempArray2.length;) {\r\n        for (index2 = 0; index2 < numberOfCols; index2 += 1, index += 1) {\r\n            if (index < tempArray2.length) {\r\n                URLwithLinkTag = tempArray2[index];\r\n                if (opt.anchor) {\r\n                    URLwithLinkTag = \"<a href=\\\"\" + URLwithLinkTag + \"\\\">\" + URLwithLinkTag + \"</a>\"\r\n                }\r\n                if (opt.forceCsv) {\r\n                    URLwithLinkTag = URLwithLinkTag.toCsv(opt.delimiter)\r\n                }\r\n                $(\"#txta\")[0].value += URLwithLinkTag;\r\n            }\r\n            if (index2 < numberOfCols - 1) {\r\n                $(\"#txta\")[0].value += opt.delimiter\r\n            }\r\n        }\r\n        if (opt.isList && numberOfCols == 1 && opt.includeFromUrl) {\r\n            $(\"#txta\")[0].value += opt.delimiter + (opt.url || \"\")\r\n        }\r\n        $(\"#txta\")[0].value += \"\\x0A\";\r\n    }\r\n    if (opt.isList) {\r\n        listcnt += 1\r\n    }\r\n    if (toExcel && (!opt.isList || listcnt >= opt.cnt)) {\r\n        saveExcel(\"txta\", false)\r\n    }\r\n}\r\n\r\n"],"file":"header.min.js"}